//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v23.44.1.0
//   At: 2024-01-11T11:19:39.2160478+02:00
//
// *** Make sure the version of the codegen tool and your nugets Joysoftware.NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update JoySoftware.NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/v3/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace HomeAssistantGenerated;
public static class GeneratedExtensions
{
    ///<summary>Registers all injectable generated types in the serviceCollection</summary>
    public static IServiceCollection AddHomeAssistantGenerated(this IServiceCollection serviceCollection)
    {
        serviceCollection.AddTransient<Entities>();
        serviceCollection.AddTransient<AutomationEntities>();
        serviceCollection.AddTransient<BinarySensorEntities>();
        serviceCollection.AddTransient<ButtonEntities>();
        serviceCollection.AddTransient<DeviceTrackerEntities>();
        serviceCollection.AddTransient<InputBooleanEntities>();
        serviceCollection.AddTransient<InputDatetimeEntities>();
        serviceCollection.AddTransient<InputNumberEntities>();
        serviceCollection.AddTransient<InputSelectEntities>();
        serviceCollection.AddTransient<InputTextEntities>();
        serviceCollection.AddTransient<LightEntities>();
        serviceCollection.AddTransient<LockEntities>();
        serviceCollection.AddTransient<MediaPlayerEntities>();
        serviceCollection.AddTransient<NumberEntities>();
        serviceCollection.AddTransient<PersonEntities>();
        serviceCollection.AddTransient<SceneEntities>();
        serviceCollection.AddTransient<ScriptEntities>();
        serviceCollection.AddTransient<SelectEntities>();
        serviceCollection.AddTransient<SensorEntities>();
        serviceCollection.AddTransient<SwitchEntities>();
        serviceCollection.AddTransient<UpdateEntities>();
        serviceCollection.AddTransient<WeatherEntities>();
        serviceCollection.AddTransient<ZoneEntities>();
        serviceCollection.AddTransient<SunEntities>();
        serviceCollection.AddTransient<RemoteEntities>();
        serviceCollection.AddTransient<SttEntities>();
        serviceCollection.AddTransient<TtsEntities>();
        serviceCollection.AddTransient<ImageEntities>();
        serviceCollection.AddTransient<CounterEntities>();
        serviceCollection.AddTransient<WakeWordEntities>();
        serviceCollection.AddTransient<Services>();
        serviceCollection.AddTransient<AdguardServices>();
        serviceCollection.AddTransient<AlarmControlPanelServices>();
        serviceCollection.AddTransient<AutomationServices>();
        serviceCollection.AddTransient<ButtonServices>();
        serviceCollection.AddTransient<CameraServices>();
        serviceCollection.AddTransient<CastServices>();
        serviceCollection.AddTransient<ClimateServices>();
        serviceCollection.AddTransient<CloudServices>();
        serviceCollection.AddTransient<ConversationServices>();
        serviceCollection.AddTransient<CounterServices>();
        serviceCollection.AddTransient<CoverServices>();
        serviceCollection.AddTransient<DeviceTrackerServices>();
        serviceCollection.AddTransient<FanServices>();
        serviceCollection.AddTransient<FfmpegServices>();
        serviceCollection.AddTransient<FritzServices>();
        serviceCollection.AddTransient<FrontendServices>();
        serviceCollection.AddTransient<GoogleAssistantServices>();
        serviceCollection.AddTransient<GoogleAssistantSdkServices>();
        serviceCollection.AddTransient<GroupServices>();
        serviceCollection.AddTransient<HassioServices>();
        serviceCollection.AddTransient<HistoryStatsServices>();
        serviceCollection.AddTransient<HomeassistantServices>();
        serviceCollection.AddTransient<HumidifierServices>();
        serviceCollection.AddTransient<InputBooleanServices>();
        serviceCollection.AddTransient<InputButtonServices>();
        serviceCollection.AddTransient<InputDatetimeServices>();
        serviceCollection.AddTransient<InputNumberServices>();
        serviceCollection.AddTransient<InputSelectServices>();
        serviceCollection.AddTransient<InputTextServices>();
        serviceCollection.AddTransient<LawnMowerServices>();
        serviceCollection.AddTransient<LightServices>();
        serviceCollection.AddTransient<LocaltuyaServices>();
        serviceCollection.AddTransient<LockServices>();
        serviceCollection.AddTransient<LogbookServices>();
        serviceCollection.AddTransient<LoggerServices>();
        serviceCollection.AddTransient<MediaPlayerServices>();
        serviceCollection.AddTransient<MqttServices>();
        serviceCollection.AddTransient<NotifyServices>();
        serviceCollection.AddTransient<NumberServices>();
        serviceCollection.AddTransient<PersistentNotificationServices>();
        serviceCollection.AddTransient<PersonServices>();
        serviceCollection.AddTransient<PowercalcServices>();
        serviceCollection.AddTransient<RecorderServices>();
        serviceCollection.AddTransient<RemoteServices>();
        serviceCollection.AddTransient<SceneServices>();
        serviceCollection.AddTransient<ScheduleServices>();
        serviceCollection.AddTransient<SchedulerServices>();
        serviceCollection.AddTransient<ScriptServices>();
        serviceCollection.AddTransient<SelectServices>();
        serviceCollection.AddTransient<ShellCommandServices>();
        serviceCollection.AddTransient<SirenServices>();
        serviceCollection.AddTransient<SwitchServices>();
        serviceCollection.AddTransient<SystemLogServices>();
        serviceCollection.AddTransient<TemplateServices>();
        serviceCollection.AddTransient<TextServices>();
        serviceCollection.AddTransient<TimerServices>();
        serviceCollection.AddTransient<TtsServices>();
        serviceCollection.AddTransient<UpdateServices>();
        serviceCollection.AddTransient<UtilityMeterServices>();
        serviceCollection.AddTransient<VacuumServices>();
        serviceCollection.AddTransient<ValveServices>();
        serviceCollection.AddTransient<WakeOnLanServices>();
        serviceCollection.AddTransient<WaterHeaterServices>();
        serviceCollection.AddTransient<WeatherServices>();
        serviceCollection.AddTransient<ZoneServices>();
        return serviceCollection;
    }
}

public interface IEntities
{
    AutomationEntities Automation { get; }

    BinarySensorEntities BinarySensor { get; }

    ButtonEntities Button { get; }

    DeviceTrackerEntities DeviceTracker { get; }

    InputBooleanEntities InputBoolean { get; }

    InputDatetimeEntities InputDatetime { get; }

    InputNumberEntities InputNumber { get; }

    InputSelectEntities InputSelect { get; }

    InputTextEntities InputText { get; }

    LightEntities Light { get; }

    LockEntities Lock { get; }

    MediaPlayerEntities MediaPlayer { get; }

    NumberEntities Number { get; }

    PersonEntities Person { get; }

    SceneEntities Scene { get; }

    ScriptEntities Script { get; }

    SelectEntities Select { get; }

    SensorEntities Sensor { get; }

    SwitchEntities Switch { get; }

    UpdateEntities Update { get; }

    WeatherEntities Weather { get; }

    ZoneEntities Zone { get; }

    SunEntities Sun { get; }

    RemoteEntities Remote { get; }

    SttEntities Stt { get; }

    TtsEntities Tts { get; }

    ImageEntities Image { get; }

    CounterEntities Counter { get; }

    WakeWordEntities WakeWord { get; }
}

public partial class Entities : IEntities
{
    private readonly IHaContext _haContext;
    public Entities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public AutomationEntities Automation => new(_haContext);
    public BinarySensorEntities BinarySensor => new(_haContext);
    public ButtonEntities Button => new(_haContext);
    public DeviceTrackerEntities DeviceTracker => new(_haContext);
    public InputBooleanEntities InputBoolean => new(_haContext);
    public InputDatetimeEntities InputDatetime => new(_haContext);
    public InputNumberEntities InputNumber => new(_haContext);
    public InputSelectEntities InputSelect => new(_haContext);
    public InputTextEntities InputText => new(_haContext);
    public LightEntities Light => new(_haContext);
    public LockEntities Lock => new(_haContext);
    public MediaPlayerEntities MediaPlayer => new(_haContext);
    public NumberEntities Number => new(_haContext);
    public PersonEntities Person => new(_haContext);
    public SceneEntities Scene => new(_haContext);
    public ScriptEntities Script => new(_haContext);
    public SelectEntities Select => new(_haContext);
    public SensorEntities Sensor => new(_haContext);
    public SwitchEntities Switch => new(_haContext);
    public UpdateEntities Update => new(_haContext);
    public WeatherEntities Weather => new(_haContext);
    public ZoneEntities Zone => new(_haContext);
    public SunEntities Sun => new(_haContext);
    public RemoteEntities Remote => new(_haContext);
    public SttEntities Stt => new(_haContext);
    public TtsEntities Tts => new(_haContext);
    public ImageEntities Image => new(_haContext);
    public CounterEntities Counter => new(_haContext);
    public WakeWordEntities WakeWord => new(_haContext);
}

public partial class AutomationEntities
{
    private readonly IHaContext _haContext;
    public AutomationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Air Purifier</summary>
    public AutomationEntity AirPurifier => new(_haContext, "automation.air_purifier");
    ///<summary>Alarm Automation</summary>
    public AutomationEntity AlarmAutomation => new(_haContext, "automation.alarm_automation");
    ///<summary>Alarm Automation (Duplicate)</summary>
    public AutomationEntity AlarmAutomationDuplicate => new(_haContext, "automation.alarm_automation_duplicate");
    ///<summary>Away From Home</summary>
    public AutomationEntity AwayFromHome => new(_haContext, "automation.away_from_home");
    ///<summary>AwokeTime Helper</summary>
    public AutomationEntity AwoketimeHelper => new(_haContext, "automation.awoketime_helper");
    ///<summary>Bright Light Automation</summary>
    public AutomationEntity BrightLightAutomation => new(_haContext, "automation.bright_light_automation");
    ///<summary>Cable Connected Notification</summary>
    public AutomationEntity CableConnectedNotification => new(_haContext, "automation.cable_connected_notification");
    ///<summary>Cast</summary>
    public AutomationEntity Cast => new(_haContext, "automation.cast");
    ///<summary>Desktop Standing</summary>
    public AutomationEntity DesktopStanding => new(_haContext, "automation.desktop_standing");
    ///<summary>Desktop Standing disabler</summary>
    public AutomationEntity DesktopStandingDisabler => new(_haContext, "automation.desktop_standing_disabler");
    ///<summary>Ecoflow Switchbot Helper</summary>
    public AutomationEntity EcoflowSwitchbotHelper => new(_haContext, "automation.ecoflow_switchbot_helper");
    ///<summary>Ecoflow Timeout</summary>
    public AutomationEntity EcoflowTimeout => new(_haContext, "automation.ecoflow_timeout");
    ///<summary>Energy Calcluations</summary>
    public AutomationEntity EnergyCalcluations => new(_haContext, "automation.energy_calcluations");
    ///<summary>Freezer temp calibration</summary>
    public AutomationEntity FreezerTempCalibration => new(_haContext, "automation.freezer_temp_calibration");
    ///<summary>Fridge Automation</summary>
    public AutomationEntity FridgeAutomation => new(_haContext, "automation.fridge_automation");
    ///<summary>Front Door_Is Home</summary>
    public AutomationEntity FrontDoorIsHome => new(_haContext, "automation.front_door_is_home");
    ///<summary>Frontdoor 2</summary>
    public AutomationEntity Frontdoor2 => new(_haContext, "automation.frontdoor_2");
    ///<summary>(Guest) Guest Mode Notification</summary>
    public AutomationEntity GuestModeNotification => new(_haContext, "automation.guest_mode_notification");
    ///<summary>Humidifier automation</summary>
    public AutomationEntity HumidifierAutomation => new(_haContext, "automation.humidifier_automation");
    ///<summary>IsAsleep-Actions</summary>
    public AutomationEntity IsasleepActions => new(_haContext, "automation.isasleep_actions");
    ///<summary>IsAsleepOffUpdate</summary>
    public AutomationEntity Isasleepoffupdate => new(_haContext, "automation.isasleepoffupdate");
    ///<summary>IsAsleepOnUpdate</summary>
    public AutomationEntity Isasleepupdate => new(_haContext, "automation.isasleepupdate");
    ///<summary>Keep Exercise Thing on</summary>
    public AutomationEntity KeepExerciseThingOn => new(_haContext, "automation.keep_exercise_thing_on");
    ///<summary>Keychain</summary>
    public AutomationEntity Keychain => new(_haContext, "automation.keychain");
    ///<summary>kirchen kight</summary>
    public AutomationEntity KirchenKight => new(_haContext, "automation.kirchen_kight");
    ///<summary>Knob volume control</summary>
    public AutomationEntity KnobVolumeControl => new(_haContext, "automation.knob_volume_control");
    ///<summary>New Automation</summary>
    public AutomationEntity NewAutomation => new(_haContext, "automation.new_automation");
    ///<summary>On Boot</summary>
    public AutomationEntity OnBoot => new(_haContext, "automation.on_boot");
    ///<summary>Pc auto off</summary>
    public AutomationEntity PcAutoOff => new(_haContext, "automation.pc_auto_off");
    ///<summary>Pesukone</summary>
    public AutomationEntity Pesukone => new(_haContext, "automation.pesukone");
    ///<summary>Schedule PC Shutdown</summary>
    public AutomationEntity SchedulePcShutdown => new(_haContext, "automation.schedule_pc_shutdown");
    ///<summary>(Sensor) Bedside Sensor</summary>
    public AutomationEntity SensorBedsideSensor => new(_haContext, "automation.sensor_bedside_sensor");
    ///<summary>Sensors Active Notification</summary>
    public AutomationEntity SensorsActiveNotification => new(_haContext, "automation.sensors_active_notification");
    ///<summary>Homecoming</summary>
    public AutomationEntity Test => new(_haContext, "automation.test");
    ///<summary>Toilet Seat Helper</summary>
    public AutomationEntity ToiletSeatHelper => new(_haContext, "automation.toilet_seat_helper");
    ///<summary>Turn off everything triggerrer</summary>
    public AutomationEntity TurnOffEverythingTriggerrer => new(_haContext, "automation.turn_off_everything_triggerrer");
    ///<summary>Turn off Pc when Lora training done</summary>
    public AutomationEntity TurnOffPcWhenLoraTrainingDone => new(_haContext, "automation.turn_off_pc_when_lora_training_done");
    ///<summary>Turn Off Proxmox and modem</summary>
    public AutomationEntity TurnOffProxmoxAndModem => new(_haContext, "automation.turn_off_proxmox_and_modem");
    ///<summary>TV-Chromecast-PowerSynch</summary>
    public AutomationEntity TvChromecastPowersynch => new(_haContext, "automation.tv_chromecast_powersynch");
    ///<summary>Walking Pad</summary>
    public AutomationEntity WalkingPad => new(_haContext, "automation.walking_pad");
}

public partial class BinarySensorEntities
{
    private readonly IHaContext _haContext;
    public BinarySensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>PC Sensor Motion</summary>
    public BinarySensorEntity _0x001788010bcfb16fOccupancy => new(_haContext, "binary_sensor.0x001788010bcfb16f_occupancy");
    ///<summary>Backups Stale</summary>
    public BinarySensorEntity BackupsStale => new(_haContext, "binary_sensor.backups_stale");
    ///<summary>Bed Light</summary>
    public BinarySensorEntity BedLightUpdateAvailable => new(_haContext, "binary_sensor.bed_light_update_available");
    ///<summary>Bed Light Plug</summary>
    public BinarySensorEntity BrightLightPlugUpdateAvailable => new(_haContext, "binary_sensor.bright_light_plug_update_available");
    ///<summary>Desktop Light</summary>
    public BinarySensorEntity DesktopLightUpdateAvailable => new(_haContext, "binary_sensor.desktop_light_update_available");
    ///<summary>Fan Plug</summary>
    public BinarySensorEntity FanPlugUpdateAvailable => new(_haContext, "binary_sensor.fan_plug_update_available");
    ///<summary>Fridge Contact Sensor Battery</summary>
    public BinarySensorEntity FridgeContactSensorBatteryLow => new(_haContext, "binary_sensor.fridge_contact_sensor_battery_low");
    ///<summary>Fridge Contact Sensor Door</summary>
    public BinarySensorEntity FridgeContactSensorContact => new(_haContext, "binary_sensor.fridge_contact_sensor_contact");
    ///<summary>FridgeTemp</summary>
    public BinarySensorEntity Fridgetemp => new(_haContext, "binary_sensor.fridgetemp");
    ///<summary>FRITZ!Box 6660 Cable Connection</summary>
    public BinarySensorEntity FritzBox6660CableConnection => new(_haContext, "binary_sensor.fritz_box_6660_cable_connection");
    ///<summary>FRITZ!Box 6660 Cable Link</summary>
    public BinarySensorEntity FritzBox6660CableLink => new(_haContext, "binary_sensor.fritz_box_6660_cable_link");
    ///<summary>Front-Door Sensor Door</summary>
    public BinarySensorEntity FrontDoorSensorContact => new(_haContext, "binary_sensor.front_door_sensor_contact");
    ///<summary>Hallway Light</summary>
    public BinarySensorEntity HallwayLightUpdateAvailable => new(_haContext, "binary_sensor.hallway_light_update_available");
    ///<summary>Hallway Sensor Motion</summary>
    public BinarySensorEntity HallwaySensorOccupancy => new(_haContext, "binary_sensor.hallway_sensor_occupancy");
    ///<summary>Hallway Sensor</summary>
    public BinarySensorEntity HallwaySensorUpdateAvailable => new(_haContext, "binary_sensor.hallway_sensor_update_available");
    ///<summary>Home occupancy sensors</summary>
    public BinarySensorEntity HomeOccupancySensors => new(_haContext, "binary_sensor.home_occupancy_sensors");
    ///<summary>Hue Switch Bed</summary>
    public BinarySensorEntity HueSwitchBedUpdateAvailable => new(_haContext, "binary_sensor.hue_switch_bed_update_available");
    ///<summary>Hue Switch Living Room</summary>
    public BinarySensorEntity HueSwitchLivingRoomUpdateAvailable => new(_haContext, "binary_sensor.hue_switch_living_room_update_available");
    ///<summary>InternetGatewayDeviceV2 - FRITZ!Box 6660 Cable WAN status</summary>
    public BinarySensorEntity Internetgatewaydevicev2FritzBox6660CableWanStatus => new(_haContext, "binary_sensor.internetgatewaydevicev2_fritz_box_6660_cable_wan_status");
    ///<summary>is Standing Or Out</summary>
    public BinarySensorEntity IsStandingOrOut => new(_haContext, "binary_sensor.is_standing_or_out");
    ///<summary>Kitchen Distance Helper</summary>
    public BinarySensorEntity KitchenDistanceHelper => new(_haContext, "binary_sensor.kitchen_distance_helper");
    ///<summary>Kitchen Light</summary>
    public BinarySensorEntity KitchenLightUpdateAvailable => new(_haContext, "binary_sensor.kitchen_light_update_available");
    ///<summary>Kitchen Sensor Motion</summary>
    public BinarySensorEntity KitchenSensorOccupancy => new(_haContext, "binary_sensor.kitchen_sensor_occupancy");
    ///<summary>Kitchen Sensor</summary>
    public BinarySensorEntity KitchenSensorUpdateAvailable => new(_haContext, "binary_sensor.kitchen_sensor_update_available");
    ///<summary>Living Room Light</summary>
    public BinarySensorEntity LivingRoomLightUpdateAvailable => new(_haContext, "binary_sensor.living_room_light_update_available");
    ///<summary>Livingroom Window-sensor Door</summary>
    public BinarySensorEntity LivingroomWindowSensorContact => new(_haContext, "binary_sensor.livingroom_window_sensor_contact");
    ///<summary>LivingRoomFP1 Presence</summary>
    public BinarySensorEntity Livingroomfp1Presence => new(_haContext, "binary_sensor.livingroomfp1_presence");
    ///<summary>LXC Jellyfin (101) Status</summary>
    public BinarySensorEntity LxcJellyfin101Status => new(_haContext, "binary_sensor.lxc_jellyfin_101_status");
    ///<summary>moto g(8) power lite Headphones</summary>
    public BinarySensorEntity MotoG8PowerLiteHeadphones => new(_haContext, "binary_sensor.moto_g_8_power_lite_headphones");
    ///<summary>moto g(8) power lite Is charging</summary>
    public BinarySensorEntity MotoG8PowerLiteIsCharging => new(_haContext, "binary_sensor.moto_g_8_power_lite_is_charging");
    ///<summary>moto g(8) power lite Music active</summary>
    public BinarySensorEntity MotoG8PowerLiteMusicActive => new(_haContext, "binary_sensor.moto_g_8_power_lite_music_active");
    ///<summary>Node pve Status</summary>
    public BinarySensorEntity NodePveStatus => new(_haContext, "binary_sensor.node_pve_status");
    ///<summary>Open Curtain Limit</summary>
    public BinarySensorEntity OpenCurtainLimit => new(_haContext, "binary_sensor.open_curtain_limit");
    ///<summary>PC-Plug</summary>
    public BinarySensorEntity PcPlugUpdateAvailable => new(_haContext, "binary_sensor.pc_plug_update_available");
    ///<summary>Portable headphone sensors</summary>
    public BinarySensorEntity PortableHeadphoneSensors => new(_haContext, "binary_sensor.portable_headphone_sensors");
    ///<summary>QEMU haos9.5 (100) Health</summary>
    public BinarySensorEntity QemuHaos95100Health => new(_haContext, "binary_sensor.qemu_haos9_5_100_health");
    ///<summary>QEMU haos9.5 (100) Status</summary>
    public BinarySensorEntity QemuHaos95100Status => new(_haContext, "binary_sensor.qemu_haos9_5_100_status");
    ///<summary>Remote UI</summary>
    public BinarySensorEntity RemoteUi => new(_haContext, "binary_sensor.remote_ui");
    ///<summary>SM-T530 Headphones</summary>
    public BinarySensorEntity SmT530Headphones => new(_haContext, "binary_sensor.sm_t530_headphones");
    ///<summary>SM-T530 Is Charging</summary>
    public BinarySensorEntity SmT530IsCharging => new(_haContext, "binary_sensor.sm_t530_is_charging");
    ///<summary>SM-T530 Music Active</summary>
    public BinarySensorEntity SmT530MusicActive => new(_haContext, "binary_sensor.sm_t530_music_active");
    ///<summary>Lux Sensor Motion</summary>
    public BinarySensorEntity StorageSensorAqaraOccupancy => new(_haContext, "binary_sensor.storage_sensor_aqara_occupancy");
    ///<summary>Storage Sensor Battery</summary>
    public BinarySensorEntity StorageSensorBatteryLow => new(_haContext, "binary_sensor.storage_sensor_battery_low");
    ///<summary>Storage Sensor Motion</summary>
    public BinarySensorEntity StorageSensorOccupancy => new(_haContext, "binary_sensor.storage_sensor_occupancy");
    ///<summary>Storage Sensor Tamper</summary>
    public BinarySensorEntity StorageSensorTamper => new(_haContext, "binary_sensor.storage_sensor_tamper");
    ///<summary>Toilet Light_1</summary>
    public BinarySensorEntity ToiletLight1UpdateAvailable => new(_haContext, "binary_sensor.toilet_light_1_update_available");
    ///<summary>Toilet Seat Sensor Door</summary>
    public BinarySensorEntity ToiletSeatSensorContact => new(_haContext, "binary_sensor.toilet_seat_sensor_contact");
    ///<summary>Toilet Sensor Motion</summary>
    public BinarySensorEntity ToiletSensorOccupancy => new(_haContext, "binary_sensor.toilet_sensor_occupancy");
    ///<summary>Toilet Sensor</summary>
    public BinarySensorEntity ToiletSensorUpdateAvailable => new(_haContext, "binary_sensor.toilet_sensor_update_available");
    ///<summary>Tv Power Meter</summary>
    public BinarySensorEntity TvPowerMeterUpdateAvailable => new(_haContext, "binary_sensor.tv_power_meter_update_available");
    ///<summary>Zatnas Ping</summary>
    public BinarySensorEntity ZatnasPing => new(_haContext, "binary_sensor.zatnas_ping");
    ///<summary>Zigbee2MQTT Bridge Connection state</summary>
    public BinarySensorEntity Zigbee2mqttBridgeConnectionState => new(_haContext, "binary_sensor.zigbee2mqtt_bridge_connection_state");
}

public partial class ButtonEntities
{
    private readonly IHaContext _haContext;
    public ButtonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>ENVY _TurnOffMonitors</summary>
    public ButtonEntity EnvyTurnoffmonitors => new(_haContext, "button.envy_turnoffmonitors");
    ///<summary>ENVY _WakeKey</summary>
    public ButtonEntity EnvyWakekey => new(_haContext, "button.envy_wakekey");
    ///<summary>FRITZ!Box 6660 Cable Cleanup</summary>
    public ButtonEntity FritzBox6660CableCleanup => new(_haContext, "button.fritz_box_6660_cable_cleanup");
    ///<summary>FRITZ!Box 6660 Cable Firmware update</summary>
    public ButtonEntity FritzBox6660CableFirmwareUpdate => new(_haContext, "button.fritz_box_6660_cable_firmware_update");
    ///<summary>FRITZ!Box 6660 Cable Reconnect</summary>
    public ButtonEntity FritzBox6660CableReconnect => new(_haContext, "button.fritz_box_6660_cable_reconnect");
    ///<summary>FRITZ!Box 6660 Cable Restart</summary>
    public ButtonEntity FritzBox6660CableRestart => new(_haContext, "button.fritz_box_6660_cable_restart");
    ///<summary>Node pve Reboot</summary>
    public ButtonEntity NodePveReboot => new(_haContext, "button.node_pve_reboot");
    ///<summary>Node pve Shutdown</summary>
    public ButtonEntity NodePveShutdown => new(_haContext, "button.node_pve_shutdown");
    ///<summary>PC _mediavolumedown</summary>
    public ButtonEntity PcMediavolumedown => new(_haContext, "button.pc_mediavolumedown");
    ///<summary>PC _mediavolumeup</summary>
    public ButtonEntity PcMediavolumeup => new(_haContext, "button.pc_mediavolumeup");
    ///<summary>PC -ResetBrigtness</summary>
    public ButtonEntity PcResetbrigtness => new(_haContext, "button.pc_resetbrigtness");
    ///<summary>PC Shutdown</summary>
    public ButtonEntity PcShutdown => new(_haContext, "button.pc_shutdown");
    ///<summary>PC _ShutDownCancel</summary>
    public ButtonEntity PcShutdowncancel => new(_haContext, "button.pc_shutdowncancel");
    ///<summary>PC _TurnOffMonitors</summary>
    public ButtonEntity PcTurnoffmonitors => new(_haContext, "button.pc_turnoffmonitors");
    ///<summary>PC _WakeKey</summary>
    public ButtonEntity PcWakekey => new(_haContext, "button.pc_wakekey");
    ///<summary>Google Assistant Synchronize devices</summary>
    public ButtonEntity SynchronizeDevices => new(_haContext, "button.synchronize_devices");
    ///<summary>Zigbee2MQTT Bridge Restart</summary>
    public ButtonEntity Zigbee2mqttBridgeRestart => new(_haContext, "button.zigbee2mqtt_bridge_restart");
}

public partial class DeviceTrackerEntities
{
    private readonly IHaContext _haContext;
    public DeviceTrackerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>android-4db5a5b9f2c9a5dd</summary>
    public DeviceTrackerEntity Android4db5a5b9f2c9a5dd => new(_haContext, "device_tracker.android_4db5a5b9f2c9a5dd");
    ///<summary>Backpack</summary>
    public DeviceTrackerEntity Backpack => new(_haContext, "device_tracker.backpack");
    ///<summary>chromecastwithgoogletv</summary>
    public DeviceTrackerEntity Chromecastwithgoogletv => new(_haContext, "device_tracker.chromecastwithgoogletv");
    ///<summary>DESKTOP-9RQRGIO</summary>
    public DeviceTrackerEntity Desktop9rqrgio => new(_haContext, "device_tracker.desktop_9rqrgio");
    ///<summary>DESKTOP-K24V8NP</summary>
    public DeviceTrackerEntity DesktopK24v8np => new(_haContext, "device_tracker.desktop_k24v8np");
    ///<summary>Envy</summary>
    public DeviceTrackerEntity Envy => new(_haContext, "device_tracker.envy");
    ///<summary>Envy</summary>
    public DeviceTrackerEntity Envy2 => new(_haContext, "device_tracker.envy_2");
    ///<summary>Desktop-disctance</summary>
    public DeviceTrackerEntity Esp32Ee4b54 => new(_haContext, "device_tracker.esp32_ee4b54");
    ///<summary>ecoflow</summary>
    public DeviceTrackerEntity Espressif => new(_haContext, "device_tracker.espressif");
    ///<summary>Galaxy-A51</summary>
    public DeviceTrackerEntity GalaxyA51 => new(_haContext, "device_tracker.galaxy_a51");
    ///<summary>fuchsia-1c53-f9e1-9a4e</summary>
    public DeviceTrackerEntity GoogleNestHub => new(_haContext, "device_tracker.google_nest_hub");
    ///<summary>Google-Nest-Mini</summary>
    public DeviceTrackerEntity GoogleNestMini => new(_haContext, "device_tracker.google_nest_mini");
    ///<summary>homeAssistant</summary>
    public DeviceTrackerEntity Homeassistant => new(_haContext, "device_tracker.homeassistant");
    ///<summary>homeassistantcontainer</summary>
    public DeviceTrackerEntity Homeassistantcontainer => new(_haContext, "device_tracker.homeassistantcontainer");
    ///<summary>IR-Remote</summary>
    public DeviceTrackerEntity IrRemote => new(_haContext, "device_tracker.ir_remote");
    ///<summary>jaeaekaapinlaempoemittari</summary>
    public DeviceTrackerEntity Jaeaekaapinlaempoemittari => new(_haContext, "device_tracker.jaeaekaapinlaempoemittari");
    ///<summary>wlan0</summary>
    public DeviceTrackerEntity LaptopRnusi7lb => new(_haContext, "device_tracker.laptop_rnusi7lb");
    ///<summary>mainpc</summary>
    public DeviceTrackerEntity Mainpc => new(_haContext, "device_tracker.mainpc");
    ///<summary>maxciopistoke</summary>
    public DeviceTrackerEntity Maxciopistoke => new(_haContext, "device_tracker.maxciopistoke");
    ///<summary>mediaserver</summary>
    public DeviceTrackerEntity Mediaserver => new(_haContext, "device_tracker.mediaserver");
    ///<summary>moto g(8) power lite</summary>
    public DeviceTrackerEntity MotoG8PowerLite => new(_haContext, "device_tracker.moto_g_8_power_lite");
    ///<summary>moto g(8) power lite</summary>
    public DeviceTrackerEntity MotoG8PowerLite2 => new(_haContext, "device_tracker.moto_g_8_power_lite_2");
    ///<summary>nintendoswitch</summary>
    public DeviceTrackerEntity Nintendoswitch => new(_haContext, "device_tracker.nintendoswitch");
    ///<summary>switchlan</summary>
    public DeviceTrackerEntity Pc192168024 => new(_haContext, "device_tracker.pc_192_168_0_24");
    ///<summary>Jellyfin</summary>
    public DeviceTrackerEntity Pc5680C34602F8 => new(_haContext, "device_tracker.pc_56_80_c3_46_02_f8");
    ///<summary>minitemp-humiditysensor</summary>
    public DeviceTrackerEntity PcA09208902291 => new(_haContext, "device_tracker.pc_a0_92_08_90_22_91");
    ///<summary>DESKTOP-AOTDDD2</summary>
    public DeviceTrackerEntity PcB4Ae2bE4A3F8 => new(_haContext, "device_tracker.pc_b4_ae_2b_e4_a3_f8");
    ///<summary>Puhelin</summary>
    public DeviceTrackerEntity Puhelin => new(_haContext, "device_tracker.puhelin");
    ///<summary>Puhelin</summary>
    public DeviceTrackerEntity Puhelin2 => new(_haContext, "device_tracker.puhelin_2");
    ///<summary>SM-T530</summary>
    public DeviceTrackerEntity SmT530 => new(_haContext, "device_tracker.sm_t530");
    ///<summary>Wallet</summary>
    public DeviceTrackerEntity Wallet => new(_haContext, "device_tracker.wallet");
    ///<summary>zatman-MacBookPro</summary>
    public DeviceTrackerEntity ZatmanMacbookpro => new(_haContext, "device_tracker.zatman_macbookpro");
    ///<summary>Zatnas</summary>
    public DeviceTrackerEntity Zatnas => new(_haContext, "device_tracker.zatnas");
}

public partial class InputBooleanEntities
{
    private readonly IHaContext _haContext;
    public InputBooleanEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Alarm Enabled</summary>
    public InputBooleanEntity Alarmenabled => new(_haContext, "input_boolean.alarmenabled");
    ///<summary>Auto Turn Off Server</summary>
    public InputBooleanEntity AutoTurnOffServer => new(_haContext, "input_boolean.auto_turn_off_server");
    ///<summary>Desktop Monitoring</summary>
    public InputBooleanEntity DesktopMonitoring => new(_haContext, "input_boolean.desktop_monitoring");
    ///<summary>Desktop Standing</summary>
    public InputBooleanEntity DesktopStanding => new(_haContext, "input_boolean.desktop_standing");
    ///<summary>Ecoflow Allow 0-Battery</summary>
    public InputBooleanEntity EcoflowAllow0Battery => new(_haContext, "input_boolean.ecoflow_allow_0_battery");
    ///<summary>Ecoflow Switchbot Helper</summary>
    public InputBooleanEntity EcoflowSwitchbotHelper => new(_haContext, "input_boolean.ecoflow_switchbot_helper");
    ///<summary>Guest Mode</summary>
    public InputBooleanEntity GuestMode => new(_haContext, "input_boolean.guest_mode");
    ///<summary>Hydration Check Active</summary>
    public InputBooleanEntity HydrationCheckActive => new(_haContext, "input_boolean.hydration_check_active");
    ///<summary>IsAsleep</summary>
    public InputBooleanEntity Isasleep => new(_haContext, "input_boolean.isasleep");
    ///<summary>IsHome</summary>
    public InputBooleanEntity Ishome => new(_haContext, "input_boolean.ishome");
    ///<summary>Media Playing</summary>
    public InputBooleanEntity MediaPlaying => new(_haContext, "input_boolean.media_playing");
    ///<summary>NAS On</summary>
    public InputBooleanEntity NasOn => new(_haContext, "input_boolean.nas_on");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp110 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_10");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1100 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_100");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1101 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_101");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1102 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_102");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1103 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_103");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1104 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_104");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1105 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_105");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1106 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_106");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1107 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_107");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1108 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_108");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1109 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_109");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp111 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_11");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1110 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_110");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1111 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_111");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1112 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_112");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1113 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_113");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1114 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_114");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1115 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_115");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1116 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_116");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1117 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_117");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1118 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_118");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1119 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_119");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp112 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_12");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1120 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_120");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1121 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_121");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1122 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_122");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1123 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_123");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1124 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_124");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1125 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_125");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1126 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_126");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1127 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_127");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1128 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_128");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1129 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_129");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp113 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_13");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1130 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_130");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1131 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_131");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1132 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_132");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1133 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_133");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1134 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_134");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1135 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_135");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1136 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_136");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1137 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_137");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1138 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_138");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1139 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_139");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp114 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_14");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1140 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_140");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1141 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_141");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1142 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_142");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1143 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_143");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1144 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_144");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1145 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_145");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1146 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_146");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1147 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_147");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1148 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_148");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1149 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_149");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp115 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_15");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1150 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_150");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1151 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_151");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1152 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_152");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1153 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_153");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1154 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_154");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1155 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_155");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1156 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_156");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1157 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_157");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1158 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_158");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1159 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_159");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp116 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_16");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1160 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_160");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1161 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_161");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1162 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_162");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1163 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_163");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1164 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_164");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1165 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_165");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1166 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_166");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1167 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_167");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1168 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_168");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1169 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_169");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp117 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_17");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1170 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_170");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1171 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_171");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1172 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_172");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1173 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_173");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1174 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_174");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1175 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_175");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1176 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_176");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1177 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_177");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1178 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_178");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1179 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_179");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp118 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_18");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1180 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_180");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1181 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_181");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1182 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_182");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1183 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_183");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1184 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_184");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1185 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_185");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1186 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_186");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1187 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_187");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1188 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_188");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1189 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_189");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp119 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_19");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1190 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_190");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1191 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_191");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1192 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_192");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1193 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_193");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1194 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_194");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1195 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_195");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1196 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_196");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1197 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_197");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1198 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_198");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1199 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_199");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp12 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_2");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp120 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_20");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1200 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_200");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1201 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_201");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1202 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_202");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1203 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_203");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1204 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_204");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1205 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_205");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1206 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_206");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1207 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_207");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1208 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_208");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1209 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_209");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp121 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_21");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1210 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_210");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1211 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_211");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1212 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_212");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1213 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_213");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1214 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_214");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1215 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_215");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1216 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_216");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1217 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_217");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1218 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_218");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1219 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_219");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp122 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_22");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1220 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_220");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1221 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_221");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1222 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_222");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1223 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_223");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1224 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_224");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1225 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_225");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1226 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_226");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1227 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_227");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1228 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_228");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1229 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_229");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp123 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_23");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1230 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_230");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1231 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_231");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1232 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_232");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1233 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_233");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1234 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_234");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1235 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_235");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1236 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_236");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1237 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_237");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1238 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_238");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1239 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_239");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp124 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_24");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1240 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_240");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1241 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_241");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1242 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_242");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1243 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_243");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1244 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_244");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1245 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_245");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1246 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_246");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1247 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_247");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1248 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_248");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1249 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_249");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp125 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_25");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1250 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_250");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1251 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_251");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1252 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_252");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1253 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_253");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1254 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_254");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1255 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_255");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1256 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_256");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1257 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_257");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1258 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_258");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1259 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_259");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp126 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_26");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1260 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_260");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1261 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_261");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1262 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_262");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1263 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_263");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1264 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_264");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1265 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_265");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1266 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_266");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1267 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_267");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1268 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_268");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1269 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_269");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp127 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_27");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1270 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_270");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1271 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_271");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1272 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_272");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1273 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_273");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1274 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_274");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1275 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_275");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1276 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_276");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1277 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_277");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1278 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_278");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1279 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_279");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp128 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_28");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1280 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_280");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1281 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_281");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1282 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_282");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1283 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_283");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1284 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_284");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1285 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_285");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1286 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_286");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1287 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_287");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1288 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_288");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1289 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_289");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp129 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_29");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1290 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_290");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1291 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_291");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1292 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_292");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1293 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_293");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1294 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_294");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1295 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_295");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1296 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_296");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1297 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_297");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1298 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_298");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1299 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_299");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp13 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_3");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp130 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_30");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1300 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_300");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1301 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_301");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1302 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_302");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1303 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_303");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1304 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_304");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1305 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_305");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1306 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_306");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1307 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_307");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1308 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_308");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1309 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_309");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp131 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_31");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1310 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_310");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1311 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_311");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1312 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_312");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1313 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_313");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1314 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_314");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1315 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_315");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1316 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_316");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1317 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_317");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1318 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_318");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1319 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_319");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp132 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_32");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1320 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_320");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1321 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_321");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1322 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_322");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1323 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_323");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1324 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_324");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1325 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_325");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1326 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_326");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1327 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_327");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1328 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_328");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1329 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_329");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp133 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_33");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp1330 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_330");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp134 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_34");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp135 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_35");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp136 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_36");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp137 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_37");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp138 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_38");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp139 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_39");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp14 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_4");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp140 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_40");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp141 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_41");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp142 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_42");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp143 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_43");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp144 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_44");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp145 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_45");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp146 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_46");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp147 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_47");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp148 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_48");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp149 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_49");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp15 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_5");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp150 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_50");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp151 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_51");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp152 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_52");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp153 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_53");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp154 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_54");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp155 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_55");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp156 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_56");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp157 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_57");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp158 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_58");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp159 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_59");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp16 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_6");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp160 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_60");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp161 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_61");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp162 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_62");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp163 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_63");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp164 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_64");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp165 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_65");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp166 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_66");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp167 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_67");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp168 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_68");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp169 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_69");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp17 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_7");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp170 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_70");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp171 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_71");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp172 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_72");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp173 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_73");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp174 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_74");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp175 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_75");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp176 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_76");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp177 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_77");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp178 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_78");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp179 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_79");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp18 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_8");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp180 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_80");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp181 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_81");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp182 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_82");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp183 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_83");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp184 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_84");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp185 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_85");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp186 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_86");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp187 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_87");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp188 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_88");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp189 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_89");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp19 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_9");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp190 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_90");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp191 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_91");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp192 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_92");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp193 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_93");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp194 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_94");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp195 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_95");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp196 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_96");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp197 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_97");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp198 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_98");
    ///<summary>netdaemon_net_daemon_apps_apps__01_living_room_fp1</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps01LivingRoomFp199 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_01_living_room_fp1_99");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl10 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_10");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl100 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_100");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl101 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_101");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl102 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_102");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl103 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_103");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl104 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_104");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl105 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_105");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl106 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_106");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl107 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_107");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl108 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_108");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl109 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_109");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl11 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_11");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl110 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_110");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl111 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_111");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl112 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_112");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl113 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_113");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl114 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_114");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl115 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_115");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl116 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_116");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl117 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_117");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl118 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_118");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl119 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_119");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl12 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_12");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl120 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_120");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl121 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_121");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl122 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_122");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl123 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_123");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl124 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_124");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl125 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_125");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl126 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_126");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl127 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_127");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl128 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_128");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl129 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_129");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl13 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_13");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl130 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_130");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl131 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_131");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl132 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_132");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl133 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_133");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl134 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_134");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl135 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_135");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl136 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_136");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl137 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_137");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl138 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_138");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl139 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_139");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl14 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_14");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl140 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_140");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl141 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_141");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl142 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_142");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl143 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_143");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl144 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_144");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl145 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_145");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl146 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_146");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl147 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_147");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl148 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_148");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl149 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_149");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl15 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_15");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl150 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_150");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl151 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_151");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl152 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_152");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl153 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_153");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl154 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_154");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl155 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_155");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl156 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_156");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl157 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_157");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl158 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_158");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl159 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_159");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl16 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_16");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl160 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_160");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl161 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_161");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl162 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_162");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl163 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_163");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl164 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_164");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl165 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_165");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl166 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_166");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl167 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_167");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl168 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_168");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl169 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_169");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl17 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_17");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl170 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_170");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl171 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_171");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl172 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_172");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl173 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_173");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl174 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_174");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl175 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_175");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl176 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_176");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl177 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_177");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl178 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_178");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl179 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_179");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl18 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_18");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl180 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_180");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl181 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_181");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl182 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_182");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl183 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_183");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl184 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_184");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl185 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_185");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl186 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_186");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl187 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_187");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl188 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_188");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl189 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_189");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl19 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_19");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl190 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_190");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl191 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_191");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl192 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_192");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl193 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_193");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl194 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_194");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl195 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_195");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl196 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_196");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl197 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_197");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl198 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_198");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl199 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_199");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl2 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_2");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl20 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_20");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl200 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_200");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl201 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_201");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl202 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_202");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl203 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_203");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl204 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_204");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl205 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_205");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl206 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_206");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl207 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_207");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl208 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_208");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl209 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_209");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl21 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_21");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl210 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_210");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl211 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_211");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl212 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_212");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl213 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_213");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl214 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_214");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl215 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_215");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl216 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_216");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl217 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_217");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl218 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_218");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl219 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_219");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl22 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_22");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl220 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_220");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl221 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_221");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl222 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_222");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl223 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_223");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl224 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_224");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl225 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_225");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl226 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_226");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl227 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_227");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl228 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_228");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl229 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_229");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl23 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_23");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl230 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_230");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl231 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_231");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl232 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_232");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl233 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_233");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl234 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_234");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl235 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_235");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl236 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_236");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl237 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_237");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl238 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_238");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl239 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_239");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl24 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_24");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl240 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_240");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl241 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_241");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl242 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_242");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl243 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_243");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl244 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_244");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl245 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_245");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl246 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_246");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl247 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_247");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl248 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_248");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl249 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_249");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl25 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_25");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl250 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_250");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl251 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_251");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl252 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_252");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl253 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_253");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl254 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_254");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl255 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_255");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl256 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_256");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl257 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_257");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl258 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_258");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl259 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_259");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl26 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_26");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl260 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_260");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl261 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_261");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl262 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_262");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl263 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_263");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl264 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_264");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl265 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_265");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl266 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_266");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl267 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_267");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl268 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_268");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl269 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_269");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl27 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_27");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl270 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_270");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl271 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_271");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl272 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_272");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl273 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_273");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl274 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_274");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl275 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_275");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl276 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_276");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl277 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_277");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl278 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_278");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl279 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_279");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl28 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_28");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl280 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_280");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl281 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_281");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl282 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_282");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl283 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_283");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl284 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_284");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl285 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_285");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl286 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_286");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl287 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_287");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl288 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_288");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl289 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_289");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl29 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_29");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl290 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_290");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl291 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_291");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl292 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_292");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl293 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_293");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl294 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_294");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl295 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_295");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl296 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_296");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl297 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_297");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl298 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_298");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl299 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_299");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl3 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_3");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl30 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_30");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl300 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_300");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl301 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_301");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl302 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_302");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl303 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_303");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl304 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_304");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl305 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_305");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl306 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_306");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl307 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_307");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl308 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_308");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl309 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_309");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl31 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_31");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl310 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_310");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl311 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_311");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl312 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_312");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl313 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_313");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl314 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_314");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl315 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_315");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl316 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_316");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl317 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_317");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl318 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_318");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl319 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_319");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl32 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_32");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl320 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_320");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl321 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_321");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl322 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_322");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl323 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_323");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl324 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_324");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl325 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_325");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl326 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_326");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl327 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_327");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl328 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_328");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl329 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_329");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl33 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_33");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl330 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_330");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl34 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_34");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl35 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_35");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl36 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_36");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl37 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_37");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl38 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_38");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl39 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_39");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl4 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_4");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl40 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_40");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl41 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_41");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl42 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_42");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl43 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_43");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl44 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_44");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl45 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_45");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl46 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_46");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl47 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_47");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl48 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_48");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl49 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_49");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl5 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_5");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl50 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_50");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl51 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_51");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl52 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_52");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl53 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_53");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl54 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_54");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl55 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_55");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl56 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_56");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl57 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_57");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl58 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_58");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl59 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_59");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl6 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_6");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl60 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_60");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl61 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_61");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl62 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_62");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl63 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_63");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl64 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_64");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl65 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_65");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl66 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_66");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl67 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_67");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl68 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_68");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl69 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_69");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl7 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_7");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl70 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_70");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl71 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_71");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl72 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_72");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl73 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_73");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl74 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_74");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl75 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_75");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl76 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_76");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl77 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_77");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl78 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_78");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl79 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_79");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl8 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_8");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl80 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_80");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl81 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_81");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl82 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_82");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl83 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_83");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl84 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_84");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl85 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_85");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl86 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_86");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl87 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_87");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl88 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_88");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl89 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_89");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl9 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_9");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl90 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_90");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl91 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_91");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl92 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_92");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl93 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_93");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl94 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_94");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl95 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_95");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl96 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_96");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl97 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_97");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl98 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_98");
    ///<summary>netdaemon_net_daemon_apps_apps__0gbl</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsApps0gbl99 => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_0gbl_99");
    ///<summary>netdaemon_net_daemon_apps_apps_agara_cube_living_room</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsAgaraCubeLivingRoom => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_agara_cube_living_room");
    ///<summary>netdaemon_net_daemon_apps_apps_audio_output_monitor</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsAudioOutputMonitor => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_audio_output_monitor");
    ///<summary>netdaemon_net_daemon_apps_apps_auto_turn_offs</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsAutoTurnOffs => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_auto_turn_offs");
    ///<summary>netdaemon_net_daemon_apps_apps_eco_flow_manager</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsEcoFlowManager => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_eco_flow_manager");
    ///<summary>netdaemon_net_daemon_apps_apps_energy_monitor</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsEnergyMonitor => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_energy_monitor");
    ///<summary>netdaemon_net_daemon_apps_apps_is_asleep_monitor</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsIsAsleepMonitor => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_is_asleep_monitor");
    ///<summary>netdaemon_net_daemon_apps_apps_knobs</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsKnobs => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_knobs");
    ///<summary>netdaemon_net_daemon_apps_apps_lights_lights_and_sensors</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsLightsLightsAndSensors => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_lights_lights_and_sensors");
    ///<summary>netdaemon_net_daemon_apps_apps_lights_livingroom_lights</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsLightsLivingroomLights => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_lights_livingroom_lights");
    ///<summary>netdaemon_net_daemon_apps_apps_lights_toiler_light_automation</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsLightsToilerLightAutomation => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_lights_toiler_light_automation");
    ///<summary>netdaemon_net_daemon_apps_apps_media_playing_monitor</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsMediaPlayingMonitor => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_media_playing_monitor");
    ///<summary>netdaemon_net_daemon_apps_apps_notifications</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsNotifications => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_notifications");
    ///<summary>netdaemon_net_daemon_apps_apps_step_counter</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsStepCounter => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_step_counter");
    ///<summary>netdaemon_net_daemon_apps_apps_tts</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsAppsTts => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_apps_tts");
    ///<summary>Notification Alarm</summary>
    public InputBooleanEntity NotificationAlarm => new(_haContext, "input_boolean.notification_alarm");
    ///<summary>Notification Ecoflow</summary>
    public InputBooleanEntity NotificationEcoflow => new(_haContext, "input_boolean.notification_ecoflow");
    ///<summary>Notification Energy Daily Update</summary>
    public InputBooleanEntity NotificationEnergyDailyUpdate => new(_haContext, "input_boolean.notification_energy_daily_update");
    ///<summary>Notification Energy Price Change</summary>
    public InputBooleanEntity NotificationEnergyPriceChange => new(_haContext, "input_boolean.notification_energy_price_change");
    ///<summary>Notification Energy Solar</summary>
    public InputBooleanEntity NotificationEnergySolar => new(_haContext, "input_boolean.notification_energy_solar");
    ///<summary>Notification Gaming Time</summary>
    public InputBooleanEntity NotificationGamingTime => new(_haContext, "input_boolean.notification_gaming_time");
    ///<summary>Notification Humidifier</summary>
    public InputBooleanEntity NotificationHumidifier => new(_haContext, "input_boolean.notification_humidifier");
    ///<summary>Notification Hydration Check</summary>
    public InputBooleanEntity NotificationHydrationCheck => new(_haContext, "input_boolean.notification_hydration_check");
    ///<summary>Notification Memory Alert</summary>
    public InputBooleanEntity NotificationMemoryAlert => new(_haContext, "input_boolean.notification_memory_alert");
    ///<summary>Notification Phone Battery</summary>
    public InputBooleanEntity NotificationPhoneBattery => new(_haContext, "input_boolean.notification_phone_battery");
    ///<summary>Notification Standing</summary>
    public InputBooleanEntity NotificationStanding => new(_haContext, "input_boolean.notification_standing");
    ///<summary>Notification Step Counter</summary>
    public InputBooleanEntity NotificationStepCounter => new(_haContext, "input_boolean.notification_step_counter");
    ///<summary>Pf1 Living room - Region 1 Entered</summary>
    public InputBooleanEntity Pf1LrR1 => new(_haContext, "input_boolean.pf1_lr_r1");
    ///<summary>Pf1 Living room - Region 10 Entered</summary>
    public InputBooleanEntity Pf1LrR110 => new(_haContext, "input_boolean.pf1_lr_r110");
    ///<summary>Pf1 Living room - Region 2 Entered</summary>
    public InputBooleanEntity Pf1LrR2 => new(_haContext, "input_boolean.pf1_lr_r2");
    ///<summary>Pf1 Living room - Region 3 Entered</summary>
    public InputBooleanEntity Pf1LrR3 => new(_haContext, "input_boolean.pf1_lr_r3");
    ///<summary>Pf1 Living room - Region 4 Entered</summary>
    public InputBooleanEntity Pf1LrR4 => new(_haContext, "input_boolean.pf1_lr_r4");
    ///<summary>Pf1 Living room - Region 5 Entered</summary>
    public InputBooleanEntity Pf1LrR5 => new(_haContext, "input_boolean.pf1_lr_r5");
    ///<summary>Pf1 Living room - Region 6 Entered</summary>
    public InputBooleanEntity Pf1LrR6 => new(_haContext, "input_boolean.pf1_lr_r6");
    ///<summary>Pf1 Living room - Region 7 Entered</summary>
    public InputBooleanEntity Pf1LrR7 => new(_haContext, "input_boolean.pf1_lr_r7");
    ///<summary>Pf1 Living room - Region 8 Entered</summary>
    public InputBooleanEntity Pf1LrR8 => new(_haContext, "input_boolean.pf1_lr_r8");
    ///<summary>Pf1 Living room - Region 9 Entered</summary>
    public InputBooleanEntity Pf1LrR9 => new(_haContext, "input_boolean.pf1_lr_r9");
    ///<summary>Sensors Active</summary>
    public InputBooleanEntity SensorsActive => new(_haContext, "input_boolean.sensors_active");
    ///<summary>Should Send Audio Notifications</summary>
    public InputBooleanEntity ShouldSendAudioNotifications => new(_haContext, "input_boolean.should_send_audio_notifications");
    ///<summary>ToiletSeatHelper</summary>
    public InputBooleanEntity Toiletseathelper => new(_haContext, "input_boolean.toiletseathelper");
    ///<summary>Turn Off everything helper</summary>
    public InputBooleanEntity TurnOffEverythingHelper => new(_haContext, "input_boolean.turn_off_everything_helper");
}

public partial class InputDatetimeEntities
{
    private readonly IHaContext _haContext;
    public InputDatetimeEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>AlarmTime</summary>
    public InputDatetimeEntity Alarmtime => new(_haContext, "input_datetime.alarmtime");
    ///<summary>AwokeTime</summary>
    public InputDatetimeEntity Awoketime => new(_haContext, "input_datetime.awoketime");
    ///<summary>Energy Change Time</summary>
    public InputDatetimeEntity EnergyChangeTime => new(_haContext, "input_datetime.energy_change_time");
    ///<summary>IsAsleepTimeHelper</summary>
    public InputDatetimeEntity Isasleephelper1 => new(_haContext, "input_datetime.isasleephelper1");
    ///<summary>LastIsAsleepTime</summary>
    public InputDatetimeEntity Lastisasleeptime => new(_haContext, "input_datetime.lastisasleeptime");
    ///<summary>LastKnownDate</summary>
    public InputDatetimeEntity Lastknowndate => new(_haContext, "input_datetime.lastknowndate");
    ///<summary>Next Planned EcoCharge</summary>
    public InputDatetimeEntity NextPlannedEcocharge => new(_haContext, "input_datetime.next_planned_ecocharge");
    ///<summary>Settings_Sleepduration</summary>
    public InputDatetimeEntity SettingsSleepduration => new(_haContext, "input_datetime.settings_sleepduration");
    ///<summary>SleepStartTime</summary>
    public InputDatetimeEntity Sleepstarttime => new(_haContext, "input_datetime.sleepstarttime");
}

public partial class InputNumberEntities
{
    private readonly IHaContext _haContext;
    public InputNumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Combined PC Energy + Fridge</summary>
    public InputNumberEntity CombinedPcEnergy => new(_haContext, "input_number.combined_pc_energy");
    ///<summary>Daily Energy Save Helper</summary>
    public InputNumberEntity DailyEnergySaveHelper => new(_haContext, "input_number.daily_energy_save_helper");
    ///<summary>DailySteps</summary>
    public InputNumberEntity Dailysteps => new(_haContext, "input_number.dailysteps");
    ///<summary>Ecoflow Charing Cost</summary>
    public InputNumberEntity EcoflowCharingCost => new(_haContext, "input_number.ecoflow_charing_cost");
    ///<summary>Ecoflow Solar Recors</summary>
    public InputNumberEntity EcoflowSolarRecors => new(_haContext, "input_number.ecoflow_solar_recors");
    ///<summary>Energy Cost Daily</summary>
    public InputNumberEntity EnergyCostDaily => new(_haContext, "input_number.energy_cost_daily");
    ///<summary>Energy Cost Hourly</summary>
    public InputNumberEntity EnergyCostHourly => new(_haContext, "input_number.energy_cost_hourly");
    ///<summary>Energy_Fortum_ALV</summary>
    public InputNumberEntity EnergyFortumAlv => new(_haContext, "input_number.energy_fortum_alv");
    ///<summary>Energy_Fortum_Hard_cost</summary>
    public InputNumberEntity EnergyFortumHardCost => new(_haContext, "input_number.energy_fortum_hard_cost");
    ///<summary>Energy Price Modifier</summary>
    public InputNumberEntity EnergyPriceModifier => new(_haContext, "input_number.energy_price_modifier");
    ///<summary>Energy_Transfer_ALV</summary>
    public InputNumberEntity EnergyTransferAlv => new(_haContext, "input_number.energy_transfer_alv");
    ///<summary>Energy_Transfer_cost</summary>
    public InputNumberEntity EnergyTransferCost => new(_haContext, "input_number.energy_transfer_cost");
    ///<summary>Freezer Preferred</summary>
    public InputNumberEntity FreezerPreferred => new(_haContext, "input_number.freezer_preferred");
    ///<summary>Last Know Step Threshold</summary>
    public InputNumberEntity LastKnowStepThreshold => new(_haContext, "input_number.last_know_step_threshold");
    ///<summary>Sensor Luminance Threshold</summary>
    public InputNumberEntity SensorLuminanceThreshold => new(_haContext, "input_number.sensor_luminance_threshold");
    ///<summary>Settings Default Knob Step</summary>
    public InputNumberEntity SettingsDefaultKnobStep => new(_haContext, "input_number.settings_default_knob_step");
    ///<summary>Settings Knob Sensitivity</summary>
    public InputNumberEntity SettingsKnobSensitivity => new(_haContext, "input_number.settings_knob_sensitivity");
    ///<summary>Settings_LaptopChargerTurnOnPercent</summary>
    public InputNumberEntity SettingsLaptopchargerturnonpercent => new(_haContext, "input_number.settings_laptopchargerturnonpercent");
    ///<summary>Settings_LightOnLuminancy</summary>
    public InputNumberEntity SettingsLightonluminancy => new(_haContext, "input_number.settings_lightonluminancy");
    ///<summary>Temparature Outside Calibrated</summary>
    public InputNumberEntity TemparatureOutsideCalibrated => new(_haContext, "input_number.temparature_outside_calibrated");
    ///<summary>Total Daily Energy</summary>
    public InputNumberEntity TotalDailyEnergy => new(_haContext, "input_number.total_daily_energy");
}

public partial class InputSelectEntities
{
    private readonly IHaContext _haContext;
    public InputSelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>AtLoraEnded</summary>
    public InputSelectEntity Atloraended => new(_haContext, "input_select.atloraended");
    ///<summary>Brightlight Mode</summary>
    public InputSelectEntity BrightlightMode => new(_haContext, "input_select.brightlight_mode");
    ///<summary>Current AV Audio</summary>
    public InputSelectEntity CurrentAvAudio => new(_haContext, "input_select.current_av_audio");
    ///<summary>Fridge Cooling Level</summary>
    public InputSelectEntity FridgeCoolingLevel => new(_haContext, "input_select.fridge_cooling_level");
    ///<summary>OnSleepBehaviour</summary>
    public InputSelectEntity Onsleepbehaviour => new(_haContext, "input_select.onsleepbehaviour");
    ///<summary>Power Saving Behaviour</summary>
    public InputSelectEntity PowerSavingBehaviour => new(_haContext, "input_select.power_saving_behaviour");
    ///<summary>Settings Ecoflow-mode</summary>
    public InputSelectEntity SettingsEcoflowMode => new(_haContext, "input_select.settings_ecoflow_mode");
}

public partial class InputTextEntities
{
    private readonly IHaContext _haContext;
    public InputTextEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>FP1Debugger</summary>
    public InputTextEntity Fp1debugger => new(_haContext, "input_text.fp1debugger");
}

public partial class LightEntities
{
    private readonly IHaContext _haContext;
    public LightEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>All Lights</summary>
    public LightEntity AllLights => new(_haContext, "light.all_lights");
    ///<summary>Bed Light</summary>
    public LightEntity BedLight => new(_haContext, "light.bed_light");
    ///<summary>Desktop Light</summary>
    public LightEntity DesktopLight => new(_haContext, "light.desktop_light");
    ///<summary>Hallway Light</summary>
    public LightEntity HallwayLight => new(_haContext, "light.hallway_light");
    ///<summary>Kitchen Light</summary>
    public LightEntity KitchenLight2 => new(_haContext, "light.kitchen_light_2");
    ///<summary>Living Room Light</summary>
    public LightEntity LivingRoomLight => new(_haContext, "light.living_room_light");
    ///<summary>Living Room Lights</summary>
    public LightEntity LivingRoomLights => new(_haContext, "light.living_room_lights");
    ///<summary>Bright Light</summary>
    public LightEntity PcMultipowermeterL2 => new(_haContext, "light.pc_multipowermeter_l2");
    ///<summary>Storage Light</summary>
    public LightEntity StorageLight2 => new(_haContext, "light.storage_light_2");
    ///<summary>Toilet Light_1</summary>
    public LightEntity ToiletLight1 => new(_haContext, "light.toilet_light_1");
}

public partial class LockEntities
{
    private readonly IHaContext _haContext;
    public LockEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>BigFridge-Powermeter Child lock</summary>
    public LockEntity BigfridgePowermeterChildLock => new(_haContext, "lock.bigfridge_powermeter_child_lock");
    ///<summary>Kitchen PowerMeter-Plug Child lock</summary>
    public LockEntity KitchenPowermeterPlugChildLock => new(_haContext, "lock.kitchen_powermeter_plug_child_lock");
    ///<summary>Misc-PowerMeter Child lock</summary>
    public LockEntity MiscPowermeterChildLock => new(_haContext, "lock.misc_powermeter_child_lock");
    ///<summary>Modem and Proxmox PowerMeter Child lock</summary>
    public LockEntity ModemAndProxmoxPowermeterChildLock => new(_haContext, "lock.modem_and_proxmox_powermeter_child_lock");
    ///<summary>Modem Auto On Plug Child lock</summary>
    public LockEntity ModemAutoOnPlugChildLock => new(_haContext, "lock.modem_auto_on_plug_child_lock");
    ///<summary>PC-Plug Child lock</summary>
    public LockEntity PcPlugChildLock => new(_haContext, "lock.pc_plug_child_lock");
    ///<summary>TBD-PowerMeter Child lock</summary>
    public LockEntity TbdPowermeterChildLock => new(_haContext, "lock.tbd_powermeter_child_lock");
    ///<summary>Toilet Power Plug Child lock</summary>
    public LockEntity ToiletPowerPlugChildLock => new(_haContext, "lock.toilet_power_plug_child_lock");
    ///<summary>Tv Power Meter Child lock</summary>
    public LockEntity TvPowerMeterChildLock => new(_haContext, "lock.tv_power_meter_child_lock");
}

public partial class MediaPlayerEntities
{
    private readonly IHaContext _haContext;
    public MediaPlayerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>All Media Players</summary>
    public MediaPlayerEntity AllMediaPlayers => new(_haContext, "media_player.all_media_players");
    public MediaPlayerEntity AndroidTv192168020 => new(_haContext, "media_player.android_tv_192_168_0_20");
    ///<summary>ENVY</summary>
    public MediaPlayerEntity Envy => new(_haContext, "media_player.envy");
    public MediaPlayerEntity LivingRoomDisplay => new(_haContext, "media_player.living_room_display");
    ///<summary>Living Room TV</summary>
    public MediaPlayerEntity LivingRoomTv => new(_haContext, "media_player.living_room_tv");
    ///<summary>Living Room TV</summary>
    public MediaPlayerEntity LivingRoomTv2 => new(_haContext, "media_player.living_room_tv_2");
    ///<summary>Olohuone Nest</summary>
    public MediaPlayerEntity OlohuoneNest => new(_haContext, "media_player.olohuone_nest");
    ///<summary>PC</summary>
    public MediaPlayerEntity Pc => new(_haContext, "media_player.pc");
    ///<summary>VLC-TELNET</summary>
    public MediaPlayerEntity VlcTelnet => new(_haContext, "media_player.vlc_telnet");
}

public partial class NumberEntities
{
    private readonly IHaContext _haContext;
    public NumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>PC Sensor Occupancy timeout</summary>
    public NumberEntity _0x001788010bcfb16fOccupancyTimeout => new(_haContext, "number.0x001788010bcfb16f_occupancy_timeout");
    ///<summary>EcoFlow AC Charging Power</summary>
    public NumberEntity EcoflowAcChargingPower => new(_haContext, "number.ecoflow_ac_charging_power");
    ///<summary>EcoFlow Backup Reserve Level</summary>
    public NumberEntity EcoflowBackupReserveLevel => new(_haContext, "number.ecoflow_backup_reserve_level");
    ///<summary>EcoFlow Generator Auto Start Level</summary>
    public NumberEntity EcoflowGeneratorAutoStartLevel => new(_haContext, "number.ecoflow_generator_auto_start_level");
    ///<summary>EcoFlow Generator Auto Stop Level</summary>
    public NumberEntity EcoflowGeneratorAutoStopLevel => new(_haContext, "number.ecoflow_generator_auto_stop_level");
    ///<summary>EcoFlow Max Charge Level</summary>
    public NumberEntity EcoflowMaxChargeLevel => new(_haContext, "number.ecoflow_max_charge_level");
    ///<summary>EcoFlow Min Discharge Level</summary>
    public NumberEntity EcoflowMinDischargeLevel => new(_haContext, "number.ecoflow_min_discharge_level");
    ///<summary>Hallway Sensor Occupancy timeout</summary>
    public NumberEntity HallwaySensorOccupancyTimeout => new(_haContext, "number.hallway_sensor_occupancy_timeout");
    ///<summary>Kitchen Sensor Occupancy timeout</summary>
    public NumberEntity KitchenSensorOccupancyTimeout => new(_haContext, "number.kitchen_sensor_occupancy_timeout");
    ///<summary>Switchbot Air Purifier Power Delay</summary>
    public NumberEntity SwitchbotAirPurifierPowerDelay => new(_haContext, "number.switchbot_air_purifier_power_delay");
    ///<summary>Switchbot Air Purifier Power Lower</summary>
    public NumberEntity SwitchbotAirPurifierPowerLower => new(_haContext, "number.switchbot_air_purifier_power_lower");
    ///<summary>Switchbot Air Purifier Power Upper</summary>
    public NumberEntity SwitchbotAirPurifierPowerUpper => new(_haContext, "number.switchbot_air_purifier_power_upper");
    ///<summary>Switchbot Ecoflow Delay</summary>
    public NumberEntity SwitchbotEcoflowDelay => new(_haContext, "number.switchbot_ecoflow_delay");
    ///<summary>Switchbot Ecoflow Lower</summary>
    public NumberEntity SwitchbotEcoflowLower => new(_haContext, "number.switchbot_ecoflow_lower");
    ///<summary>Switchbot Ecoflow Upper</summary>
    public NumberEntity SwitchbotEcoflowUpper => new(_haContext, "number.switchbot_ecoflow_upper");
    ///<summary>Switchbot Server Delay</summary>
    public NumberEntity SwitchbotServerDelay => new(_haContext, "number.switchbot_server_delay");
    ///<summary>Switchbot Server Lower</summary>
    public NumberEntity SwitchbotServerLower => new(_haContext, "number.switchbot_server_lower");
    ///<summary>Switchbot Server Upper</summary>
    public NumberEntity SwitchbotServerUpper => new(_haContext, "number.switchbot_server_upper");
    ///<summary>Toilet Sensor Occupancy timeout</summary>
    public NumberEntity ToiletSensorOccupancyTimeout => new(_haContext, "number.toilet_sensor_occupancy_timeout");
}

public partial class PersonEntities
{
    private readonly IHaContext _haContext;
    public PersonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Petteri</summary>
    public PersonEntity Petteri => new(_haContext, "person.petteri");
}

public partial class SceneEntities
{
    private readonly IHaContext _haContext;
    public SceneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>-Active Audio- Game</summary>
    public SceneEntity ActiveAudioGame => new(_haContext, "scene.active_audio_game");
    ///<summary>-Active Audio-  OFF</summary>
    public SceneEntity ActiveAudioOff => new(_haContext, "scene.active_audio_off");
    ///<summary>-Active Audio- Portable</summary>
    public SceneEntity ActiveAudioPortable => new(_haContext, "scene.active_audio_portable");
    ///<summary>CurrentElecticityPriceReadout</summary>
    public SceneEntity Currentelecticitypricereadout => new(_haContext, "scene.currentelecticitypricereadout");
    ///<summary>&quot;Fridge Sensor&quot;:Switch:On</summary>
    public SceneEntity FridgeSensorSwitchOn => new(_haContext, "scene.fridge_sensor_switch_on");
    ///<summary>Out of home state</summary>
    public SceneEntity OutOfHomeState => new(_haContext, "scene.out_of_home_state");
    ///<summary>-Active Audio- PC</summary>
    public SceneEntity PcAudioActive => new(_haContext, "scene.pc_audio_active");
    ///<summary>PC ON AUTO</summary>
    public SceneEntity PcOnAuto => new(_haContext, "scene.pc_on_auto");
    ///<summary>Read Out Awake Time</summary>
    public SceneEntity ReadOutAwakeTime => new(_haContext, "scene.read_out_awake_time");
    ///<summary>Switch USB Laptop</summary>
    public SceneEntity SwitchUsbLaptop => new(_haContext, "scene.switch_usb_laptop");
    ///<summary>Switch USB PC</summary>
    public SceneEntity SwitchUsbPc => new(_haContext, "scene.switch_usb_pc");
    ///<summary>-Active Audio-  TV</summary>
    public SceneEntity TvAudioActive => new(_haContext, "scene.tv_audio_active");
}

public partial class ScriptEntities
{
    private readonly IHaContext _haContext;
    public ScriptEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>(Script)AV Audio Off </summary>
    public ScriptEntity _1659477669028 => new(_haContext, "script.1659477669028");
    ///<summary>ActionToDoAtAlarm</summary>
    public ScriptEntity Actiontodoatalarm => new(_haContext, "script.actiontodoatalarm");
    ///<summary>AV - Volume - Down</summary>
    public ScriptEntity AvVolumeDown => new(_haContext, "script.av_volume_down");
    ///<summary>AV - Volume - Up</summary>
    public ScriptEntity AvVolumeUp => new(_haContext, "script.av_volume_up");
    ///<summary>Launch Youtube</summary>
    public ScriptEntity LaunchYoutube => new(_haContext, "script.launch_youtube");
    ///<summary>Send Audio Notification</summary>
    public ScriptEntity NotifyPushover => new(_haContext, "script.notify_pushover");
    ///<summary>(PC)Cancel_Shut_Down</summary>
    public ScriptEntity PccancelShutDown => new(_haContext, "script.pccancel_shut_down");
    ///<summary>(PC)Turn Off PC</summary>
    public ScriptEntity PcturnOffPc => new(_haContext, "script.pcturn_off_pc");
    ///<summary>Play Interface Sound</summary>
    public ScriptEntity PlayInterfaceSound => new(_haContext, "script.play_interface_sound");
    ///<summary>Power Saving Mode</summary>
    public ScriptEntity PowerSavingMode => new(_haContext, "script.power_saving_mode");
    ///<summary>Read Out Electricity Price</summary>
    public ScriptEntity ReadOutElectricityPrice => new(_haContext, "script.read_out_electricity_price");
    ///<summary>Readout LastTime Awoken</summary>
    public ScriptEntity ReadoutLasttimeAwoken => new(_haContext, "script.readout_lasttime_awoken");
    ///<summary>Readout Time</summary>
    public ScriptEntity ReadoutTime => new(_haContext, "script.readout_time");
    ///<summary>Reset All Powermeters</summary>
    public ScriptEntity ResetAllPowermeters => new(_haContext, "script.reset_all_powermeters");
    ///<summary>Restart Modem</summary>
    public ScriptEntity RestartModem => new(_haContext, "script.restart_modem");
    ///<summary>Send Audio Notification TTS</summary>
    public ScriptEntity SendAudioNotification => new(_haContext, "script.send_audio_notification");
    ///<summary>Send Audio Notification File</summary>
    public ScriptEntity SendAudioNotificationFile => new(_haContext, "script.send_audio_notification_file");
    ///<summary>SendIsHomePhoneNotification</summary>
    public ScriptEntity Sendishomephonenotification => new(_haContext, "script.sendishomephonenotification");
    ///<summary>Turn Off Everything</summary>
    public ScriptEntity TurnOffEverything => new(_haContext, "script.turn_off_everything");
    ///<summary>Turn Off Proxmox and Server</summary>
    public ScriptEntity TurnOffProxmoxAndServer => new(_haContext, "script.turn_off_proxmox_and_server");
    ///<summary>Turn Off Server</summary>
    public ScriptEntity TurnOffServer => new(_haContext, "script.turn_off_server");
    ///<summary>Turn On Server</summary>
    public ScriptEntity TurnOnServer => new(_haContext, "script.turn_on_server");
    ///<summary>Turn On Server (Manual)</summary>
    public ScriptEntity TurnOnServerManual => new(_haContext, "script.turn_on_server_manual");
}

public partial class SelectEntities
{
    private readonly IHaContext _haContext;
    public SelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>PC Sensor Motion sensitivity</summary>
    public SelectEntity _0x001788010bcfb16fMotionSensitivity => new(_haContext, "select.0x001788010bcfb16f_motion_sensitivity");
    ///<summary>Bed Knob Operation mode</summary>
    public SelectEntity BedKnobOperationMode => new(_haContext, "select.bed_knob_operation_mode");
    ///<summary>Bed Light Power-on behavior</summary>
    public SelectEntity BedLightPowerOnBehavior => new(_haContext, "select.bed_light_power_on_behavior");
    ///<summary>Bed-Multi-Plug Power-on behavior</summary>
    public SelectEntity BedMultiPlugPowerOnBehavior => new(_haContext, "select.bed_multi_plug_power_on_behavior");
    ///<summary>BigFridge-Powermeter Indicator mode</summary>
    public SelectEntity BigfridgePowermeterIndicatorMode => new(_haContext, "select.bigfridge_powermeter_indicator_mode");
    ///<summary>BigFridge-Powermeter Power outage memory</summary>
    public SelectEntity BigfridgePowermeterPowerOutageMemory => new(_haContext, "select.bigfridge_powermeter_power_outage_memory");
    ///<summary>Desktop Light Power-on behavior</summary>
    public SelectEntity DesktopLightPowerOnBehavior => new(_haContext, "select.desktop_light_power_on_behavior");
    ///<summary>EcoFlow AC Timeout</summary>
    public SelectEntity EcoflowAcTimeout => new(_haContext, "select.ecoflow_ac_timeout");
    ///<summary>EcoFlow DC (12V) Charge Current</summary>
    public SelectEntity EcoflowDc12vChargeCurrent => new(_haContext, "select.ecoflow_dc_12v_charge_current");
    ///<summary>EcoFlow DC (12V) Timeout</summary>
    public SelectEntity EcoflowDc12vTimeout => new(_haContext, "select.ecoflow_dc_12v_timeout");
    ///<summary>EcoFlow Screen Timeout</summary>
    public SelectEntity EcoflowScreenTimeout => new(_haContext, "select.ecoflow_screen_timeout");
    ///<summary>EcoFlow Unit Timeout</summary>
    public SelectEntity EcoflowUnitTimeout => new(_haContext, "select.ecoflow_unit_timeout");
    ///<summary>Hallway Light Power-on behavior</summary>
    public SelectEntity HallwayLightPowerOnBehavior => new(_haContext, "select.hallway_light_power_on_behavior");
    ///<summary>Hallway Sensor Motion sensitivity</summary>
    public SelectEntity HallwaySensorMotionSensitivity => new(_haContext, "select.hallway_sensor_motion_sensitivity");
    ///<summary>Kitchen Light Power-on behavior</summary>
    public SelectEntity KitchenLightPowerOnBehavior => new(_haContext, "select.kitchen_light_power_on_behavior");
    ///<summary>Kitchen PowerMeter-Plug Indicator mode</summary>
    public SelectEntity KitchenPowermeterPlugIndicatorMode => new(_haContext, "select.kitchen_powermeter_plug_indicator_mode");
    ///<summary>Kitchen PowerMeter-Plug Power outage memory</summary>
    public SelectEntity KitchenPowermeterPlugPowerOutageMemory => new(_haContext, "select.kitchen_powermeter_plug_power_outage_memory");
    ///<summary>Kitchen Sensor Motion sensitivity</summary>
    public SelectEntity KitchenSensorMotionSensitivity => new(_haContext, "select.kitchen_sensor_motion_sensitivity");
    ///<summary>Knob Couch Operation mode</summary>
    public SelectEntity KnobCouchOperationMode => new(_haContext, "select.knob_couch_operation_mode");
    ///<summary>Knob Desktop Operation mode</summary>
    public SelectEntity KnobDesktopOperationMode => new(_haContext, "select.knob_desktop_operation_mode");
    ///<summary>Living Room Light Power-on behavior</summary>
    public SelectEntity LivingRoomLightPowerOnBehavior => new(_haContext, "select.living_room_light_power_on_behavior");
    ///<summary>LivingRoomFP1 Approach distance</summary>
    public SelectEntity Livingroomfp1ApproachDistance => new(_haContext, "select.livingroomfp1_approach_distance");
    ///<summary>LivingRoomFP1 Monitoring mode</summary>
    public SelectEntity Livingroomfp1MonitoringMode => new(_haContext, "select.livingroomfp1_monitoring_mode");
    ///<summary>LivingRoomFP1 Motion sensitivity</summary>
    public SelectEntity Livingroomfp1MotionSensitivity => new(_haContext, "select.livingroomfp1_motion_sensitivity");
    ///<summary>LivingRoomFP1 Reset nopresence status</summary>
    public SelectEntity Livingroomfp1ResetNopresenceStatus => new(_haContext, "select.livingroomfp1_reset_nopresence_status");
    ///<summary>Misc-PowerMeter Indicator mode</summary>
    public SelectEntity MiscPowermeterIndicatorMode => new(_haContext, "select.misc_powermeter_indicator_mode");
    ///<summary>Misc-PowerMeter Power outage memory</summary>
    public SelectEntity MiscPowermeterPowerOutageMemory => new(_haContext, "select.misc_powermeter_power_outage_memory");
    ///<summary>Modem and Proxmox PowerMeter Indicator mode</summary>
    public SelectEntity ModemAndProxmoxPowermeterIndicatorMode => new(_haContext, "select.modem_and_proxmox_powermeter_indicator_mode");
    ///<summary>Modem and Proxmox PowerMeter Power outage memory</summary>
    public SelectEntity ModemAndProxmoxPowermeterPowerOutageMemory => new(_haContext, "select.modem_and_proxmox_powermeter_power_outage_memory");
    ///<summary>Modem Auto On Plug Indicator mode</summary>
    public SelectEntity ModemAutoOnPlugIndicatorMode => new(_haContext, "select.modem_auto_on_plug_indicator_mode");
    ///<summary>Modem Auto On Plug Power outage memory</summary>
    public SelectEntity ModemAutoOnPlugPowerOutageMemory => new(_haContext, "select.modem_auto_on_plug_power_outage_memory");
    ///<summary>PC Connector Indicator light mode</summary>
    public SelectEntity PcConnectorIndicatorLightMode => new(_haContext, "select.pc_connector_indicator_light_mode");
    ///<summary>PC Connector Power on behavior</summary>
    public SelectEntity PcConnectorPowerOnBehavior => new(_haContext, "select.pc_connector_power_on_behavior");
    ///<summary>PC-MultiPowerMeter Power outage memory</summary>
    public SelectEntity PcMultipowermeterPowerOutageMemory => new(_haContext, "select.pc_multipowermeter_power_outage_memory");
    ///<summary>PC-Plug Indicator mode</summary>
    public SelectEntity PcPlugIndicatorMode => new(_haContext, "select.pc_plug_indicator_mode");
    ///<summary>PC-Plug Power outage memory</summary>
    public SelectEntity PcPlugPowerOutageMemory => new(_haContext, "select.pc_plug_power_outage_memory");
    ///<summary>Storage Light Power-on behavior</summary>
    public SelectEntity StorageLightPowerOnBehavior => new(_haContext, "select.storage_light_power_on_behavior");
    ///<summary>Switchbot Air Purifier Power Mode</summary>
    public SelectEntity SwitchbotAirPurifierPowerMode => new(_haContext, "select.switchbot_air_purifier_power_mode");
    ///<summary>Switchbot Ecoflow Mode</summary>
    public SelectEntity SwitchbotEcoflowMode => new(_haContext, "select.switchbot_ecoflow_mode");
    ///<summary>Switchbot Server Mode</summary>
    public SelectEntity SwitchbotServerMode => new(_haContext, "select.switchbot_server_mode");
    ///<summary>TBD-PowerMeter Indicator mode</summary>
    public SelectEntity TbdPowermeterIndicatorMode => new(_haContext, "select.tbd_powermeter_indicator_mode");
    ///<summary>TBD-PowerMeter Power outage memory</summary>
    public SelectEntity TbdPowermeterPowerOutageMemory => new(_haContext, "select.tbd_powermeter_power_outage_memory");
    ///<summary>Toilet Light_1 Power-on behavior</summary>
    public SelectEntity ToiletLight1PowerOnBehavior => new(_haContext, "select.toilet_light_1_power_on_behavior");
    ///<summary>Toilet Power Plug Indicator mode</summary>
    public SelectEntity ToiletPowerPlugIndicatorMode => new(_haContext, "select.toilet_power_plug_indicator_mode");
    ///<summary>Toilet Power Plug Power outage memory</summary>
    public SelectEntity ToiletPowerPlugPowerOutageMemory => new(_haContext, "select.toilet_power_plug_power_outage_memory");
    ///<summary>Toilet Sensor Motion sensitivity</summary>
    public SelectEntity ToiletSensorMotionSensitivity => new(_haContext, "select.toilet_sensor_motion_sensitivity");
    ///<summary>Tv Power Meter Indicator mode</summary>
    public SelectEntity TvPowerMeterIndicatorMode => new(_haContext, "select.tv_power_meter_indicator_mode");
    ///<summary>Tv Power Meter Power outage memory</summary>
    public SelectEntity TvPowerMeterPowerOutageMemory => new(_haContext, "select.tv_power_meter_power_outage_memory");
    ///<summary>Zigbee2MQTT Bridge Log level</summary>
    public SelectEntity Zigbee2mqttBridgeLogLevel => new(_haContext, "select.zigbee2mqtt_bridge_log_level");
}

public partial class SensorEntities
{
    private readonly IHaContext _haContext;
    public SensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>All standby energy</summary>
    public SensorEntity AllStandbyEnergy => new(_haContext, "sensor.all_standby_energy");
    ///<summary>Backup State</summary>
    public SensorEntity BackupState => new(_haContext, "sensor.backup_state");
    ///<summary>Bed Knob Action</summary>
    public SensorEntity BedKnobAction => new(_haContext, "sensor.bed_knob_action");
    ///<summary>Bed Knob Action rate</summary>
    public SensorEntity BedKnobActionRate => new(_haContext, "sensor.bed_knob_action_rate");
    ///<summary>Bed Knob Action step size</summary>
    public SensorEntity BedKnobActionStepSize => new(_haContext, "sensor.bed_knob_action_step_size");
    ///<summary>Cube Action</summary>
    public SensorEntity CubeAction => new(_haContext, "sensor.cube_action");
    ///<summary>Cube Action from side</summary>
    public SensorEntity CubeActionFromSide => new(_haContext, "sensor.cube_action_from_side");
    ///<summary>Cube Action side</summary>
    public SensorEntity CubeActionSide => new(_haContext, "sensor.cube_action_side");
    ///<summary>Cube Action to side</summary>
    public SensorEntity CubeActionToSide => new(_haContext, "sensor.cube_action_to_side");
    ///<summary>Cube Power outage count</summary>
    public SensorEntity CubePowerOutageCount => new(_haContext, "sensor.cube_power_outage_count");
    ///<summary>Cube Side</summary>
    public SensorEntity CubeSide => new(_haContext, "sensor.cube_side");
    ///<summary>EcoFlow Cycles</summary>
    public SensorEntity EcoflowCycles => new(_haContext, "sensor.ecoflow_cycles");
    ///<summary>EcoFlow Status</summary>
    public SensorEntity EcoflowStatus => new(_haContext, "sensor.ecoflow_status");
    ///<summary>ENVY _audio Audio Sessions</summary>
    public SensorEntity EnvyAudioAudioSessions => new(_haContext, "sensor.envy_audio_audio_sessions");
    ///<summary>ENVY _audio Default Device</summary>
    public SensorEntity EnvyAudioDefaultDevice => new(_haContext, "sensor.envy_audio_default_device");
    ///<summary>ENVY _audio Default Device Muted</summary>
    public SensorEntity EnvyAudioDefaultDeviceMuted => new(_haContext, "sensor.envy_audio_default_device_muted");
    ///<summary>ENVY _audio Default Device State</summary>
    public SensorEntity EnvyAudioDefaultDeviceState => new(_haContext, "sensor.envy_audio_default_device_state");
    ///<summary>ENVY _audio Default Device Volume</summary>
    public SensorEntity EnvyAudioDefaultDeviceVolume => new(_haContext, "sensor.envy_audio_default_device_volume");
    ///<summary>ENVY _audio Default Input Device</summary>
    public SensorEntity EnvyAudioDefaultInputDevice => new(_haContext, "sensor.envy_audio_default_input_device");
    ///<summary>ENVY _audio Default Input Device Muted</summary>
    public SensorEntity EnvyAudioDefaultInputDeviceMuted => new(_haContext, "sensor.envy_audio_default_input_device_muted");
    ///<summary>ENVY _audio Default Input Device State</summary>
    public SensorEntity EnvyAudioDefaultInputDeviceState => new(_haContext, "sensor.envy_audio_default_input_device_state");
    ///<summary>ENVY _audio Default Input Device Volume</summary>
    public SensorEntity EnvyAudioDefaultInputDeviceVolume => new(_haContext, "sensor.envy_audio_default_input_device_volume");
    ///<summary>ENVY _battery Charge Remaining</summary>
    public SensorEntity EnvyBatteryChargeRemaining => new(_haContext, "sensor.envy_battery_charge_remaining");
    ///<summary>ENVY _battery Charge Status</summary>
    public SensorEntity EnvyBatteryChargeStatus => new(_haContext, "sensor.envy_battery_charge_status");
    ///<summary>ENVY _battery Full Charge Lifetime</summary>
    public SensorEntity EnvyBatteryFullChargeLifetime => new(_haContext, "sensor.envy_battery_full_charge_lifetime");
    ///<summary>ENVY _battery Powerline Status</summary>
    public SensorEntity EnvyBatteryPowerlineStatus => new(_haContext, "sensor.envy_battery_powerline_status");
    ///<summary>ENVY _display Display Count</summary>
    public SensorEntity EnvyDisplayDisplayCount => new(_haContext, "sensor.envy_display_display_count");
    ///<summary>ENVY _display DISPLAY1</summary>
    public SensorEntity EnvyDisplayDisplay1 => new(_haContext, "sensor.envy_display_display1");
    ///<summary>ENVY _display \\.\DISPLAY1 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay1BitsPerPixel => new(_haContext, "sensor.envy_display_display1_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY1 Name</summary>
    public SensorEntity EnvyDisplayDisplay1Name => new(_haContext, "sensor.envy_display_display1_name");
    ///<summary>ENVY _display \\.\DISPLAY1 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay1Resolution => new(_haContext, "sensor.envy_display_display1_resolution");
    ///<summary>ENVY _display DISPLAY2</summary>
    public SensorEntity EnvyDisplayDisplay2 => new(_haContext, "sensor.envy_display_display2");
    ///<summary>ENVY _display \\.\DISPLAY2 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay2BitsPerPixel => new(_haContext, "sensor.envy_display_display2_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY2 Name</summary>
    public SensorEntity EnvyDisplayDisplay2Name => new(_haContext, "sensor.envy_display_display2_name");
    ///<summary>ENVY _display \\.\DISPLAY2 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay2Resolution => new(_haContext, "sensor.envy_display_display2_resolution");
    ///<summary>ENVY _display DISPLAY3</summary>
    public SensorEntity EnvyDisplayDisplay3 => new(_haContext, "sensor.envy_display_display3");
    ///<summary>ENVY _display \\.\DISPLAY3 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay3BitsPerPixel => new(_haContext, "sensor.envy_display_display3_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY3 Name</summary>
    public SensorEntity EnvyDisplayDisplay3Name => new(_haContext, "sensor.envy_display_display3_name");
    ///<summary>ENVY _display \\.\DISPLAY3 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay3Resolution => new(_haContext, "sensor.envy_display_display3_resolution");
    ///<summary>ENVY _display DISPLAY6</summary>
    public SensorEntity EnvyDisplayDisplay6 => new(_haContext, "sensor.envy_display_display6");
    ///<summary>ENVY _display \\.\DISPLAY6 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay6BitsPerPixel => new(_haContext, "sensor.envy_display_display6_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY6 Name</summary>
    public SensorEntity EnvyDisplayDisplay6Name => new(_haContext, "sensor.envy_display_display6_name");
    ///<summary>ENVY _display \\.\DISPLAY6 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay6Resolution => new(_haContext, "sensor.envy_display_display6_resolution");
    ///<summary>ENVY _display DISPLAY7</summary>
    public SensorEntity EnvyDisplayDisplay7 => new(_haContext, "sensor.envy_display_display7");
    ///<summary>ENVY _display \\.\DISPLAY7 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay7BitsPerPixel => new(_haContext, "sensor.envy_display_display7_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY7 Name</summary>
    public SensorEntity EnvyDisplayDisplay7Name => new(_haContext, "sensor.envy_display_display7_name");
    ///<summary>ENVY _display \\.\DISPLAY7 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay7Resolution => new(_haContext, "sensor.envy_display_display7_resolution");
    ///<summary>ENVY _display DISPLAY8</summary>
    public SensorEntity EnvyDisplayDisplay8 => new(_haContext, "sensor.envy_display_display8");
    ///<summary>ENVY _display \\.\DISPLAY8 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay8BitsPerPixel => new(_haContext, "sensor.envy_display_display8_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY8 Name</summary>
    public SensorEntity EnvyDisplayDisplay8Name => new(_haContext, "sensor.envy_display_display8_name");
    ///<summary>ENVY _display \\.\DISPLAY8 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay8Resolution => new(_haContext, "sensor.envy_display_display8_resolution");
    ///<summary>ENVY _display \\.\DISPLAY9 Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayDisplay9BitsPerPixel => new(_haContext, "sensor.envy_display_display9_bits_per_pixel");
    ///<summary>ENVY _display \\.\DISPLAY9 Name</summary>
    public SensorEntity EnvyDisplayDisplay9Name => new(_haContext, "sensor.envy_display_display9_name");
    ///<summary>ENVY _display \\.\DISPLAY9 Resolution</summary>
    public SensorEntity EnvyDisplayDisplay9Resolution => new(_haContext, "sensor.envy_display_display9_resolution");
    ///<summary>ENVY _display Primary Display</summary>
    public SensorEntity EnvyDisplayPrimaryDisplay => new(_haContext, "sensor.envy_display_primary_display");
    ///<summary>ENVY _display WinDisc Bits Per Pixel</summary>
    public SensorEntity EnvyDisplayWindiscBitsPerPixel => new(_haContext, "sensor.envy_display_windisc_bits_per_pixel");
    ///<summary>ENVY _display WinDisc Name</summary>
    public SensorEntity EnvyDisplayWindiscName => new(_haContext, "sensor.envy_display_windisc_name");
    ///<summary>ENVY _display WinDisc Resolution</summary>
    public SensorEntity EnvyDisplayWindiscResolution => new(_haContext, "sensor.envy_display_windisc_resolution");
    ///<summary>ENVY _lastactive</summary>
    public SensorEntity EnvyLastactive => new(_haContext, "sensor.envy_lastactive");
    ///<summary>ENVY _network Ethernet 3</summary>
    public SensorEntity EnvyNetworkEthernet3 => new(_haContext, "sensor.envy_network_ethernet_3");
    ///<summary>ENVY _network Network Card Count</summary>
    public SensorEntity EnvyNetworkNetworkCardCount => new(_haContext, "sensor.envy_network_network_card_count");
    ///<summary>FRITZ!Box 6660 Cable Connection uptime</summary>
    public SensorEntity FritzBox6660CableConnectionUptime => new(_haContext, "sensor.fritz_box_6660_cable_connection_uptime");
    ///<summary>FRITZ!Box 6660 Cable External IP</summary>
    public SensorEntity FritzBox6660CableExternalIp => new(_haContext, "sensor.fritz_box_6660_cable_external_ip");
    ///<summary>FRITZ!Box 6660 Cable External IPv6</summary>
    public SensorEntity FritzBox6660CableExternalIpv6 => new(_haContext, "sensor.fritz_box_6660_cable_external_ipv6");
    ///<summary>FRITZ!Box 6660 Cable Last restart</summary>
    public SensorEntity FritzBox6660CableLastRestart => new(_haContext, "sensor.fritz_box_6660_cable_last_restart");
    ///<summary>Front-Door Sensor Power outage count</summary>
    public SensorEntity FrontDoorSensorPowerOutageCount => new(_haContext, "sensor.front_door_sensor_power_outage_count");
    ///<summary>Hue Switch Bed Action</summary>
    public SensorEntity HueSwitchBedAction => new(_haContext, "sensor.hue_switch_bed_action");
    ///<summary>Hue Switch Living Room Action</summary>
    public SensorEntity HueSwitchLivingRoomAction => new(_haContext, "sensor.hue_switch_living_room_action");
    ///<summary>Indoor temperature and humidity sensor Battery state</summary>
    public SensorEntity IndoorTemperatureAndHumiditySensorBatteryState => new(_haContext, "sensor.indoor_temperature_and_humidity_sensor_battery_state");
    ///<summary>InternetGatewayDeviceV2 - FRITZ!Box 6660 Cable External IP</summary>
    public SensorEntity Internetgatewaydevicev2FritzBox6660CableExternalIp => new(_haContext, "sensor.internetgatewaydevicev2_fritz_box_6660_cable_external_ip");
    ///<summary>Keychain Action</summary>
    public SensorEntity KeychainAction => new(_haContext, "sensor.keychain_action");
    ///<summary>Kitchen Sensors</summary>
    public SensorEntity KitchenSensors => new(_haContext, "sensor.kitchen_sensors");
    ///<summary>Knob Bed Delta</summary>
    public SensorEntity KnobBedDelta => new(_haContext, "sensor.knob_bed_delta");
    ///<summary>Knob Couch Action</summary>
    public SensorEntity KnobCouchAction => new(_haContext, "sensor.knob_couch_action");
    ///<summary>Knob Couch Action rate</summary>
    public SensorEntity KnobCouchActionRate => new(_haContext, "sensor.knob_couch_action_rate");
    ///<summary>Knob Couch Action step size</summary>
    public SensorEntity KnobCouchActionStepSize => new(_haContext, "sensor.knob_couch_action_step_size");
    ///<summary>Knob Couch Delta</summary>
    public SensorEntity KnobCouchDelta => new(_haContext, "sensor.knob_couch_delta");
    ///<summary>Knob Desktop Action</summary>
    public SensorEntity KnobDesktopAction => new(_haContext, "sensor.knob_desktop_action");
    ///<summary>Knob Desktop Action rate</summary>
    public SensorEntity KnobDesktopActionRate => new(_haContext, "sensor.knob_desktop_action_rate");
    ///<summary>Knob Desktop Action step size</summary>
    public SensorEntity KnobDesktopActionStepSize => new(_haContext, "sensor.knob_desktop_action_step_size");
    ///<summary>Knob Desktop Delta</summary>
    public SensorEntity KnobDesktopDelta => new(_haContext, "sensor.knob_desktop_delta");
    ///<summary>Livingroom Window-sensor Power outage count</summary>
    public SensorEntity LivingroomWindowSensorPowerOutageCount => new(_haContext, "sensor.livingroom_window_sensor_power_outage_count");
    ///<summary>LivingRoomFP1 Action</summary>
    public SensorEntity Livingroomfp1Action => new(_haContext, "sensor.livingroomfp1_action");
    ///<summary>LivingRoomFP1 Power outage count</summary>
    public SensorEntity Livingroomfp1PowerOutageCount => new(_haContext, "sensor.livingroomfp1_power_outage_count");
    ///<summary>LivingRoomFP1 Presence event</summary>
    public SensorEntity Livingroomfp1PresenceEvent => new(_haContext, "sensor.livingroomfp1_presence_event");
    ///<summary>LXC Jellyfin (101) Node</summary>
    public SensorEntity LxcJellyfin101Node => new(_haContext, "sensor.lxc_jellyfin_101_node");
    ///<summary>LXC Jellyfin (101) Uptime</summary>
    public SensorEntity LxcJellyfin101Uptime => new(_haContext, "sensor.lxc_jellyfin_101_uptime");
    ///<summary>moto g(8) power lite Battery state</summary>
    public SensorEntity MotoG8PowerLiteBatteryState => new(_haContext, "sensor.moto_g_8_power_lite_battery_state");
    ///<summary>moto g(8) power lite Charger type</summary>
    public SensorEntity MotoG8PowerLiteChargerType => new(_haContext, "sensor.moto_g_8_power_lite_charger_type");
    ///<summary>moto g(8) power lite Last notification</summary>
    public SensorEntity MotoG8PowerLiteLastNotification => new(_haContext, "sensor.moto_g_8_power_lite_last_notification");
    ///<summary>moto g(8) power lite Media session</summary>
    public SensorEntity MotoG8PowerLiteMediaSession => new(_haContext, "sensor.moto_g_8_power_lite_media_session");
    ///<summary>Node pve Uptime</summary>
    public SensorEntity NodePveUptime => new(_haContext, "sensor.node_pve_uptime");
    ///<summary>PC _audio Audio Sessions</summary>
    public SensorEntity PcAudioAudioSessions => new(_haContext, "sensor.pc_audio_audio_sessions");
    ///<summary>PC _audio Default Device</summary>
    public SensorEntity PcAudioDefaultDevice => new(_haContext, "sensor.pc_audio_default_device");
    ///<summary>PC _audio Default Device Muted</summary>
    public SensorEntity PcAudioDefaultDeviceMuted => new(_haContext, "sensor.pc_audio_default_device_muted");
    ///<summary>PC _audio Default Device State</summary>
    public SensorEntity PcAudioDefaultDeviceState => new(_haContext, "sensor.pc_audio_default_device_state");
    ///<summary>PC _audio Default Device Volume</summary>
    public SensorEntity PcAudioDefaultDeviceVolume => new(_haContext, "sensor.pc_audio_default_device_volume");
    ///<summary>PC _audio Default Input Device</summary>
    public SensorEntity PcAudioDefaultInputDevice => new(_haContext, "sensor.pc_audio_default_input_device");
    ///<summary>PC _audio Default Input Device Muted</summary>
    public SensorEntity PcAudioDefaultInputDeviceMuted => new(_haContext, "sensor.pc_audio_default_input_device_muted");
    ///<summary>PC _audio Default Input Device State</summary>
    public SensorEntity PcAudioDefaultInputDeviceState => new(_haContext, "sensor.pc_audio_default_input_device_state");
    ///<summary>PC _audio Default Input Device Volume</summary>
    public SensorEntity PcAudioDefaultInputDeviceVolume => new(_haContext, "sensor.pc_audio_default_input_device_volume");
    ///<summary>PC _display Display Count</summary>
    public SensorEntity PcDisplayDisplayCount => new(_haContext, "sensor.pc_display_display_count");
    ///<summary>PC _display DISPLAY1</summary>
    public SensorEntity PcDisplayDisplay1 => new(_haContext, "sensor.pc_display_display1");
    ///<summary>PC _display \\.\DISPLAY1 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay1BitsPerPixel => new(_haContext, "sensor.pc_display_display1_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY1 Name</summary>
    public SensorEntity PcDisplayDisplay1Name => new(_haContext, "sensor.pc_display_display1_name");
    ///<summary>PC _display \\.\DISPLAY1 Resolution</summary>
    public SensorEntity PcDisplayDisplay1Resolution => new(_haContext, "sensor.pc_display_display1_resolution");
    ///<summary>PC _display DISPLAY2</summary>
    public SensorEntity PcDisplayDisplay2 => new(_haContext, "sensor.pc_display_display2");
    ///<summary>PC _display \\.\DISPLAY2 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay2BitsPerPixel => new(_haContext, "sensor.pc_display_display2_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY2 Name</summary>
    public SensorEntity PcDisplayDisplay2Name => new(_haContext, "sensor.pc_display_display2_name");
    ///<summary>PC _display \\.\DISPLAY2 Resolution</summary>
    public SensorEntity PcDisplayDisplay2Resolution => new(_haContext, "sensor.pc_display_display2_resolution");
    ///<summary>PC _display DISPLAY3</summary>
    public SensorEntity PcDisplayDisplay3 => new(_haContext, "sensor.pc_display_display3");
    ///<summary>PC _display \\.\DISPLAY3 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay3BitsPerPixel => new(_haContext, "sensor.pc_display_display3_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY3 Name</summary>
    public SensorEntity PcDisplayDisplay3Name => new(_haContext, "sensor.pc_display_display3_name");
    ///<summary>PC _display \\.\DISPLAY3 Resolution</summary>
    public SensorEntity PcDisplayDisplay3Resolution => new(_haContext, "sensor.pc_display_display3_resolution");
    ///<summary>PC _display DISPLAY4</summary>
    public SensorEntity PcDisplayDisplay4 => new(_haContext, "sensor.pc_display_display4");
    ///<summary>PC _display \\.\DISPLAY4 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay4BitsPerPixel => new(_haContext, "sensor.pc_display_display4_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY4 Name</summary>
    public SensorEntity PcDisplayDisplay4Name => new(_haContext, "sensor.pc_display_display4_name");
    ///<summary>PC _display \\.\DISPLAY4 Resolution</summary>
    public SensorEntity PcDisplayDisplay4Resolution => new(_haContext, "sensor.pc_display_display4_resolution");
    ///<summary>PC _display DISPLAY6</summary>
    public SensorEntity PcDisplayDisplay6 => new(_haContext, "sensor.pc_display_display6");
    ///<summary>PC _display \\.\DISPLAY6 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay6BitsPerPixel => new(_haContext, "sensor.pc_display_display6_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY6 Name</summary>
    public SensorEntity PcDisplayDisplay6Name => new(_haContext, "sensor.pc_display_display6_name");
    ///<summary>PC _display \\.\DISPLAY6 Resolution</summary>
    public SensorEntity PcDisplayDisplay6Resolution => new(_haContext, "sensor.pc_display_display6_resolution");
    ///<summary>PC _display DISPLAY7</summary>
    public SensorEntity PcDisplayDisplay7 => new(_haContext, "sensor.pc_display_display7");
    ///<summary>PC _display \\.\DISPLAY7 Bits Per Pixel</summary>
    public SensorEntity PcDisplayDisplay7BitsPerPixel => new(_haContext, "sensor.pc_display_display7_bits_per_pixel");
    ///<summary>PC _display \\.\DISPLAY7 Name</summary>
    public SensorEntity PcDisplayDisplay7Name => new(_haContext, "sensor.pc_display_display7_name");
    ///<summary>PC _display \\.\DISPLAY7 Resolution</summary>
    public SensorEntity PcDisplayDisplay7Resolution => new(_haContext, "sensor.pc_display_display7_resolution");
    ///<summary>PC _display DISPLAY8</summary>
    public SensorEntity PcDisplayDisplay8 => new(_haContext, "sensor.pc_display_display8");
    ///<summary>PC _display Primary Display</summary>
    public SensorEntity PcDisplayPrimaryDisplay => new(_haContext, "sensor.pc_display_primary_display");
    ///<summary>PC _display WinDisc</summary>
    public SensorEntity PcDisplayWindisc => new(_haContext, "sensor.pc_display_windisc");
    ///<summary>PC _display WinDisc Bits Per Pixel</summary>
    public SensorEntity PcDisplayWindiscBitsPerPixel => new(_haContext, "sensor.pc_display_windisc_bits_per_pixel");
    ///<summary>PC _display WinDisc Name</summary>
    public SensorEntity PcDisplayWindiscName => new(_haContext, "sensor.pc_display_windisc_name");
    ///<summary>PC _display WinDisc Resolution</summary>
    public SensorEntity PcDisplayWindiscResolution => new(_haContext, "sensor.pc_display_windisc_resolution");
    ///<summary>PC _lastactive</summary>
    public SensorEntity PcLastactive => new(_haContext, "sensor.pc_lastactive");
    ///<summary>QEMU haos9.5 (100) Node</summary>
    public SensorEntity QemuHaos95100Node => new(_haContext, "sensor.qemu_haos9_5_100_node");
    ///<summary>QEMU haos9.5 (100) Uptime</summary>
    public SensorEntity QemuHaos95100Uptime => new(_haContext, "sensor.qemu_haos9_5_100_uptime");
    ///<summary>SM-T530 Media Session</summary>
    public SensorEntity SmT530MediaSession => new(_haContext, "sensor.sm_t530_media_session");
    ///<summary>Lux Sensor Power outage count</summary>
    public SensorEntity StorageSensorAqaraPowerOutageCount => new(_haContext, "sensor.storage_sensor_aqara_power_outage_count");
    ///<summary>Sun Next dawn</summary>
    public SensorEntity SunNextDawn => new(_haContext, "sensor.sun_next_dawn");
    ///<summary>Sun Next dusk</summary>
    public SensorEntity SunNextDusk => new(_haContext, "sensor.sun_next_dusk");
    ///<summary>Sun Next midnight</summary>
    public SensorEntity SunNextMidnight => new(_haContext, "sensor.sun_next_midnight");
    ///<summary>Sun Next noon</summary>
    public SensorEntity SunNextNoon => new(_haContext, "sensor.sun_next_noon");
    ///<summary>Sun Next rising</summary>
    public SensorEntity SunNextRising => new(_haContext, "sensor.sun_next_rising");
    ///<summary>Sun Next setting</summary>
    public SensorEntity SunNextSetting => new(_haContext, "sensor.sun_next_setting");
    ///<summary>Surface_Laptop _battery Charge Remaining</summary>
    public SensorEntity SurfaceLaptopBatteryChargeRemaining => new(_haContext, "sensor.surface_laptop_battery_charge_remaining");
    ///<summary>Surface_Laptop _battery Charge Status</summary>
    public SensorEntity SurfaceLaptopBatteryChargeStatus => new(_haContext, "sensor.surface_laptop_battery_charge_status");
    ///<summary>Surface_Laptop _battery Full Charge Lifetime</summary>
    public SensorEntity SurfaceLaptopBatteryFullChargeLifetime => new(_haContext, "sensor.surface_laptop_battery_full_charge_lifetime");
    ///<summary>Surface_Laptop _battery Powerline Status</summary>
    public SensorEntity SurfaceLaptopBatteryPowerlineStatus => new(_haContext, "sensor.surface_laptop_battery_powerline_status");
    ///<summary>Surface_Laptop Surface Laptop_lastactive</summary>
    public SensorEntity SurfaceLaptopLastactive => new(_haContext, "sensor.surface_laptop_lastactive");
    ///<summary>Toilet Seat Sensor Power outage count</summary>
    public SensorEntity ToiletSeatSensorPowerOutageCount => new(_haContext, "sensor.toilet_seat_sensor_power_outage_count");
    ///<summary>True Fridge Temperature</summary>
    public SensorEntity TrueFridgeTemperature => new(_haContext, "sensor.true_fridge_temperature");
    ///<summary>Zatnas Network Link (eth0)</summary>
    public SensorEntity ZatnasNetworkLinkEth0 => new(_haContext, "sensor.zatnas_network_link_eth0");
    ///<summary>Zatnas Status</summary>
    public SensorEntity ZatnasStatus => new(_haContext, "sensor.zatnas_status");
    ///<summary>Zigbee2MQTT Bridge Version</summary>
    public SensorEntity Zigbee2mqttBridgeVersion => new(_haContext, "sensor.zigbee2mqtt_bridge_version");
    ///<summary>PC Sensor Battery</summary>
    public NumericSensorEntity _0x001788010bcfb16fBattery => new(_haContext, "sensor.0x001788010bcfb16f_battery");
    ///<summary>PC Sensor Illuminance</summary>
    public NumericSensorEntity _0x001788010bcfb16fIlluminanceLux => new(_haContext, "sensor.0x001788010bcfb16f_illuminance_lux");
    ///<summary>PC Sensor Temperature</summary>
    public NumericSensorEntity _0x001788010bcfb16fTemperature => new(_haContext, "sensor.0x001788010bcfb16f_temperature");
    ///<summary>AdGuard Home Average processing speed</summary>
    public NumericSensorEntity AdguardHomeAverageProcessingSpeed => new(_haContext, "sensor.adguard_home_average_processing_speed");
    ///<summary>AdGuard Home DNS queries</summary>
    public NumericSensorEntity AdguardHomeDnsQueries => new(_haContext, "sensor.adguard_home_dns_queries");
    ///<summary>AdGuard Home DNS queries blocked</summary>
    public NumericSensorEntity AdguardHomeDnsQueriesBlocked => new(_haContext, "sensor.adguard_home_dns_queries_blocked");
    ///<summary>AdGuard Home DNS queries blocked ratio</summary>
    public NumericSensorEntity AdguardHomeDnsQueriesBlockedRatio => new(_haContext, "sensor.adguard_home_dns_queries_blocked_ratio");
    ///<summary>AdGuard Home Parental control blocked</summary>
    public NumericSensorEntity AdguardHomeParentalControlBlocked => new(_haContext, "sensor.adguard_home_parental_control_blocked");
    ///<summary>AdGuard Home Safe browsing blocked</summary>
    public NumericSensorEntity AdguardHomeSafeBrowsingBlocked => new(_haContext, "sensor.adguard_home_safe_browsing_blocked");
    ///<summary>AdGuard Home Safe searches enforced</summary>
    public NumericSensorEntity AdguardHomeSafeSearchesEnforced => new(_haContext, "sensor.adguard_home_safe_searches_enforced");
    ///<summary>All Lights Daily Conpumption</summary>
    public NumericSensorEntity AllLightDailyConsumption => new(_haContext, "sensor.all_light_daily_consumption");
    ///<summary>All standby power</summary>
    public NumericSensorEntity AllStandbyPower => new(_haContext, "sensor.all_standby_power");
    ///<summary>Away from home today</summary>
    public NumericSensorEntity AwayFromHomeToday => new(_haContext, "sensor.away_from_home_today");
    ///<summary>Bed Knob Action transition time</summary>
    public NumericSensorEntity BedKnobActionTransitionTime => new(_haContext, "sensor.bed_knob_action_transition_time");
    ///<summary>Bed Knob Battery</summary>
    public NumericSensorEntity BedKnobBattery => new(_haContext, "sensor.bed_knob_battery");
    ///<summary>BigFridge-Powermeter Energy</summary>
    public NumericSensorEntity BigfridgePowermeterEnergy => new(_haContext, "sensor.bigfridge_powermeter_energy");
    ///<summary>BigFridge-Powermeter Power</summary>
    public NumericSensorEntity BigfridgePowermeterPower => new(_haContext, "sensor.bigfridge_powermeter_power");
    ///<summary>Cube Action angle</summary>
    public NumericSensorEntity CubeActionAngle => new(_haContext, "sensor.cube_action_angle");
    ///<summary>Cube Battery</summary>
    public NumericSensorEntity CubeBattery => new(_haContext, "sensor.cube_battery");
    ///<summary>Cube Temperature</summary>
    public NumericSensorEntity CubeDeviceTemperature => new(_haContext, "sensor.cube_device_temperature");
    ///<summary>Daily Energy Cost</summary>
    public NumericSensorEntity DailyEnergyCost => new(_haContext, "sensor.daily_energy_cost");
    ///<summary>Daily Energy Savings</summary>
    public NumericSensorEntity DailyEnergySavings => new(_haContext, "sensor.daily_energy_savings");
    ///<summary>Desktop Height</summary>
    public NumericSensorEntity DesktopHeight => new(_haContext, "sensor.desktop_height");
    ///<summary>EcoFlow AC In Power</summary>
    public NumericSensorEntity EcoflowAcInPower => new(_haContext, "sensor.ecoflow_ac_in_power");
    ///<summary>EcoFlow AC In Volts</summary>
    public NumericSensorEntity EcoflowAcInVolts => new(_haContext, "sensor.ecoflow_ac_in_volts");
    ///<summary>Ecoflow AC Input Daily</summary>
    public NumericSensorEntity EcoflowAcInputDaily => new(_haContext, "sensor.ecoflow_ac_input_daily");
    ///<summary>Ecoflow Ac Input Hourly</summary>
    public NumericSensorEntity EcoflowAcInputHourly => new(_haContext, "sensor.ecoflow_ac_input_hourly");
    ///<summary>Ecoflow AC Input Sum</summary>
    public NumericSensorEntity EcoflowAcInputSum => new(_haContext, "sensor.ecoflow_ac_input_sum");
    ///<summary>EcoFlow AC Out Power</summary>
    public NumericSensorEntity EcoflowAcOutPower => new(_haContext, "sensor.ecoflow_ac_out_power");
    ///<summary>EcoFlow AC Out Volts</summary>
    public NumericSensorEntity EcoflowAcOutVolts => new(_haContext, "sensor.ecoflow_ac_out_volts");
    ///<summary>Ecoflow AC Output Hourly</summary>
    public NumericSensorEntity EcoflowAcOutputHourly => new(_haContext, "sensor.ecoflow_ac_output_hourly");
    ///<summary>EcoFlow Battery Level</summary>
    public NumericSensorEntity EcoflowBatteryLevel => new(_haContext, "sensor.ecoflow_battery_level");
    ///<summary>EcoFlow Battery Temperature</summary>
    public NumericSensorEntity EcoflowBatteryTemperature => new(_haContext, "sensor.ecoflow_battery_temperature");
    ///<summary>EcoFlow Charge Remaining Time</summary>
    public NumericSensorEntity EcoflowChargeRemainingTime => new(_haContext, "sensor.ecoflow_charge_remaining_time");
    ///<summary>EcoFlow DC Out Power</summary>
    public NumericSensorEntity EcoflowDcOutPower => new(_haContext, "sensor.ecoflow_dc_out_power");
    ///<summary>EcoFlow Discharge Remaining Time</summary>
    public NumericSensorEntity EcoflowDischargeRemainingTime => new(_haContext, "sensor.ecoflow_discharge_remaining_time");
    ///<summary>EcoFlow Inv Out Temperature</summary>
    public NumericSensorEntity EcoflowInvOutTemperature => new(_haContext, "sensor.ecoflow_inv_out_temperature");
    ///<summary>EcoFlow Main Battery Level</summary>
    public NumericSensorEntity EcoflowMainBatteryLevel => new(_haContext, "sensor.ecoflow_main_battery_level");
    ///<summary>Ecoflow Out Sum</summary>
    public NumericSensorEntity EcoflowOutSum => new(_haContext, "sensor.ecoflow_out_sum");
    ///<summary>EcoFlow Slave Battery Level</summary>
    public NumericSensorEntity EcoflowSlaveBatteryLevel => new(_haContext, "sensor.ecoflow_slave_battery_level");
    ///<summary>EcoFlow Slave In Power</summary>
    public NumericSensorEntity EcoflowSlaveInPower => new(_haContext, "sensor.ecoflow_slave_in_power");
    ///<summary>EcoFlow Solar In Power</summary>
    public NumericSensorEntity EcoflowSolarInPower => new(_haContext, "sensor.ecoflow_solar_in_power");
    ///<summary>Ecoflow Solar Input Hourly</summary>
    public NumericSensorEntity EcoflowSolarInputHourly => new(_haContext, "sensor.ecoflow_solar_input_hourly");
    ///<summary>Ecoflow Solar Sum</summary>
    public NumericSensorEntity EcoflowSolarSum => new(_haContext, "sensor.ecoflow_solar_sum");
    ///<summary>Ecoflow Solar Sum Daily</summary>
    public NumericSensorEntity EcoflowSolarSumDaily => new(_haContext, "sensor.ecoflow_solar_sum_daily");
    ///<summary>EcoFlow Total In Power</summary>
    public NumericSensorEntity EcoflowTotalInPower => new(_haContext, "sensor.ecoflow_total_in_power");
    ///<summary>EcoFlow Total Out Power</summary>
    public NumericSensorEntity EcoflowTotalOutPower => new(_haContext, "sensor.ecoflow_total_out_power");
    ///<summary>EcoFlow Type-C (1) Out Power</summary>
    public NumericSensorEntity EcoflowTypeC1OutPower => new(_haContext, "sensor.ecoflow_type_c_1_out_power");
    ///<summary>EcoFlow Type-C (2) Out Power</summary>
    public NumericSensorEntity EcoflowTypeC2OutPower => new(_haContext, "sensor.ecoflow_type_c_2_out_power");
    ///<summary>EcoFlow USB (1) Out Power</summary>
    public NumericSensorEntity EcoflowUsb1OutPower => new(_haContext, "sensor.ecoflow_usb_1_out_power");
    ///<summary>EcoFlow USB (2) Out Power</summary>
    public NumericSensorEntity EcoflowUsb2OutPower => new(_haContext, "sensor.ecoflow_usb_2_out_power");
    ///<summary>EcoFlow USB QC (1) Out Power</summary>
    public NumericSensorEntity EcoflowUsbQc1OutPower => new(_haContext, "sensor.ecoflow_usb_qc_1_out_power");
    ///<summary>EcoFlow USB QC (2) Out Power</summary>
    public NumericSensorEntity EcoflowUsbQc2OutPower => new(_haContext, "sensor.ecoflow_usb_qc_2_out_power");
    ///<summary>ENVY _battery Charge Remaining Percentage</summary>
    public NumericSensorEntity EnvyBatteryChargeRemainingPercentage => new(_haContext, "sensor.envy_battery_charge_remaining_percentage");
    ///<summary>Fridge Contact Sensor Battery</summary>
    public NumericSensorEntity FridgeContactSensorBattery => new(_haContext, "sensor.fridge_contact_sensor_battery");
    ///<summary>FRITZ!Box 6660 Cable Download throughput</summary>
    public NumericSensorEntity FritzBox6660CableDownloadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_download_throughput");
    ///<summary>FRITZ!Box 6660 Cable GB received</summary>
    public NumericSensorEntity FritzBox6660CableGbReceived => new(_haContext, "sensor.fritz_box_6660_cable_gb_received");
    ///<summary>FRITZ!Box 6660 Cable GB sent</summary>
    public NumericSensorEntity FritzBox6660CableGbSent => new(_haContext, "sensor.fritz_box_6660_cable_gb_sent");
    ///<summary>FRITZ!Box 6660 Cable Link download throughput</summary>
    public NumericSensorEntity FritzBox6660CableLinkDownloadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_link_download_throughput");
    ///<summary>FRITZ!Box 6660 Cable Link upload throughput</summary>
    public NumericSensorEntity FritzBox6660CableLinkUploadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_link_upload_throughput");
    ///<summary>FRITZ!Box 6660 Cable Max connection download throughput</summary>
    public NumericSensorEntity FritzBox6660CableMaxConnectionDownloadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_max_connection_download_throughput");
    ///<summary>FRITZ!Box 6660 Cable Max connection upload throughput</summary>
    public NumericSensorEntity FritzBox6660CableMaxConnectionUploadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_max_connection_upload_throughput");
    ///<summary>FRITZ!Box 6660 Cable Upload throughput</summary>
    public NumericSensorEntity FritzBox6660CableUploadThroughput => new(_haContext, "sensor.fritz_box_6660_cable_upload_throughput");
    ///<summary>Front-Door Sensor Battery</summary>
    public NumericSensorEntity FrontDoorSensorBattery => new(_haContext, "sensor.front_door_sensor_battery");
    ///<summary>Front-Door Sensor Temperature</summary>
    public NumericSensorEntity FrontDoorSensorDeviceTemperature => new(_haContext, "sensor.front_door_sensor_device_temperature");
    ///<summary>hacs</summary>
    public NumericSensorEntity Hacs => new(_haContext, "sensor.hacs");
    ///<summary>Hallway Sensor Battery</summary>
    public NumericSensorEntity HallwaySensorBattery2 => new(_haContext, "sensor.hallway_sensor_battery_2");
    ///<summary>Hallway Sensor Illuminance</summary>
    public NumericSensorEntity HallwaySensorIlluminanceLux => new(_haContext, "sensor.hallway_sensor_illuminance_lux");
    ///<summary>Hallway Sensor Temperature</summary>
    public NumericSensorEntity HallwaySensorTemperature2 => new(_haContext, "sensor.hallway_sensor_temperature_2");
    ///<summary>Hue Switch Bed Battery</summary>
    public NumericSensorEntity HueSwitchBedBattery => new(_haContext, "sensor.hue_switch_bed_battery");
    ///<summary>Hue Switch Living Room Battery</summary>
    public NumericSensorEntity HueSwitchLivingRoomBattery => new(_haContext, "sensor.hue_switch_living_room_battery");
    ///<summary>Indoor Humidity Delta</summary>
    public NumericSensorEntity IndoorHumidityDelta => new(_haContext, "sensor.indoor_humidity_delta");
    ///<summary>Indoor temperature and humidity sensor Humidity</summary>
    public NumericSensorEntity IndoorTemperatureAndHumiditySensorHumidity => new(_haContext, "sensor.indoor_temperature_and_humidity_sensor_humidity");
    ///<summary>Indoor temperature and humidity sensor Temperature</summary>
    public NumericSensorEntity IndoorTemperatureAndHumiditySensorTemperature => new(_haContext, "sensor.indoor_temperature_and_humidity_sensor_temperature");
    ///<summary>InternetGatewayDeviceV2 - FRITZ!Box 6660 Cable Download speed</summary>
    public NumericSensorEntity Internetgatewaydevicev2FritzBox6660CableKibSReceived => new(_haContext, "sensor.internetgatewaydevicev2_fritz_box_6660_cable_kib_s_received");
    ///<summary>InternetGatewayDeviceV2 - FRITZ!Box 6660 Cable Upload speed</summary>
    public NumericSensorEntity Internetgatewaydevicev2FritzBox6660CableKibSSent => new(_haContext, "sensor.internetgatewaydevicev2_fritz_box_6660_cable_kib_s_sent");
    ///<summary>Keychain Battery</summary>
    public NumericSensorEntity KeychainBattery => new(_haContext, "sensor.keychain_battery");
    ///<summary>Kitchen Power Consumption</summary>
    public NumericSensorEntity KitchenPowerConsumption => new(_haContext, "sensor.kitchen_power_consumption");
    ///<summary>Kitchen PowerMeter-Plug Energy</summary>
    public NumericSensorEntity KitchenPowermeterPlugEnergy => new(_haContext, "sensor.kitchen_powermeter_plug_energy");
    ///<summary>Kitchen PowerMeter-Plug Power</summary>
    public NumericSensorEntity KitchenPowermeterPlugPower => new(_haContext, "sensor.kitchen_powermeter_plug_power");
    ///<summary>Kitchen Sensor Battery</summary>
    public NumericSensorEntity KitchenSensorBattery2 => new(_haContext, "sensor.kitchen_sensor_battery_2");
    ///<summary>Kitchen Sensor Illuminance</summary>
    public NumericSensorEntity KitchenSensorIlluminanceLux => new(_haContext, "sensor.kitchen_sensor_illuminance_lux");
    ///<summary>Kitchen Sensor Temperature</summary>
    public NumericSensorEntity KitchenSensorTemperature2 => new(_haContext, "sensor.kitchen_sensor_temperature_2");
    ///<summary>Knob Couch Action transition time</summary>
    public NumericSensorEntity KnobCouchActionTransitionTime => new(_haContext, "sensor.knob_couch_action_transition_time");
    ///<summary>Knob Couch Battery</summary>
    public NumericSensorEntity KnobCouchBattery => new(_haContext, "sensor.knob_couch_battery");
    ///<summary>Knob Desktop Action transition time</summary>
    public NumericSensorEntity KnobDesktopActionTransitionTime => new(_haContext, "sensor.knob_desktop_action_transition_time");
    ///<summary>Knob Desktop Battery</summary>
    public NumericSensorEntity KnobDesktopBattery => new(_haContext, "sensor.knob_desktop_battery");
    ///<summary>Livingroom Climatemeter Battery</summary>
    public NumericSensorEntity LivingroomClimatemeterBattery => new(_haContext, "sensor.livingroom_climatemeter_battery");
    ///<summary>Livingroom Climatemeter Humidity</summary>
    public NumericSensorEntity LivingroomClimatemeterHumidity => new(_haContext, "sensor.livingroom_climatemeter_humidity");
    ///<summary>Livingroom Climatemeter Temperature</summary>
    public NumericSensorEntity LivingroomClimatemeterTemperature => new(_haContext, "sensor.livingroom_climatemeter_temperature");
    ///<summary>Livingroom temp delta</summary>
    public NumericSensorEntity LivingroomTempDelta => new(_haContext, "sensor.livingroom_temp_delta");
    ///<summary>Livingroom Window-sensor Battery</summary>
    public NumericSensorEntity LivingroomWindowSensorBattery => new(_haContext, "sensor.livingroom_window_sensor_battery");
    ///<summary>Livingroom Window-sensor Temperature</summary>
    public NumericSensorEntity LivingroomWindowSensorDeviceTemperature => new(_haContext, "sensor.livingroom_window_sensor_device_temperature");
    ///<summary>LivingRoomFP1 Temperature</summary>
    public NumericSensorEntity Livingroomfp1DeviceTemperature => new(_haContext, "sensor.livingroomfp1_device_temperature");
    ///<summary>LXC Jellyfin (101) CPU used</summary>
    public NumericSensorEntity LxcJellyfin101CpuUsed => new(_haContext, "sensor.lxc_jellyfin_101_cpu_used");
    ///<summary>LXC Jellyfin (101) Disk used percentage</summary>
    public NumericSensorEntity LxcJellyfin101DiskUsedPercentage => new(_haContext, "sensor.lxc_jellyfin_101_disk_used_percentage");
    ///<summary>LXC Jellyfin (101) Memory free</summary>
    public NumericSensorEntity LxcJellyfin101MemoryFree => new(_haContext, "sensor.lxc_jellyfin_101_memory_free");
    ///<summary>LXC Jellyfin (101) Memory used</summary>
    public NumericSensorEntity LxcJellyfin101MemoryUsed => new(_haContext, "sensor.lxc_jellyfin_101_memory_used");
    ///<summary>LXC Jellyfin (101) Memory used percentage</summary>
    public NumericSensorEntity LxcJellyfin101MemoryUsedPercentage => new(_haContext, "sensor.lxc_jellyfin_101_memory_used_percentage");
    ///<summary>Main Fridge Daily Consumption</summary>
    public NumericSensorEntity MainFridgeDailyConsumption => new(_haContext, "sensor.main_fridge_daily_consumption");
    ///<summary>Misc-Daily-Consumption</summary>
    public NumericSensorEntity MiscDailyConsumption => new(_haContext, "sensor.misc_daily_consumption");
    ///<summary>Misc-PowerMeter Energy</summary>
    public NumericSensorEntity MiscPowermeterEnergy => new(_haContext, "sensor.misc_powermeter_energy");
    ///<summary>Misc-PowerMeter Power</summary>
    public NumericSensorEntity MiscPowermeterPower => new(_haContext, "sensor.misc_powermeter_power");
    ///<summary>Modem and Proxmox PowerMeter Energy</summary>
    public NumericSensorEntity ModemAndProxmoxPowermeterEnergy => new(_haContext, "sensor.modem_and_proxmox_powermeter_energy");
    ///<summary>Modem and Proxmox PowerMeter Power</summary>
    public NumericSensorEntity ModemAndProxmoxPowermeterPower => new(_haContext, "sensor.modem_and_proxmox_powermeter_power");
    ///<summary>Modem Auto On Plug Energy</summary>
    public NumericSensorEntity ModemAutoOnPlugEnergy => new(_haContext, "sensor.modem_auto_on_plug_energy");
    ///<summary>Modem Auto On Plug Power</summary>
    public NumericSensorEntity ModemAutoOnPlugPower => new(_haContext, "sensor.modem_auto_on_plug_power");
    ///<summary>Modem and Proxmox Daily Energy</summary>
    public NumericSensorEntity ModemDailyEnergy => new(_haContext, "sensor.modem_daily_energy");
    ///<summary>moto g(8) power lite Battery level</summary>
    public NumericSensorEntity MotoG8PowerLiteBatteryLevel => new(_haContext, "sensor.moto_g_8_power_lite_battery_level");
    ///<summary>Node pve CPU used</summary>
    public NumericSensorEntity NodePveCpuUsed => new(_haContext, "sensor.node_pve_cpu_used");
    ///<summary>Node pve Disk used percentage</summary>
    public NumericSensorEntity NodePveDiskUsedPercentage => new(_haContext, "sensor.node_pve_disk_used_percentage");
    ///<summary>Node pve Memory free</summary>
    public NumericSensorEntity NodePveMemoryFree => new(_haContext, "sensor.node_pve_memory_free");
    ///<summary>Node pve Memory used</summary>
    public NumericSensorEntity NodePveMemoryUsed => new(_haContext, "sensor.node_pve_memory_used");
    ///<summary>Node pve Memory used percentage</summary>
    public NumericSensorEntity NodePveMemoryUsedPercentage => new(_haContext, "sensor.node_pve_memory_used_percentage");
    ///<summary>nordpool_kwh_fi_eur_3_10_024</summary>
    public NumericSensorEntity NordpoolKwhFiEur31001 => new(_haContext, "sensor.nordpool_kwh_fi_eur_3_10_01");
    ///<summary>Outside temperature meter Battery</summary>
    public NumericSensorEntity OutsideTemperatureMeterBattery => new(_haContext, "sensor.outside_temperature_meter_battery");
    ///<summary>Outside temperature meter Humidity</summary>
    public NumericSensorEntity OutsideTemperatureMeterHumidity => new(_haContext, "sensor.outside_temperature_meter_humidity");
    ///<summary>Outside temperature meter Illuminance</summary>
    public NumericSensorEntity OutsideTemperatureMeterLuminosity => new(_haContext, "sensor.outside_temperature_meter_luminosity");
    ///<summary>Outside temperature meter Temperature</summary>
    public NumericSensorEntity OutsideTemperatureMeterTemperature => new(_haContext, "sensor.outside_temperature_meter_temperature");
    ///<summary>Pc_Accesories_Daily_Energy</summary>
    public NumericSensorEntity PcAccesoriesDailyEnergy => new(_haContext, "sensor.pc_accesories_daily_energy");
    ///<summary>PC Energy Consumption (Daily)</summary>
    public NumericSensorEntity PcEnergyConsumptionDaily => new(_haContext, "sensor.pc_energy_consumption_daily");
    ///<summary>Pc Energy Consumption (Hourly)</summary>
    public NumericSensorEntity PcEnergyConsumptionHourly => new(_haContext, "sensor.pc_energy_consumption_hourly");
    ///<summary>PC Energy Meters</summary>
    public NumericSensorEntity PcEnergyMeters => new(_haContext, "sensor.pc_energy_meters");
    ///<summary>PC _memoryusage</summary>
    public NumericSensorEntity PcMemoryusage => new(_haContext, "sensor.pc_memoryusage");
    ///<summary>PC-MultiPowerMeter Energy</summary>
    public NumericSensorEntity PcMultipowermeterEnergy => new(_haContext, "sensor.pc_multipowermeter_energy");
    ///<summary>PC-MultiPowerMeter Power</summary>
    public NumericSensorEntity PcMultipowermeterPower => new(_haContext, "sensor.pc_multipowermeter_power");
    ///<summary>Pc On today</summary>
    public NumericSensorEntity PcOnToday => new(_haContext, "sensor.pc_on_today");
    ///<summary>PC-Plug Energy</summary>
    public NumericSensorEntity PcPlugEnergy => new(_haContext, "sensor.pc_plug_energy");
    ///<summary>PC-Plug Power</summary>
    public NumericSensorEntity PcPlugPower => new(_haContext, "sensor.pc_plug_power");
    ///<summary>Power meter (hourly)</summary>
    public NumericSensorEntity PowerMeterHourly => new(_haContext, "sensor.power_meter_hourly");
    ///<summary>Power_Meters_Energy_Hourly</summary>
    public NumericSensorEntity PowerMetersEnergyHourly => new(_haContext, "sensor.power_meters_energy_hourly");
    ///<summary>All Energy Meters</summary>
    public NumericSensorEntity Powermeters => new(_haContext, "sensor.powermeters");
    ///<summary>QEMU haos9.5 (100) CPU used</summary>
    public NumericSensorEntity QemuHaos95100CpuUsed => new(_haContext, "sensor.qemu_haos9_5_100_cpu_used");
    ///<summary>QEMU haos9.5 (100) Disk used percentage</summary>
    public NumericSensorEntity QemuHaos95100DiskUsedPercentage => new(_haContext, "sensor.qemu_haos9_5_100_disk_used_percentage");
    ///<summary>QEMU haos9.5 (100) Memory free</summary>
    public NumericSensorEntity QemuHaos95100MemoryFree => new(_haContext, "sensor.qemu_haos9_5_100_memory_free");
    ///<summary>QEMU haos9.5 (100) Memory used</summary>
    public NumericSensorEntity QemuHaos95100MemoryUsed => new(_haContext, "sensor.qemu_haos9_5_100_memory_used");
    ///<summary>QEMU haos9.5 (100) Memory used percentage</summary>
    public NumericSensorEntity QemuHaos95100MemoryUsedPercentage => new(_haContext, "sensor.qemu_haos9_5_100_memory_used_percentage");
    ///<summary>SM-T530 Battery Level</summary>
    public NumericSensorEntity SmT530BatteryLevel => new(_haContext, "sensor.sm_t530_battery_level");
    ///<summary>Standing or Out Time</summary>
    public NumericSensorEntity StandingOrOutTime => new(_haContext, "sensor.standing_or_out_time");
    ///<summary>Standing Today</summary>
    public NumericSensorEntity StandingToday => new(_haContext, "sensor.standing_today");
    ///<summary>Steps Todays</summary>
    public NumericSensorEntity StepsTodays => new(_haContext, "sensor.steps_todays");
    ///<summary>Lux Sensor Battery</summary>
    public NumericSensorEntity StorageSensorAqaraBattery => new(_haContext, "sensor.storage_sensor_aqara_battery");
    ///<summary>Lux Sensor Temperature</summary>
    public NumericSensorEntity StorageSensorAqaraDeviceTemperature => new(_haContext, "sensor.storage_sensor_aqara_device_temperature");
    ///<summary>Lux Sensor Illuminance</summary>
    public NumericSensorEntity StorageSensorAqaraIlluminanceLux => new(_haContext, "sensor.storage_sensor_aqara_illuminance_lux");
    ///<summary>Storage Sensor Battery</summary>
    public NumericSensorEntity StorageSensorBattery => new(_haContext, "sensor.storage_sensor_battery");
    ///<summary>Sun Solar azimuth</summary>
    public NumericSensorEntity SunSolarAzimuth => new(_haContext, "sensor.sun_solar_azimuth");
    ///<summary>Sun Solar elevation</summary>
    public NumericSensorEntity SunSolarElevation => new(_haContext, "sensor.sun_solar_elevation");
    ///<summary>Surface_Laptop _battery Charge Remaining Percentage</summary>
    public NumericSensorEntity SurfaceLaptopBatteryChargeRemainingPercentage => new(_haContext, "sensor.surface_laptop_battery_charge_remaining_percentage");
    ///<summary>Switchbot Air Purifier Power Battery</summary>
    public NumericSensorEntity SwitchbotAirPurifierPowerBattery => new(_haContext, "sensor.switchbot_air_purifier_power_battery");
    ///<summary>Switchbot Ecoflow Battery</summary>
    public NumericSensorEntity SwitchbotEcoflowBattery => new(_haContext, "sensor.switchbot_ecoflow_battery");
    ///<summary>Switchbot Server Battery</summary>
    public NumericSensorEntity SwitchbotServerBattery => new(_haContext, "sensor.switchbot_server_battery");
    ///<summary>TDB Consumption</summary>
    public NumericSensorEntity TbdConsumption => new(_haContext, "sensor.tbd_consumption");
    ///<summary>TBD-PowerMeter Energy</summary>
    public NumericSensorEntity TbdPowermeterEnergy => new(_haContext, "sensor.tbd_powermeter_energy");
    ///<summary>TBD-PowerMeter Power</summary>
    public NumericSensorEntity TbdPowermeterPower => new(_haContext, "sensor.tbd_powermeter_power");
    ///<summary>Toilet Energy Daily Consuption</summary>
    public NumericSensorEntity ToiletEnergyDailyConsumption => new(_haContext, "sensor.toilet_energy_daily_consumption");
    ///<summary>Toilet Power Plug Energy</summary>
    public NumericSensorEntity ToiletPowerPlugEnergy => new(_haContext, "sensor.toilet_power_plug_energy");
    ///<summary>Toilet Power Plug Power</summary>
    public NumericSensorEntity ToiletPowerPlugPower => new(_haContext, "sensor.toilet_power_plug_power");
    ///<summary>Toilet Seat Sensor Battery</summary>
    public NumericSensorEntity ToiletSeatSensorBattery => new(_haContext, "sensor.toilet_seat_sensor_battery");
    ///<summary>Toilet Seat Sensor Temperature</summary>
    public NumericSensorEntity ToiletSeatSensorDeviceTemperature => new(_haContext, "sensor.toilet_seat_sensor_device_temperature");
    ///<summary>Toilet Sensor Battery</summary>
    public NumericSensorEntity ToiletSensorBattery2 => new(_haContext, "sensor.toilet_sensor_battery_2");
    ///<summary>Toilet Sensor Illuminance</summary>
    public NumericSensorEntity ToiletSensorIlluminanceLux => new(_haContext, "sensor.toilet_sensor_illuminance_lux");
    ///<summary>Toilet Sensor Temperature</summary>
    public NumericSensorEntity ToiletSensorTemperature2 => new(_haContext, "sensor.toilet_sensor_temperature_2");
    ///<summary>Total Hourly Energy Consumptions</summary>
    public NumericSensorEntity TotalHourlyEnergyConsumptions => new(_haContext, "sensor.total_hourly_energy_consumptions");
    ///<summary>Total PC Energy Daily</summary>
    public NumericSensorEntity TotalPcEnergyDaily => new(_haContext, "sensor.total_pc_energy_daily");
    ///<summary>Total PC Wattage</summary>
    public NumericSensorEntity TotalPcWattage => new(_haContext, "sensor.total_pc_wattage");
    ///<summary>True Daily Energy Consumption</summary>
    public NumericSensorEntity TrueDailyEnergyConsumption => new(_haContext, "sensor.true_daily_energy_consumption");
    ///<summary>Tv Power Meter Daily</summary>
    public NumericSensorEntity TvPowerMeterDaily => new(_haContext, "sensor.tv_power_meter_daily");
    ///<summary>Tv Power Meter Energy</summary>
    public NumericSensorEntity TvPowerMeterEnergy => new(_haContext, "sensor.tv_power_meter_energy");
    ///<summary>Tv Power Meter Power</summary>
    public NumericSensorEntity TvPowerMeterPower => new(_haContext, "sensor.tv_power_meter_power");
    ///<summary>Zatnas CPU Usage</summary>
    public NumericSensorEntity ZatnasCpuUsage => new(_haContext, "sensor.zatnas_cpu_usage");
    ///<summary>Zatnas Memory Usage</summary>
    public NumericSensorEntity ZatnasMemoryUsage => new(_haContext, "sensor.zatnas_memory_usage");
    ///<summary>Zatnas System Temperature</summary>
    public NumericSensorEntity ZatnasSystemTemperature => new(_haContext, "sensor.zatnas_system_temperature");
    ///<summary>Zatnas Volume Used (Content)</summary>
    public NumericSensorEntity ZatnasVolumeUsedContent => new(_haContext, "sensor.zatnas_volume_used_content");
    ///<summary>Zigbee2MQTT Bridge Permit join timeout</summary>
    public NumericSensorEntity Zigbee2mqttBridgePermitJoinTimeout => new(_haContext, "sensor.zigbee2mqtt_bridge_permit_join_timeout");
}

public partial class SwitchEntities
{
    private readonly IHaContext _haContext;
    public SwitchEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>PC Sensor Led indication</summary>
    public SwitchEntity _0x001788010bcfb16fLedIndication => new(_haContext, "switch.0x001788010bcfb16f_led_indication");
    ///<summary>AdGuard Home Filtering</summary>
    public SwitchEntity AdguardHomeFiltering => new(_haContext, "switch.adguard_home_filtering");
    ///<summary>AdGuard Home Parental control</summary>
    public SwitchEntity AdguardHomeParentalControl => new(_haContext, "switch.adguard_home_parental_control");
    ///<summary>AdGuard Home Protection</summary>
    public SwitchEntity AdguardHomeProtection => new(_haContext, "switch.adguard_home_protection");
    ///<summary>AdGuard Home Query log</summary>
    public SwitchEntity AdguardHomeQueryLog => new(_haContext, "switch.adguard_home_query_log");
    ///<summary>AdGuard Home Safe browsing</summary>
    public SwitchEntity AdguardHomeSafeBrowsing => new(_haContext, "switch.adguard_home_safe_browsing");
    ///<summary>AdGuard Home Safe search</summary>
    public SwitchEntity AdguardHomeSafeSearch => new(_haContext, "switch.adguard_home_safe_search");
    ///<summary>android-4db5a5b9f2c9a5dd Internet Access</summary>
    public SwitchEntity Android4db5a5b9f2c9a5ddInternetAccess => new(_haContext, "switch.android_4db5a5b9f2c9a5dd_internet_access");
    ///<summary>Fan</summary>
    public SwitchEntity BedMultiPlugL1 => new(_haContext, "switch.bed_multi_plug_l1");
    ///<summary>Sofa Nulti Center</summary>
    public SwitchEntity BedMultiPlugL2 => new(_haContext, "switch.bed_multi_plug_l2");
    ///<summary>TV</summary>
    public SwitchEntity BedMultiPlugL3 => new(_haContext, "switch.bed_multi_plug_l3");
    ///<summary>BigFridge-Powermeter</summary>
    public SwitchEntity BigfridgePowermeter => new(_haContext, "switch.bigfridge_powermeter");
    ///<summary>Walking Pad</summary>
    public SwitchEntity BrightLightPlug => new(_haContext, "switch.bright_light_plug");
    ///<summary>chromecastwithgoogletv Internet Access</summary>
    public SwitchEntity ChromecastwithgoogletvInternetAccess => new(_haContext, "switch.chromecastwithgoogletv_internet_access");
    ///<summary>DESKTOP-9RQRGIO Internet Access</summary>
    public SwitchEntity Desktop9rqrgioInternetAccess => new(_haContext, "switch.desktop_9rqrgio_internet_access");
    ///<summary>DESKTOP-K24V8NP Internet Access</summary>
    public SwitchEntity DesktopK24v8npInternetAccess => new(_haContext, "switch.desktop_k24v8np_internet_access");
    ///<summary>EcoFlow AC Always On</summary>
    public SwitchEntity EcoflowAcAlwaysOn => new(_haContext, "switch.ecoflow_ac_always_on");
    ///<summary>EcoFlow AC Enabled</summary>
    public SwitchEntity EcoflowAcEnabled => new(_haContext, "switch.ecoflow_ac_enabled");
    ///<summary>EcoFlow Backup Reserve Enabled</summary>
    public SwitchEntity EcoflowBackupReserveEnabled => new(_haContext, "switch.ecoflow_backup_reserve_enabled");
    ///<summary>EcoFlow Beeper</summary>
    public SwitchEntity EcoflowBeeper => new(_haContext, "switch.ecoflow_beeper");
    ///<summary>EcoFlow DC (12V) Enabled</summary>
    public SwitchEntity EcoflowDc12vEnabled => new(_haContext, "switch.ecoflow_dc_12v_enabled");
    ///<summary>Ecoflow Plug</summary>
    public SwitchEntity EcoflowPlug => new(_haContext, "switch.ecoflow_plug");
    ///<summary>EcoFlow Prio Solar Charging</summary>
    public SwitchEntity EcoflowPrioSolarCharging => new(_haContext, "switch.ecoflow_prio_solar_charging");
    ///<summary>EcoFlow USB Enabled</summary>
    public SwitchEntity EcoflowUsbEnabled => new(_haContext, "switch.ecoflow_usb_enabled");
    ///<summary>EcoFlow X-Boost Enabled</summary>
    public SwitchEntity EcoflowXBoostEnabled => new(_haContext, "switch.ecoflow_x_boost_enabled");
    ///<summary>Envy Internet Access</summary>
    public SwitchEntity EnvyInternetAccess => new(_haContext, "switch.envy_internet_access");
    ///<summary>Envy Internet Access</summary>
    public SwitchEntity EnvyInternetAccess2 => new(_haContext, "switch.envy_internet_access_2");
    ///<summary>Desktop-disctance Internet Access</summary>
    public SwitchEntity Esp32Ee4b54InternetAccess => new(_haContext, "switch.esp32_ee4b54_internet_access");
    ///<summary>ecoflow Internet Access</summary>
    public SwitchEntity EspressifInternetAccess => new(_haContext, "switch.espressif_internet_access");
    ///<summary>Speaker Plug</summary>
    public SwitchEntity FanPlug => new(_haContext, "switch.fan_plug");
    ///<summary>FRITZ!Box 6660 Cable Port forward 36</summary>
    public SwitchEntity FritzBox6660CablePortForward36 => new(_haContext, "switch.fritz_box_6660_cable_port_forward_36");
    ///<summary>FRITZ!Box 6660 Cable Port forward HTTP-Server</summary>
    public SwitchEntity FritzBox6660CablePortForwardHttpServer => new(_haContext, "switch.fritz_box_6660_cable_port_forward_http_server");
    ///<summary>FRITZ!Box 6660 Cable Port forward HTTP-Server 8123</summary>
    public SwitchEntity FritzBox6660CablePortForwardHttpServer8123 => new(_haContext, "switch.fritz_box_6660_cable_port_forward_http_server_8123");
    ///<summary>FRITZ!Box 6660 Cable Port forward Maxcio Pistoke</summary>
    public SwitchEntity FritzBox6660CablePortForwardMaxcioPistoke => new(_haContext, "switch.fritz_box_6660_cable_port_forward_maxcio_pistoke");
    ///<summary>FRITZ!Box 6660 Cable Port forward remote1</summary>
    public SwitchEntity FritzBox6660CablePortForwardRemote1 => new(_haContext, "switch.fritz_box_6660_cable_port_forward_remote1");
    ///<summary>FRITZ!Box 6660 Cable Port forward Remote2</summary>
    public SwitchEntity FritzBox6660CablePortForwardRemote2 => new(_haContext, "switch.fritz_box_6660_cable_port_forward_remote2");
    ///<summary>FRITZ!Box 6660 Cable Wi-Fi FRITZ!Box guest access</summary>
    public SwitchEntity FritzBox6660CableWiFiFritzBoxGuestAccess => new(_haContext, "switch.fritz_box_6660_cable_wi_fi_fritz_box_guest_access");
    ///<summary>FRITZ!Box 6660 Cable Wi-Fi Kotiverkko (2.4Ghz)</summary>
    public SwitchEntity FritzBox6660CableWiFiKotiverkko24ghz => new(_haContext, "switch.fritz_box_6660_cable_wi_fi_kotiverkko_2_4ghz");
    ///<summary>FRITZ!Box 6660 Cable Wi-Fi Kotiverkko (5Ghz)</summary>
    public SwitchEntity FritzBox6660CableWiFiKotiverkko5ghz => new(_haContext, "switch.fritz_box_6660_cable_wi_fi_kotiverkko_5ghz");
    ///<summary>Galaxy-A51 Internet Access</summary>
    public SwitchEntity GalaxyA51InternetAccess => new(_haContext, "switch.galaxy_a51_internet_access");
    ///<summary>fuchsia-1c53-f9e1-9a4e Internet Access</summary>
    public SwitchEntity GoogleNestHubInternetAccess => new(_haContext, "switch.google_nest_hub_internet_access");
    ///<summary>Google-Nest-Mini Internet Access</summary>
    public SwitchEntity GoogleNestMiniInternetAccess => new(_haContext, "switch.google_nest_mini_internet_access");
    ///<summary>Hallway Sensor Led indication</summary>
    public SwitchEntity HallwaySensorLedIndication => new(_haContext, "switch.hallway_sensor_led_indication");
    ///<summary>homeAssistant Internet Access</summary>
    public SwitchEntity HomeassistantInternetAccess => new(_haContext, "switch.homeassistant_internet_access");
    ///<summary>homeassistantcontainer Internet Access</summary>
    public SwitchEntity HomeassistantcontainerInternetAccess => new(_haContext, "switch.homeassistantcontainer_internet_access");
    ///<summary>Indoor temperature and humidity sensor Switch</summary>
    public SwitchEntity IndoorTemperatureAndHumiditySensorSwitch => new(_haContext, "switch.indoor_temperature_and_humidity_sensor_switch");
    ///<summary>IR-Remote Internet Access</summary>
    public SwitchEntity IrRemoteInternetAccess => new(_haContext, "switch.ir_remote_internet_access");
    ///<summary>jaeaekaapinlaempoemittari Internet Access</summary>
    public SwitchEntity JaeaekaapinlaempoemittariInternetAccess => new(_haContext, "switch.jaeaekaapinlaempoemittari_internet_access");
    ///<summary>Kitchen PowerMeter-Plug</summary>
    public SwitchEntity KitchenPowermeterPlug => new(_haContext, "switch.kitchen_powermeter_plug");
    ///<summary>Kitchen Sensor Led indication</summary>
    public SwitchEntity KitchenSensorLedIndication => new(_haContext, "switch.kitchen_sensor_led_indication");
    ///<summary>wlan0 Internet Access</summary>
    public SwitchEntity LaptopRnusi7lbInternetAccess => new(_haContext, "switch.laptop_rnusi7lb_internet_access");
    ///<summary>mainpc Internet Access</summary>
    public SwitchEntity MainpcInternetAccess => new(_haContext, "switch.mainpc_internet_access");
    ///<summary>maxciopistoke Internet Access</summary>
    public SwitchEntity MaxciopistokeInternetAccess => new(_haContext, "switch.maxciopistoke_internet_access");
    ///<summary>mediaserver Internet Access</summary>
    public SwitchEntity MediaserverInternetAccess => new(_haContext, "switch.mediaserver_internet_access");
    ///<summary>Misc-PowerMeter</summary>
    public SwitchEntity MiscPowermeter => new(_haContext, "switch.misc_powermeter");
    ///<summary>Modem and Proxmox PowerMeter</summary>
    public SwitchEntity ModemAndProxmoxPowermeter => new(_haContext, "switch.modem_and_proxmox_powermeter");
    ///<summary>Modem Auto On Plug</summary>
    public SwitchEntity ModemAutoOnPlug => new(_haContext, "switch.modem_auto_on_plug");
    ///<summary>nintendoswitch Internet Access</summary>
    public SwitchEntity NintendoswitchInternetAccess => new(_haContext, "switch.nintendoswitch_internet_access");
    ///<summary>Outside temperature meter Switch</summary>
    public SwitchEntity OutsideTemperatureMeterSwitch => new(_haContext, "switch.outside_temperature_meter_switch");
    ///<summary>switchlan Internet Access</summary>
    public SwitchEntity Pc192168024InternetAccess => new(_haContext, "switch.pc_192_168_0_24_internet_access");
    ///<summary>Jellyfin Internet Access</summary>
    public SwitchEntity Pc5680C34602F8InternetAccess => new(_haContext, "switch.pc_56_80_c3_46_02_f8_internet_access");
    ///<summary>minitemp-humiditysensor Internet Access</summary>
    public SwitchEntity PcA09208902291InternetAccess => new(_haContext, "switch.pc_a0_92_08_90_22_91_internet_access");
    ///<summary>DESKTOP-AOTDDD2 Internet Access</summary>
    public SwitchEntity PcB4Ae2bE4A3F8InternetAccess => new(_haContext, "switch.pc_b4_ae_2b_e4_a3_f8_internet_access");
    ///<summary>PC Connector Child lock</summary>
    public SwitchEntity PcConnectorChildLock => new(_haContext, "switch.pc_connector_child_lock");
    ///<summary>Multi Plug: Bright Light</summary>
    public SwitchEntity PcConnectorSocket1 => new(_haContext, "switch.pc_connector_socket_1");
    ///<summary>MultiPlug 2 - PC Monitors</summary>
    public SwitchEntity PcConnectorSocket2 => new(_haContext, "switch.pc_connector_socket_2");
    ///<summary>Multi Plug 3 - Nest</summary>
    public SwitchEntity PcConnectorSocket3 => new(_haContext, "switch.pc_connector_socket_3");
    ///<summary>Multi Plug USB</summary>
    public SwitchEntity PcConnectorSocket4 => new(_haContext, "switch.pc_connector_socket_4");
    ///<summary>Bright Light</summary>
    public SwitchEntity PcMultipowermeterBrightlight => new(_haContext, "switch.pc_multipowermeter_brightlight");
    ///<summary>Desktop Laptop</summary>
    public SwitchEntity PcMultipowermeterLplug => new(_haContext, "switch.pc_multipowermeter_lplug");
    ///<summary>Monitors</summary>
    public SwitchEntity PcMultipowermeterMonitors => new(_haContext, "switch.pc_multipowermeter_monitors");
    ///<summary>PC-Plug</summary>
    public SwitchEntity PcPlug => new(_haContext, "switch.pc_plug");
    ///<summary>Puhelin Internet Access</summary>
    public SwitchEntity PuhelinInternetAccess => new(_haContext, "switch.puhelin_internet_access");
    ///<summary>Puhelin Internet Access</summary>
    public SwitchEntity PuhelinInternetAccess2 => new(_haContext, "switch.puhelin_internet_access_2");
    ///<summary>Qnap</summary>
    public SwitchEntity Qnap => new(_haContext, "switch.qnap");
    ///<summary>Schedule #01bf9d</summary>
    public SwitchEntity Schedule01bf9d => new(_haContext, "switch.schedule_01bf9d");
    ///<summary>Schedule #606cd1</summary>
    public SwitchEntity Schedule606cd1 => new(_haContext, "switch.schedule_606cd1");
    ///<summary>Schedule #ca82ae</summary>
    public SwitchEntity ScheduleCa82ae => new(_haContext, "switch.schedule_ca82ae");
    ///<summary>Schedule #e85023</summary>
    public SwitchEntity ScheduleE85023 => new(_haContext, "switch.schedule_e85023");
    ///<summary>Switchbot Air Purifier Power</summary>
    public SwitchEntity SwitchbotAirPurifierPower => new(_haContext, "switch.switchbot_air_purifier_power");
    ///<summary>Switchbot Air Purifier Power Reverse</summary>
    public SwitchEntity SwitchbotAirPurifierPowerReverse => new(_haContext, "switch.switchbot_air_purifier_power_reverse");
    ///<summary>Switchbot Air Purifier Power Touch</summary>
    public SwitchEntity SwitchbotAirPurifierPowerTouch => new(_haContext, "switch.switchbot_air_purifier_power_touch");
    ///<summary>Switchbot Ecoflow</summary>
    public SwitchEntity SwitchbotEcoflow => new(_haContext, "switch.switchbot_ecoflow");
    ///<summary>Switchbot Ecoflow Reverse</summary>
    public SwitchEntity SwitchbotEcoflowReverse => new(_haContext, "switch.switchbot_ecoflow_reverse");
    ///<summary>Switchbot Ecoflow Touch</summary>
    public SwitchEntity SwitchbotEcoflowTouch => new(_haContext, "switch.switchbot_ecoflow_touch");
    ///<summary>Switchbot Server</summary>
    public SwitchEntity SwitchbotServer => new(_haContext, "switch.switchbot_server");
    ///<summary>Switchbot Server Reverse</summary>
    public SwitchEntity SwitchbotServerReverse => new(_haContext, "switch.switchbot_server_reverse");
    ///<summary>Switchbot Server Touch</summary>
    public SwitchEntity SwitchbotServerTouch => new(_haContext, "switch.switchbot_server_touch");
    ///<summary>TBD-PowerMeter</summary>
    public SwitchEntity TbdPowermeter => new(_haContext, "switch.tbd_powermeter");
    ///<summary>Toilet Power Plug</summary>
    public SwitchEntity ToiletPowerPlug => new(_haContext, "switch.toilet_power_plug");
    ///<summary>Toilet Sensor Led indication</summary>
    public SwitchEntity ToiletSensorLedIndication => new(_haContext, "switch.toilet_sensor_led_indication");
    ///<summary>Tv Power Meter</summary>
    public SwitchEntity TvPowerMeter => new(_haContext, "switch.tv_power_meter");
    ///<summary>zatman-MacBookPro Internet Access</summary>
    public SwitchEntity ZatmanMacbookproInternetAccess => new(_haContext, "switch.zatman_macbookpro_internet_access");
    ///<summary>Zatnas Internet Access</summary>
    public SwitchEntity ZatnasInternetAccess => new(_haContext, "switch.zatnas_internet_access");
    ///<summary>Zigbee2MQTT Bridge Permit join</summary>
    public SwitchEntity Zigbee2mqttBridgePermitJoin => new(_haContext, "switch.zigbee2mqtt_bridge_permit_join");
}

public partial class UpdateEntities
{
    private readonly IHaContext _haContext;
    public UpdateEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>AdGuard Home Update</summary>
    public UpdateEntity AdguardHomeUpdate => new(_haContext, "update.adguard_home_update");
    ///<summary>Assist Microphone Update</summary>
    public UpdateEntity AssistMicrophoneUpdate => new(_haContext, "update.assist_microphone_update");
    ///<summary>Bed Light</summary>
    public UpdateEntity BedLight => new(_haContext, "update.bed_light");
    ///<summary>Bed Light Plug</summary>
    public UpdateEntity BedLightPlug => new(_haContext, "update.bed_light_plug");
    ///<summary>BigFridge-Powermeter</summary>
    public UpdateEntity BigfridgePowermeter => new(_haContext, "update.bigfridge_powermeter");
    ///<summary>Desktop Light</summary>
    public UpdateEntity DesktopLight => new(_haContext, "update.desktop_light");
    ///<summary>Duck DNS Update</summary>
    public UpdateEntity DuckDnsUpdate => new(_haContext, "update.duck_dns_update");
    ///<summary>Ecoflow Plug</summary>
    public UpdateEntity EcoflowPlug => new(_haContext, "update.ecoflow_plug");
    ///<summary>Fan Plug</summary>
    public UpdateEntity FanPlug => new(_haContext, "update.fan_plug");
    ///<summary>File editor Update</summary>
    public UpdateEntity FileEditorUpdate => new(_haContext, "update.file_editor_update");
    ///<summary>FRITZ!Box 6660 Cable FRITZ!OS</summary>
    public UpdateEntity FritzBox6660CableFritzOs => new(_haContext, "update.fritz_box_6660_cable_fritz_os");
    ///<summary>Hallway Light</summary>
    public UpdateEntity HallwayLight => new(_haContext, "update.hallway_light");
    ///<summary>Hallway Sensor</summary>
    public UpdateEntity HallwaySensor => new(_haContext, "update.hallway_sensor");
    ///<summary>Home Assistant Core Update</summary>
    public UpdateEntity HomeAssistantCoreUpdate => new(_haContext, "update.home_assistant_core_update");
    ///<summary>Home Assistant Google Drive Backup Update</summary>
    public UpdateEntity HomeAssistantGoogleDriveBackupUpdate => new(_haContext, "update.home_assistant_google_drive_backup_update");
    ///<summary>Home Assistant Operating System Update</summary>
    public UpdateEntity HomeAssistantOperatingSystemUpdate => new(_haContext, "update.home_assistant_operating_system_update");
    ///<summary>Home Assistant Supervisor Update</summary>
    public UpdateEntity HomeAssistantSupervisorUpdate => new(_haContext, "update.home_assistant_supervisor_update");
    ///<summary>Hue Switch Bed</summary>
    public UpdateEntity HueSwitchBed => new(_haContext, "update.hue_switch_bed");
    ///<summary>Hue Switch Living Room</summary>
    public UpdateEntity HueSwitchLivingRoom => new(_haContext, "update.hue_switch_living_room");
    ///<summary>Kitchen Light</summary>
    public UpdateEntity KitchenLight => new(_haContext, "update.kitchen_light");
    ///<summary>Kitchen PowerMeter-Plug</summary>
    public UpdateEntity KitchenPowermeterPlug => new(_haContext, "update.kitchen_powermeter_plug");
    ///<summary>Kitchen Sensor</summary>
    public UpdateEntity KitchenSensor => new(_haContext, "update.kitchen_sensor");
    ///<summary>Living Room Light</summary>
    public UpdateEntity LivingRoomLight => new(_haContext, "update.living_room_light");
    ///<summary>LivingRoomFP1</summary>
    public UpdateEntity Livingroomfp1 => new(_haContext, "update.livingroomfp1");
    ///<summary>MariaDB Update</summary>
    public UpdateEntity MariadbUpdate => new(_haContext, "update.mariadb_update");
    ///<summary>Misc-PowerMeter</summary>
    public UpdateEntity MiscPowermeter => new(_haContext, "update.misc_powermeter");
    ///<summary>Modem and Proxmox PowerMeter</summary>
    public UpdateEntity ModemAndProxmoxPowermeter => new(_haContext, "update.modem_and_proxmox_powermeter");
    ///<summary>Modem Auto On Plug</summary>
    public UpdateEntity ModemAutoOnPlug => new(_haContext, "update.modem_auto_on_plug");
    ///<summary>Mosquitto broker Update</summary>
    public UpdateEntity MosquittoBrokerUpdate => new(_haContext, "update.mosquitto_broker_update");
    ///<summary>NetDaemon V3.1 (.NET 7) Update</summary>
    public UpdateEntity NetdaemonV31Net7Update => new(_haContext, "update.netdaemon_v3_1_net_7_update");
    ///<summary>Nginx Proxy Manager Update</summary>
    public UpdateEntity NginxProxyManagerUpdate => new(_haContext, "update.nginx_proxy_manager_update");
    ///<summary>openWakeWord Update</summary>
    public UpdateEntity OpenwakewordUpdate => new(_haContext, "update.openwakeword_update");
    ///<summary>PC-Plug</summary>
    public UpdateEntity PcPlug => new(_haContext, "update.pc_plug");
    ///<summary>Piper Update</summary>
    public UpdateEntity PiperUpdate => new(_haContext, "update.piper_update");
    ///<summary>Samba share Update</summary>
    public UpdateEntity SambaShareUpdate => new(_haContext, "update.samba_share_update");
    ///<summary>Storage Light</summary>
    public UpdateEntity StorageLight => new(_haContext, "update.storage_light");
    ///<summary>Studio Code Server Update</summary>
    public UpdateEntity StudioCodeServerUpdate => new(_haContext, "update.studio_code_server_update");
    ///<summary>TBD-PowerMeter</summary>
    public UpdateEntity TbdPowermeter => new(_haContext, "update.tbd_powermeter");
    ///<summary>Terminal &amp; SSH Update</summary>
    public UpdateEntity TerminalSshUpdate => new(_haContext, "update.terminal_ssh_update");
    ///<summary>Toilet Light_1</summary>
    public UpdateEntity ToiletLight1 => new(_haContext, "update.toilet_light_1");
    ///<summary>Toilet Power Plug</summary>
    public UpdateEntity ToiletPowerPlug => new(_haContext, "update.toilet_power_plug");
    ///<summary>Toilet Sensor</summary>
    public UpdateEntity ToiletSensor => new(_haContext, "update.toilet_sensor");
    ///<summary>Tv Power Meter</summary>
    public UpdateEntity TvPowerMeter => new(_haContext, "update.tv_power_meter");
    ///<summary>VLC Update</summary>
    public UpdateEntity VlcUpdate => new(_haContext, "update.vlc_update");
    ///<summary>Whisper Update</summary>
    public UpdateEntity WhisperUpdate => new(_haContext, "update.whisper_update");
    ///<summary>Zigbee2MQTT Update</summary>
    public UpdateEntity Zigbee2mqttUpdate => new(_haContext, "update.zigbee2mqtt_update");
}

public partial class WeatherEntities
{
    private readonly IHaContext _haContext;
    public WeatherEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Forecast Home</summary>
    public WeatherEntity ForecastHome => new(_haContext, "weather.forecast_home");
}

public partial class ZoneEntities
{
    private readonly IHaContext _haContext;
    public ZoneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Home</summary>
    public ZoneEntity Home => new(_haContext, "zone.home");
}

public partial class SunEntities
{
    private readonly IHaContext _haContext;
    public SunEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sun</summary>
    public SunEntity Sun => new(_haContext, "sun.sun");
}

public partial class RemoteEntities
{
    private readonly IHaContext _haContext;
    public RemoteEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Living Room TV</summary>
    public RemoteEntity LivingRoomTv => new(_haContext, "remote.living_room_tv");
}

public partial class SttEntities
{
    private readonly IHaContext _haContext;
    public SttEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>faster-whisper</summary>
    public SttEntity FasterWhisper => new(_haContext, "stt.faster_whisper");
}

public partial class TtsEntities
{
    private readonly IHaContext _haContext;
    public TtsEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>piper</summary>
    public TtsEntity Piper => new(_haContext, "tts.piper");
}

public partial class ImageEntities
{
    private readonly IHaContext _haContext;
    public ImageEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>FRITZ!Box 6660 Cable FRITZ!Box guest access</summary>
    public ImageEntity FritzBox6660CableFritzBoxGuestAccess => new(_haContext, "image.fritz_box_6660_cable_fritz_box_guest_access");
}

public partial class CounterEntities
{
    private readonly IHaContext _haContext;
    public CounterEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Last Know Step Count</summary>
    public CounterEntity LastKnowStepCount => new(_haContext, "counter.last_know_step_count");
}

public partial class WakeWordEntities
{
    private readonly IHaContext _haContext;
    public WakeWordEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>openwakeword</summary>
    public WakeWordEntity Openwakeword => new(_haContext, "wake_word.openwakeword");
}

public partial record AutomationEntity : Entity<AutomationEntity, EntityState<AutomationAttributes>, AutomationAttributes>, IAutomationEntityCore
{
    public AutomationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public AutomationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record AutomationAttributes
{
    [JsonPropertyName("last_triggered")]
    public string? LastTriggered { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }
}

public partial record BinarySensorEntity : Entity<BinarySensorEntity, EntityState<BinarySensorAttributes>, BinarySensorAttributes>, IBinarySensorEntityCore
{
    public BinarySensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public BinarySensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record BinarySensorAttributes
{
    [JsonPropertyName("entity_id")]
    public object? EntityId { get; init; }

    [JsonPropertyName("hysteresis")]
    public double? Hysteresis { get; init; }

    [JsonPropertyName("lower")]
    public double? Lower { get; init; }

    [JsonPropertyName("position")]
    public string? Position { get; init; }

    [JsonPropertyName("sensor_value")]
    public object? SensorValue { get; init; }

    [JsonPropertyName("type")]
    public string? Type { get; init; }

    [JsonPropertyName("upper")]
    public double? Upper { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("round_trip_time_avg")]
    public double? RoundTripTimeAvg { get; init; }

    [JsonPropertyName("round_trip_time_max")]
    public double? RoundTripTimeMax { get; init; }

    [JsonPropertyName("round_trip_time_mdev")]
    public string? RoundTripTimeMdev { get; init; }

    [JsonPropertyName("round_trip_time_min")]
    public double? RoundTripTimeMin { get; init; }
}

public partial record ButtonEntity : Entity<ButtonEntity, EntityState<ButtonAttributes>, ButtonAttributes>, IButtonEntityCore
{
    public ButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ButtonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ButtonAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }
}

public partial record DeviceTrackerEntity : Entity<DeviceTrackerEntity, EntityState<DeviceTrackerAttributes>, DeviceTrackerAttributes>, IDeviceTrackerEntityCore
{
    public DeviceTrackerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public DeviceTrackerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record DeviceTrackerAttributes
{
    [JsonPropertyName("source_type")]
    public string? SourceType { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("altitude")]
    public double? Altitude { get; init; }

    [JsonPropertyName("course")]
    public double? Course { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("vertical_accuracy")]
    public double? VerticalAccuracy { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("is_lost")]
    public bool? IsLost { get; init; }

    [JsonPropertyName("last_lost_timestamp")]
    public string? LastLostTimestamp { get; init; }

    [JsonPropertyName("last_timestamp")]
    public string? LastTimestamp { get; init; }

    [JsonPropertyName("ring_state")]
    public string? RingState { get; init; }

    [JsonPropertyName("voip_state")]
    public string? VoipState { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("ip")]
    public string? Ip { get; init; }

    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    [JsonPropertyName("host_name")]
    public string? HostName { get; init; }

    [JsonPropertyName("last_time_reachable")]
    public string? LastTimeReachable { get; init; }

    [JsonPropertyName("connected_to")]
    public string? ConnectedTo { get; init; }

    [JsonPropertyName("connection_type")]
    public string? ConnectionType { get; init; }

    [JsonPropertyName("ssid")]
    public string? Ssid { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record InputBooleanEntity : Entity<InputBooleanEntity, EntityState<InputBooleanAttributes>, InputBooleanAttributes>, IInputBooleanEntityCore
{
    public InputBooleanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputBooleanEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputBooleanAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputDatetimeEntity : Entity<InputDatetimeEntity, EntityState<InputDatetimeAttributes>, InputDatetimeAttributes>, IInputDatetimeEntityCore
{
    public InputDatetimeEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputDatetimeEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputDatetimeAttributes
{
    [JsonPropertyName("has_date")]
    public bool? HasDate { get; init; }

    [JsonPropertyName("has_time")]
    public bool? HasTime { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("year")]
    public double? Year { get; init; }

    [JsonPropertyName("month")]
    public double? Month { get; init; }

    [JsonPropertyName("day")]
    public double? Day { get; init; }

    [JsonPropertyName("hour")]
    public double? Hour { get; init; }

    [JsonPropertyName("minute")]
    public double? Minute { get; init; }

    [JsonPropertyName("second")]
    public double? Second { get; init; }

    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }
}

public partial record InputNumberEntity : NumericEntity<InputNumberEntity, NumericEntityState<InputNumberAttributes>, InputNumberAttributes>, IInputNumberEntityCore
{
    public InputNumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputNumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputNumberAttributes
{
    [JsonPropertyName("initial")]
    public object? Initial { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }
}

public partial record InputSelectEntity : Entity<InputSelectEntity, EntityState<InputSelectAttributes>, InputSelectAttributes>, IInputSelectEntityCore
{
    public InputSelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputSelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputSelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputTextEntity : Entity<InputTextEntity, EntityState<InputTextAttributes>, InputTextAttributes>, IInputTextEntityCore
{
    public InputTextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputTextEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputTextAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("pattern")]
    public object? Pattern { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record LightEntity : Entity<LightEntity, EntityState<LightAttributes>, LightAttributes>, ILightEntityCore
{
    public LightEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public LightEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record LightAttributes
{
    [JsonPropertyName("supported_color_modes")]
    public IReadOnlyList<string>? SupportedColorModes { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("min_color_temp_kelvin")]
    public double? MinColorTempKelvin { get; init; }

    [JsonPropertyName("max_color_temp_kelvin")]
    public double? MaxColorTempKelvin { get; init; }

    [JsonPropertyName("min_mireds")]
    public double? MinMireds { get; init; }

    [JsonPropertyName("max_mireds")]
    public double? MaxMireds { get; init; }

    [JsonPropertyName("effect_list")]
    public IReadOnlyList<string>? EffectList { get; init; }

    [JsonPropertyName("color_mode")]
    public object? ColorMode { get; init; }

    [JsonPropertyName("brightness")]
    public int? Brightness { get; init; }

    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("color_temp_kelvin")]
    public object? ColorTempKelvin { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    [JsonPropertyName("rgb_color")]
    public object? RgbColor { get; init; }

    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("effect")]
    public object? Effect { get; init; }
}

public partial record LockEntity : Entity<LockEntity, EntityState<LockAttributes>, LockAttributes>, ILockEntityCore
{
    public LockEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public LockEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record LockAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record MediaPlayerEntity : Entity<MediaPlayerEntity, EntityState<MediaPlayerAttributes>, MediaPlayerAttributes>, IMediaPlayerEntityCore
{
    public MediaPlayerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public MediaPlayerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record MediaPlayerAttributes
{
    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }

    [JsonPropertyName("media_duration")]
    public double? MediaDuration { get; init; }

    [JsonPropertyName("media_position")]
    public double? MediaPosition { get; init; }

    [JsonPropertyName("media_position_updated_at")]
    public string? MediaPositionUpdatedAt { get; init; }

    [JsonPropertyName("media_title")]
    public string? MediaTitle { get; init; }

    [JsonPropertyName("media_artist")]
    public string? MediaArtist { get; init; }

    [JsonPropertyName("media_album_name")]
    public string? MediaAlbumName { get; init; }

    [JsonPropertyName("media_album_artist")]
    public string? MediaAlbumArtist { get; init; }

    [JsonPropertyName("app_id")]
    public string? AppId { get; init; }

    [JsonPropertyName("app_name")]
    public string? AppName { get; init; }

    [JsonPropertyName("entity_picture_local")]
    public object? EntityPictureLocal { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("adb_response")]
    public object? AdbResponse { get; init; }

    [JsonPropertyName("hdmi_input")]
    public object? HdmiInput { get; init; }

    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    [JsonPropertyName("source_list")]
    public IReadOnlyList<string>? SourceList { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }
}

public partial record NumberEntity : NumericEntity<NumberEntity, NumericEntityState<NumberAttributes>, NumberAttributes>, INumberEntityCore
{
    public NumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumberAttributes
{
    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }
}

public partial record PersonEntity : Entity<PersonEntity, EntityState<PersonAttributes>, PersonAttributes>, IPersonEntityCore
{
    public PersonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public PersonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record PersonAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("user_id")]
    public string? UserId { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_trackers")]
    public IReadOnlyList<string>? DeviceTrackers { get; init; }
}

public partial record SceneEntity : Entity<SceneEntity, EntityState<SceneAttributes>, SceneAttributes>, ISceneEntityCore
{
    public SceneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SceneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SceneAttributes
{
    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ScriptEntity : Entity<ScriptEntity, EntityState<ScriptAttributes>, ScriptAttributes>, IScriptEntityCore
{
    public ScriptEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ScriptEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ScriptAttributes
{
    [JsonPropertyName("last_triggered")]
    public string? LastTriggered { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record SelectEntity : Entity<SelectEntity, EntityState<SelectAttributes>, SelectAttributes>, ISelectEntityCore
{
    public SelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }
}

public partial record SensorEntity : Entity<SensorEntity, EntityState<SensorAttributes>, SensorAttributes>, ISensorEntityCore
{
    public SensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SensorAttributes
{
    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("android.appInfo")]
    public string? Android_appInfo { get; init; }

    [JsonPropertyName("android.reduced.images")]
    public bool? Android_reduced_images { get; init; }

    [JsonPropertyName("android.showWhen")]
    public bool? Android_showWhen { get; init; }

    [JsonPropertyName("android.text")]
    public string? Android_text { get; init; }

    [JsonPropertyName("android.title")]
    public string? Android_title { get; init; }

    [JsonPropertyName("category")]
    public string? Category { get; init; }

    [JsonPropertyName("channel_id")]
    public string? ChannelId { get; init; }

    [JsonPropertyName("group_id")]
    public string? GroupId { get; init; }

    [JsonPropertyName("hw_disable_ntf_delete_menu")]
    public bool? HwDisableNtfDeleteMenu { get; init; }

    [JsonPropertyName("is_clearable")]
    public bool? IsClearable { get; init; }

    [JsonPropertyName("is_ongoing")]
    public bool? IsOngoing { get; init; }

    [JsonPropertyName("package")]
    public string? Package { get; init; }

    [JsonPropertyName("post_time")]
    public double? PostTime { get; init; }

    [JsonPropertyName("album_ak.alizandro.smartaudiobookplayer")]
    public string? AlbumAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("album_com.aimp.player")]
    public string? AlbumCom_aimp_player { get; init; }

    [JsonPropertyName("artist_ak.alizandro.smartaudiobookplayer")]
    public string? ArtistAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("artist_com.aimp.player")]
    public string? ArtistCom_aimp_player { get; init; }

    [JsonPropertyName("duration_ak.alizandro.smartaudiobookplayer")]
    public double? DurationAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("duration_com.aimp.player")]
    public double? DurationCom_aimp_player { get; init; }

    [JsonPropertyName("media_id_ak.alizandro.smartaudiobookplayer")]
    public string? MediaIdAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("media_id_com.aimp.player")]
    public string? MediaIdCom_aimp_player { get; init; }

    [JsonPropertyName("playback_position_ak.alizandro.smartaudiobookplayer")]
    public double? PlaybackPositionAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("playback_position_com.aimp.player")]
    public double? PlaybackPositionCom_aimp_player { get; init; }

    [JsonPropertyName("playback_state_ak.alizandro.smartaudiobookplayer")]
    public string? PlaybackStateAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("playback_state_com.aimp.player")]
    public string? PlaybackStateCom_aimp_player { get; init; }

    [JsonPropertyName("title_ak.alizandro.smartaudiobookplayer")]
    public string? TitleAk_alizandro_smartaudiobookplayer { get; init; }

    [JsonPropertyName("title_com.aimp.player")]
    public string? TitleCom_aimp_player { get; init; }

    [JsonPropertyName("total_media_session_count")]
    public double? TotalMediaSessionCount { get; init; }

    [JsonPropertyName("Name")]
    public string? Name_0 { get; init; }

    [JsonPropertyName("name")]
    public string? Name_1 { get; init; }

    [JsonPropertyName("Resolution")]
    public string? Resolution { get; init; }

    [JsonPropertyName("Width")]
    public double? Width { get; init; }

    [JsonPropertyName("Height")]
    public double? Height { get; init; }

    [JsonPropertyName("BitsPerPixel")]
    public double? BitsPerPixel { get; init; }

    [JsonPropertyName("PrimaryDisplay")]
    public bool? PrimaryDisplay { get; init; }

    [JsonPropertyName("WorkingArea")]
    public string? WorkingArea { get; init; }

    [JsonPropertyName("WorkingAreaWidth")]
    public double? WorkingAreaWidth { get; init; }

    [JsonPropertyName("WorkingAreaHeight")]
    public double? WorkingAreaHeight { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("AudioSessions")]
    public IReadOnlyList<object>? AudioSessions { get; init; }

    [JsonPropertyName("last_backup")]
    public string? LastBackup { get; init; }

    [JsonPropertyName("next_backup")]
    public string? NextBackup { get; init; }

    [JsonPropertyName("last_uploaded")]
    public string? LastUploaded { get; init; }

    [JsonPropertyName("backups_in_google_drive")]
    public double? BackupsInGoogleDrive { get; init; }

    [JsonPropertyName("backups_in_home_assistant")]
    public double? BackupsInHomeAssistant { get; init; }

    [JsonPropertyName("size_in_google_drive")]
    public string? SizeInGoogleDrive { get; init; }

    [JsonPropertyName("size_in_home_assistant")]
    public string? SizeInHomeAssistant { get; init; }

    [JsonPropertyName("backups")]
    public IReadOnlyList<object>? Backups { get; init; }

    [JsonPropertyName("free_space_in_google_drive")]
    public string? FreeSpaceInGoogleDrive { get; init; }

    [JsonPropertyName("album_com.google.android.googlequicksearchbox")]
    public string? AlbumCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("album_com.plexapp.android")]
    public string? AlbumCom_plexapp_android { get; init; }

    [JsonPropertyName("artist_com.google.android.googlequicksearchbox")]
    public string? ArtistCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("artist_com.plexapp.android")]
    public string? ArtistCom_plexapp_android { get; init; }

    [JsonPropertyName("duration_com.google.android.googlequicksearchbox")]
    public double? DurationCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("duration_com.plexapp.android")]
    public object? DurationCom_plexapp_android { get; init; }

    [JsonPropertyName("media_id_com.google.android.googlequicksearchbox")]
    public string? MediaIdCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("media_id_com.plexapp.android")]
    public string? MediaIdCom_plexapp_android { get; init; }

    [JsonPropertyName("playback_position_com.google.android.googlequicksearchbox")]
    public double? PlaybackPositionCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("playback_position_com.plexapp.android")]
    public object? PlaybackPositionCom_plexapp_android { get; init; }

    [JsonPropertyName("playback_state_com.google.android.googlequicksearchbox")]
    public string? PlaybackStateCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("playback_state_com.plexapp.android")]
    public string? PlaybackStateCom_plexapp_android { get; init; }

    [JsonPropertyName("title_com.google.android.googlequicksearchbox")]
    public string? TitleCom_google_android_googlequicksearchbox { get; init; }

    [JsonPropertyName("title_com.plexapp.android")]
    public string? TitleCom_plexapp_android { get; init; }

    [JsonPropertyName("NetworkInterfaceType")]
    public string? NetworkInterfaceType { get; init; }

    [JsonPropertyName("SpeedBitsPerSecond")]
    public double? SpeedBitsPerSecond { get; init; }

    [JsonPropertyName("OperationalStatus")]
    public string? OperationalStatus { get; init; }

    [JsonPropertyName("DataReceivedMB")]
    public double? DataReceivedMB { get; init; }

    [JsonPropertyName("DataSentMB")]
    public double? DataSentMB { get; init; }

    [JsonPropertyName("IncomingPacketsDiscarded")]
    public double? IncomingPacketsDiscarded { get; init; }

    [JsonPropertyName("IncomingPacketsWithErrors")]
    public double? IncomingPacketsWithErrors { get; init; }

    [JsonPropertyName("IncomingPacketsWithUnknownProtocol")]
    public double? IncomingPacketsWithUnknownProtocol { get; init; }

    [JsonPropertyName("OutgoingPacketsDiscarded")]
    public double? OutgoingPacketsDiscarded { get; init; }

    [JsonPropertyName("OutgoingPacketsWithErrors")]
    public double? OutgoingPacketsWithErrors { get; init; }

    [JsonPropertyName("IpAddresses")]
    public IReadOnlyList<string>? IpAddresses { get; init; }

    [JsonPropertyName("MacAddresses")]
    public IReadOnlyList<string>? MacAddresses { get; init; }

    [JsonPropertyName("Gateways")]
    public IReadOnlyList<string>? Gateways { get; init; }

    [JsonPropertyName("DhcpEnabled")]
    public bool? DhcpEnabled { get; init; }

    [JsonPropertyName("DhcpAddresses")]
    public IReadOnlyList<string>? DhcpAddresses { get; init; }

    [JsonPropertyName("DnsEnabled")]
    public bool? DnsEnabled { get; init; }

    [JsonPropertyName("DnsSuffix")]
    public string? DnsSuffix { get; init; }

    [JsonPropertyName("DnsAddresses")]
    public IReadOnlyList<string>? DnsAddresses { get; init; }

    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("album_com.itunestoppodcastplayer.app")]
    public string? AlbumCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("artist_com.itunestoppodcastplayer.app")]
    public string? ArtistCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("duration_com.itunestoppodcastplayer.app")]
    public object? DurationCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("media_id_com.itunestoppodcastplayer.app")]
    public string? MediaIdCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("playback_position_com.itunestoppodcastplayer.app")]
    public object? PlaybackPositionCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("playback_state_com.itunestoppodcastplayer.app")]
    public string? PlaybackStateCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("title_com.itunestoppodcastplayer.app")]
    public string? TitleCom_itunestoppodcastplayer_app { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("SN")]
    public string? SN { get; init; }

    [JsonPropertyName("data_last_update")]
    public string? DataLastUpdate { get; init; }

    [JsonPropertyName("status_request_count")]
    public double? StatusRequestCount { get; init; }

    [JsonPropertyName("status_last_update")]
    public string? StatusLastUpdate { get; init; }

    [JsonPropertyName("reconnects")]
    public double? Reconnects { get; init; }

    [JsonPropertyName("status_phase")]
    public double? StatusPhase { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("Model")]
    public string? Model { get; init; }

    [JsonPropertyName("Serial #")]
    public string? Serial { get; init; }

    [JsonPropertyName("Uptime")]
    public string? Uptime { get; init; }

    [JsonPropertyName("IP Address")]
    public string? IPAddress { get; init; }

    [JsonPropertyName("Mask")]
    public string? Mask { get; init; }

    [JsonPropertyName("MAC Address")]
    public string? MACAddress { get; init; }

    [JsonPropertyName("Max Speed")]
    public double? MaxSpeed { get; init; }

    [JsonPropertyName("Packets (Err)")]
    public double? PacketsErr { get; init; }

    [JsonPropertyName("source_entity")]
    public string? SourceEntity { get; init; }

    [JsonPropertyName("source_domain")]
    public string? SourceDomain { get; init; }

    [JsonPropertyName("album_com.android.chrome")]
    public string? AlbumCom_android_chrome { get; init; }

    [JsonPropertyName("artist_com.android.chrome")]
    public string? ArtistCom_android_chrome { get; init; }

    [JsonPropertyName("duration_com.android.chrome")]
    public double? DurationCom_android_chrome { get; init; }

    [JsonPropertyName("media_id_com.android.chrome")]
    public string? MediaIdCom_android_chrome { get; init; }

    [JsonPropertyName("playback_position_com.android.chrome")]
    public double? PlaybackPositionCom_android_chrome { get; init; }

    [JsonPropertyName("playback_state_com.android.chrome")]
    public string? PlaybackStateCom_android_chrome { get; init; }

    [JsonPropertyName("title_com.android.chrome")]
    public string? TitleCom_android_chrome { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("last_period")]
    public string? LastPeriod { get; init; }

    [JsonPropertyName("last_valid_state")]
    public string? LastValidState { get; init; }

    [JsonPropertyName("meter_period")]
    public string? MeterPeriod { get; init; }

    [JsonPropertyName("cron pattern")]
    public string? Cronpattern { get; init; }

    [JsonPropertyName("last_reset")]
    public string? LastReset { get; init; }
}

public partial record NumericSensorEntity : NumericEntity<NumericSensorEntity, NumericEntityState<NumericSensorAttributes>, NumericSensorAttributes>, ISensorEntityCore
{
    public NumericSensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumericSensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumericSensorAttributes
{
    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("last_period")]
    public string? LastPeriod { get; init; }

    [JsonPropertyName("meter_period")]
    public string? MeterPeriod { get; init; }

    [JsonPropertyName("cron pattern")]
    public string? Cronpattern { get; init; }

    [JsonPropertyName("last_reset")]
    public string? LastReset { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("average")]
    public double? Average { get; init; }

    [JsonPropertyName("off_peak_1")]
    public double? OffPeak1 { get; init; }

    [JsonPropertyName("off_peak_2")]
    public double? OffPeak2 { get; init; }

    [JsonPropertyName("peak")]
    public double? Peak { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("mean")]
    public double? Mean { get; init; }

    [JsonPropertyName("unit")]
    public string? Unit { get; init; }

    [JsonPropertyName("currency")]
    public string? Currency { get; init; }

    [JsonPropertyName("country")]
    public string? Country { get; init; }

    [JsonPropertyName("region")]
    public string? Region { get; init; }

    [JsonPropertyName("low_price")]
    public bool? LowPrice { get; init; }

    [JsonPropertyName("price_percent_to_average")]
    public double? PricePercentToAverage { get; init; }

    [JsonPropertyName("today")]
    public IReadOnlyList<double>? Today { get; init; }

    [JsonPropertyName("tomorrow")]
    public object? Tomorrow { get; init; }

    [JsonPropertyName("tomorrow_valid")]
    public bool? TomorrowValid { get; init; }

    [JsonPropertyName("raw_today")]
    public IReadOnlyList<object>? RawToday { get; init; }

    [JsonPropertyName("raw_tomorrow")]
    public IReadOnlyList<object>? RawTomorrow { get; init; }

    [JsonPropertyName("current_price")]
    public double? CurrentPrice { get; init; }

    [JsonPropertyName("additional_costs_current_hour")]
    public double? AdditionalCostsCurrentHour { get; init; }

    [JsonPropertyName("repositories")]
    public IReadOnlyList<object>? Repositories { get; init; }

    [JsonPropertyName("price_in_cents")]
    public bool? PriceInCents { get; init; }

    [JsonPropertyName("last_valid_state")]
    public string? LastValidState { get; init; }

    [JsonPropertyName("raw_state")]
    public double? RawState { get; init; }

    [JsonPropertyName("Design Capacity (mAh)")]
    public double? DesignCapacitymAh { get; init; }

    [JsonPropertyName("Full Capacity (mAh)")]
    public double? FullCapacitymAh { get; init; }

    [JsonPropertyName("Remain Capacity (mAh)")]
    public double? RemainCapacitymAh { get; init; }

    [JsonPropertyName("name")]
    public string? Name { get; init; }

    [JsonPropertyName("Model")]
    public string? Model { get; init; }

    [JsonPropertyName("Serial #")]
    public string? Serial { get; init; }

    [JsonPropertyName("Uptime")]
    public string? Uptime { get; init; }

    [JsonPropertyName("Memory Size")]
    public string? MemorySize { get; init; }

    [JsonPropertyName("Volume Size")]
    public string? VolumeSize { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record SwitchEntity : Entity<SwitchEntity, EntityState<SwitchAttributes>, SwitchAttributes>, ISwitchEntityCore
{
    public SwitchEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SwitchEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SwitchAttributes
{
    [JsonPropertyName("weekdays")]
    public IReadOnlyList<string>? Weekdays { get; init; }

    [JsonPropertyName("timeslots")]
    public IReadOnlyList<string>? Timeslots { get; init; }

    [JsonPropertyName("entities")]
    public IReadOnlyList<string>? Entities { get; init; }

    [JsonPropertyName("actions")]
    public IReadOnlyList<object>? Actions { get; init; }

    [JsonPropertyName("current_slot")]
    public double? CurrentSlot { get; init; }

    [JsonPropertyName("next_slot")]
    public double? NextSlot { get; init; }

    [JsonPropertyName("next_trigger")]
    public string? NextTrigger { get; init; }

    [JsonPropertyName("tags")]
    public IReadOnlyList<object>? Tags { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("raw_state")]
    public bool? RawState { get; init; }

    [JsonPropertyName("internal_ip")]
    public string? InternalIp { get; init; }

    [JsonPropertyName("internal_port")]
    public double? InternalPort { get; init; }

    [JsonPropertyName("external_port")]
    public double? ExternalPort { get; init; }

    [JsonPropertyName("protocol")]
    public string? Protocol { get; init; }

    [JsonPropertyName("description")]
    public string? Description { get; init; }

    [JsonPropertyName("standard")]
    public string? Standard { get; init; }

    [JsonPropertyName("bssid")]
    public string? Bssid { get; init; }

    [JsonPropertyName("mac_address_control")]
    public bool? MacAddressControl { get; init; }
}

public partial record UpdateEntity : Entity<UpdateEntity, EntityState<UpdateAttributes>, UpdateAttributes>, IUpdateEntityCore
{
    public UpdateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public UpdateEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record UpdateAttributes
{
    [JsonPropertyName("auto_update")]
    public bool? AutoUpdate { get; init; }

    [JsonPropertyName("installed_version")]
    public string? InstalledVersion { get; init; }

    [JsonPropertyName("in_progress")]
    public object? InProgress { get; init; }

    [JsonPropertyName("latest_version")]
    public string? LatestVersion { get; init; }

    [JsonPropertyName("release_summary")]
    public string? ReleaseSummary { get; init; }

    [JsonPropertyName("release_url")]
    public string? ReleaseUrl { get; init; }

    [JsonPropertyName("skipped_version")]
    public object? SkippedVersion { get; init; }

    [JsonPropertyName("title")]
    public string? Title { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }
}

public partial record WeatherEntity : Entity<WeatherEntity, EntityState<WeatherAttributes>, WeatherAttributes>, IWeatherEntityCore
{
    public WeatherEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public WeatherEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record WeatherAttributes
{
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("temperature_unit")]
    public string? TemperatureUnit { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pressure")]
    public double? Pressure { get; init; }

    [JsonPropertyName("pressure_unit")]
    public string? PressureUnit { get; init; }

    [JsonPropertyName("wind_bearing")]
    public double? WindBearing { get; init; }

    [JsonPropertyName("wind_speed")]
    public double? WindSpeed { get; init; }

    [JsonPropertyName("wind_speed_unit")]
    public string? WindSpeedUnit { get; init; }

    [JsonPropertyName("visibility_unit")]
    public string? VisibilityUnit { get; init; }

    [JsonPropertyName("precipitation_unit")]
    public string? PrecipitationUnit { get; init; }

    [JsonPropertyName("forecast")]
    public IReadOnlyList<object>? Forecast { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("cloud_coverage")]
    public double? CloudCoverage { get; init; }

    [JsonPropertyName("wind_gust_speed")]
    public double? WindGustSpeed { get; init; }

    [JsonPropertyName("dew_point")]
    public double? DewPoint { get; init; }
}

public partial record ZoneEntity : Entity<ZoneEntity, EntityState<ZoneAttributes>, ZoneAttributes>, IZoneEntityCore
{
    public ZoneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ZoneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ZoneAttributes
{
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("radius")]
    public double? Radius { get; init; }

    [JsonPropertyName("passive")]
    public bool? Passive { get; init; }

    [JsonPropertyName("persons")]
    public IReadOnlyList<string>? Persons { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SunEntity : Entity<SunEntity, EntityState<SunAttributes>, SunAttributes>, ISunEntityCore
{
    public SunEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SunEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SunAttributes
{
    [JsonPropertyName("next_dawn")]
    public string? NextDawn { get; init; }

    [JsonPropertyName("next_dusk")]
    public string? NextDusk { get; init; }

    [JsonPropertyName("next_midnight")]
    public string? NextMidnight { get; init; }

    [JsonPropertyName("next_noon")]
    public string? NextNoon { get; init; }

    [JsonPropertyName("next_rising")]
    public string? NextRising { get; init; }

    [JsonPropertyName("next_setting")]
    public string? NextSetting { get; init; }

    [JsonPropertyName("elevation")]
    public double? Elevation { get; init; }

    [JsonPropertyName("azimuth")]
    public double? Azimuth { get; init; }

    [JsonPropertyName("rising")]
    public bool? Rising { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record RemoteEntity : Entity<RemoteEntity, EntityState<RemoteAttributes>, RemoteAttributes>, IRemoteEntityCore
{
    public RemoteEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public RemoteEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record RemoteAttributes
{
    [JsonPropertyName("activity_list")]
    public object? ActivityList { get; init; }

    [JsonPropertyName("current_activity")]
    public string? CurrentActivity { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record SttEntity : Entity<SttEntity, EntityState<SttAttributes>, SttAttributes>
{
    public SttEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SttEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SttAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record TtsEntity : Entity<TtsEntity, EntityState<TtsAttributes>, TtsAttributes>
{
    public TtsEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TtsEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TtsAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ImageEntity : Entity<ImageEntity, EntityState<ImageAttributes>, ImageAttributes>
{
    public ImageEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ImageEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ImageAttributes
{
    [JsonPropertyName("access_token")]
    public string? AccessToken { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record CounterEntity : Entity<CounterEntity, EntityState<CounterAttributes>, CounterAttributes>
{
    public CounterEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CounterEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CounterAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("initial")]
    public double? Initial { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record WakeWordEntity : Entity<WakeWordEntity, EntityState<WakeWordAttributes>, WakeWordAttributes>
{
    public WakeWordEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public WakeWordEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record WakeWordAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public interface IServices
{
    AdguardServices Adguard { get; }

    AlarmControlPanelServices AlarmControlPanel { get; }

    AutomationServices Automation { get; }

    ButtonServices Button { get; }

    CameraServices Camera { get; }

    CastServices Cast { get; }

    ClimateServices Climate { get; }

    CloudServices Cloud { get; }

    ConversationServices Conversation { get; }

    CounterServices Counter { get; }

    CoverServices Cover { get; }

    DeviceTrackerServices DeviceTracker { get; }

    FanServices Fan { get; }

    FfmpegServices Ffmpeg { get; }

    FritzServices Fritz { get; }

    FrontendServices Frontend { get; }

    GoogleAssistantServices GoogleAssistant { get; }

    GoogleAssistantSdkServices GoogleAssistantSdk { get; }

    GroupServices Group { get; }

    HassioServices Hassio { get; }

    HistoryStatsServices HistoryStats { get; }

    HomeassistantServices Homeassistant { get; }

    HumidifierServices Humidifier { get; }

    InputBooleanServices InputBoolean { get; }

    InputButtonServices InputButton { get; }

    InputDatetimeServices InputDatetime { get; }

    InputNumberServices InputNumber { get; }

    InputSelectServices InputSelect { get; }

    InputTextServices InputText { get; }

    LawnMowerServices LawnMower { get; }

    LightServices Light { get; }

    LocaltuyaServices Localtuya { get; }

    LockServices Lock { get; }

    LogbookServices Logbook { get; }

    LoggerServices Logger { get; }

    MediaPlayerServices MediaPlayer { get; }

    MqttServices Mqtt { get; }

    NotifyServices Notify { get; }

    NumberServices Number { get; }

    PersistentNotificationServices PersistentNotification { get; }

    PersonServices Person { get; }

    PowercalcServices Powercalc { get; }

    RecorderServices Recorder { get; }

    RemoteServices Remote { get; }

    SceneServices Scene { get; }

    ScheduleServices Schedule { get; }

    SchedulerServices Scheduler { get; }

    ScriptServices Script { get; }

    SelectServices Select { get; }

    ShellCommandServices ShellCommand { get; }

    SirenServices Siren { get; }

    SwitchServices Switch { get; }

    SystemLogServices SystemLog { get; }

    TemplateServices Template { get; }

    TextServices Text { get; }

    TimerServices Timer { get; }

    TtsServices Tts { get; }

    UpdateServices Update { get; }

    UtilityMeterServices UtilityMeter { get; }

    VacuumServices Vacuum { get; }

    ValveServices Valve { get; }

    WakeOnLanServices WakeOnLan { get; }

    WaterHeaterServices WaterHeater { get; }

    WeatherServices Weather { get; }

    ZoneServices Zone { get; }
}

public partial class Services : IServices
{
    private readonly IHaContext _haContext;
    public Services(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public AdguardServices Adguard => new(_haContext);
    public AlarmControlPanelServices AlarmControlPanel => new(_haContext);
    public AutomationServices Automation => new(_haContext);
    public ButtonServices Button => new(_haContext);
    public CameraServices Camera => new(_haContext);
    public CastServices Cast => new(_haContext);
    public ClimateServices Climate => new(_haContext);
    public CloudServices Cloud => new(_haContext);
    public ConversationServices Conversation => new(_haContext);
    public CounterServices Counter => new(_haContext);
    public CoverServices Cover => new(_haContext);
    public DeviceTrackerServices DeviceTracker => new(_haContext);
    public FanServices Fan => new(_haContext);
    public FfmpegServices Ffmpeg => new(_haContext);
    public FritzServices Fritz => new(_haContext);
    public FrontendServices Frontend => new(_haContext);
    public GoogleAssistantServices GoogleAssistant => new(_haContext);
    public GoogleAssistantSdkServices GoogleAssistantSdk => new(_haContext);
    public GroupServices Group => new(_haContext);
    public HassioServices Hassio => new(_haContext);
    public HistoryStatsServices HistoryStats => new(_haContext);
    public HomeassistantServices Homeassistant => new(_haContext);
    public HumidifierServices Humidifier => new(_haContext);
    public InputBooleanServices InputBoolean => new(_haContext);
    public InputButtonServices InputButton => new(_haContext);
    public InputDatetimeServices InputDatetime => new(_haContext);
    public InputNumberServices InputNumber => new(_haContext);
    public InputSelectServices InputSelect => new(_haContext);
    public InputTextServices InputText => new(_haContext);
    public LawnMowerServices LawnMower => new(_haContext);
    public LightServices Light => new(_haContext);
    public LocaltuyaServices Localtuya => new(_haContext);
    public LockServices Lock => new(_haContext);
    public LogbookServices Logbook => new(_haContext);
    public LoggerServices Logger => new(_haContext);
    public MediaPlayerServices MediaPlayer => new(_haContext);
    public MqttServices Mqtt => new(_haContext);
    public NotifyServices Notify => new(_haContext);
    public NumberServices Number => new(_haContext);
    public PersistentNotificationServices PersistentNotification => new(_haContext);
    public PersonServices Person => new(_haContext);
    public PowercalcServices Powercalc => new(_haContext);
    public RecorderServices Recorder => new(_haContext);
    public RemoteServices Remote => new(_haContext);
    public SceneServices Scene => new(_haContext);
    public ScheduleServices Schedule => new(_haContext);
    public SchedulerServices Scheduler => new(_haContext);
    public ScriptServices Script => new(_haContext);
    public SelectServices Select => new(_haContext);
    public ShellCommandServices ShellCommand => new(_haContext);
    public SirenServices Siren => new(_haContext);
    public SwitchServices Switch => new(_haContext);
    public SystemLogServices SystemLog => new(_haContext);
    public TemplateServices Template => new(_haContext);
    public TextServices Text => new(_haContext);
    public TimerServices Timer => new(_haContext);
    public TtsServices Tts => new(_haContext);
    public UpdateServices Update => new(_haContext);
    public UtilityMeterServices UtilityMeter => new(_haContext);
    public VacuumServices Vacuum => new(_haContext);
    public ValveServices Valve => new(_haContext);
    public WakeOnLanServices WakeOnLan => new(_haContext);
    public WaterHeaterServices WaterHeater => new(_haContext);
    public WeatherServices Weather => new(_haContext);
    public ZoneServices Zone => new(_haContext);
}

public partial class AdguardServices
{
    private readonly IHaContext _haContext;
    public AdguardServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Add a new filter subscription to AdGuard Home.</summary>
    public void AddUrl(AdguardAddUrlParameters data)
    {
        _haContext.CallService("adguard", "add_url", null, data);
    }

    ///<summary>Add a new filter subscription to AdGuard Home.</summary>
    ///<param name="name">The name of the filter subscription. eg: Example</param>
    ///<param name="url">The filter URL to subscribe to, containing the filter rules. eg: https://www.example.com/filter/1.txt</param>
    public void AddUrl(string name, string url)
    {
        _haContext.CallService("adguard", "add_url", null, new AdguardAddUrlParameters { Name = name, Url = url });
    }

    ///<summary>Disables a filter subscription in AdGuard Home.</summary>
    public void DisableUrl(AdguardDisableUrlParameters data)
    {
        _haContext.CallService("adguard", "disable_url", null, data);
    }

    ///<summary>Disables a filter subscription in AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to disable. eg: https://www.example.com/filter/1.txt</param>
    public void DisableUrl(string url)
    {
        _haContext.CallService("adguard", "disable_url", null, new AdguardDisableUrlParameters { Url = url });
    }

    ///<summary>Enables a filter subscription in AdGuard Home.</summary>
    public void EnableUrl(AdguardEnableUrlParameters data)
    {
        _haContext.CallService("adguard", "enable_url", null, data);
    }

    ///<summary>Enables a filter subscription in AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to enable. eg: https://www.example.com/filter/1.txt</param>
    public void EnableUrl(string url)
    {
        _haContext.CallService("adguard", "enable_url", null, new AdguardEnableUrlParameters { Url = url });
    }

    ///<summary>Refresh all filter subscriptions in AdGuard Home.</summary>
    public void Refresh(AdguardRefreshParameters data)
    {
        _haContext.CallService("adguard", "refresh", null, data);
    }

    ///<summary>Refresh all filter subscriptions in AdGuard Home.</summary>
    ///<param name="force">Force update (bypasses AdGuard Home throttling). &quot;true&quot; to force, or &quot;false&quot; to omit for a regular refresh.</param>
    public void Refresh(bool? force = null)
    {
        _haContext.CallService("adguard", "refresh", null, new AdguardRefreshParameters { Force = force });
    }

    ///<summary>Removes a filter subscription from AdGuard Home.</summary>
    public void RemoveUrl(AdguardRemoveUrlParameters data)
    {
        _haContext.CallService("adguard", "remove_url", null, data);
    }

    ///<summary>Removes a filter subscription from AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to remove. eg: https://www.example.com/filter/1.txt</param>
    public void RemoveUrl(string url)
    {
        _haContext.CallService("adguard", "remove_url", null, new AdguardRemoveUrlParameters { Url = url });
    }
}

public partial record AdguardAddUrlParameters
{
    ///<summary>The name of the filter subscription. eg: Example</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>The filter URL to subscribe to, containing the filter rules. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardDisableUrlParameters
{
    ///<summary>The filter subscription URL to disable. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardEnableUrlParameters
{
    ///<summary>The filter subscription URL to enable. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardRefreshParameters
{
    ///<summary>Force update (bypasses AdGuard Home throttling). &quot;true&quot; to force, or &quot;false&quot; to omit for a regular refresh.</summary>
    [JsonPropertyName("force")]
    public bool? Force { get; init; }
}

public partial record AdguardRemoveUrlParameters
{
    ///<summary>The filter subscription URL to remove. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial class AlarmControlPanelServices
{
    private readonly IHaContext _haContext;
    public AlarmControlPanelServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmAway(ServiceTarget target, AlarmControlPanelAlarmArmAwayParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, data);
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmAway(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, new AlarmControlPanelAlarmArmAwayParameters { Code = code });
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmCustomBypass(ServiceTarget target, AlarmControlPanelAlarmArmCustomBypassParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, data);
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmCustomBypass(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, new AlarmControlPanelAlarmArmCustomBypassParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmHome(ServiceTarget target, AlarmControlPanelAlarmArmHomeParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, data);
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmHome(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, new AlarmControlPanelAlarmArmHomeParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmNight(ServiceTarget target, AlarmControlPanelAlarmArmNightParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, data);
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmNight(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, new AlarmControlPanelAlarmArmNightParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmVacation(ServiceTarget target, AlarmControlPanelAlarmArmVacationParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, data);
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmVacation(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, new AlarmControlPanelAlarmArmVacationParameters { Code = code });
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmDisarm(ServiceTarget target, AlarmControlPanelAlarmDisarmParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, data);
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to disarm the alarm. eg: 1234</param>
    public void AlarmDisarm(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, new AlarmControlPanelAlarmDisarmParameters { Code = code });
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmTrigger(ServiceTarget target, AlarmControlPanelAlarmTriggerParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, data);
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmTrigger(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, new AlarmControlPanelAlarmTriggerParameters { Code = code });
    }
}

public partial record AlarmControlPanelAlarmArmAwayParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmCustomBypassParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmHomeParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmNightParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmVacationParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmDisarmParameters
{
    ///<summary>Code to disarm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmTriggerParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class AutomationServices
{
    private readonly IHaContext _haContext;
    public AutomationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads the automation configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("automation", "reload", null);
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("automation", "toggle", target);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Trigger(ServiceTarget target, AutomationTriggerParameters data)
    {
        _haContext.CallService("automation", "trigger", target, data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public void Trigger(ServiceTarget target, bool? skipCondition = null)
    {
        _haContext.CallService("automation", "trigger", target, new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, AutomationTurnOffParameters data)
    {
        _haContext.CallService("automation", "turn_off", target, data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public void TurnOff(ServiceTarget target, bool? stopActions = null)
    {
        _haContext.CallService("automation", "turn_off", target, new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("automation", "turn_on", target);
    }
}

public partial record AutomationTriggerParameters
{
    ///<summary>Defines whether or not the conditions will be skipped.</summary>
    [JsonPropertyName("skip_condition")]
    public bool? SkipCondition { get; init; }
}

public partial record AutomationTurnOffParameters
{
    ///<summary>Stops currently running actions.</summary>
    [JsonPropertyName("stop_actions")]
    public bool? StopActions { get; init; }
}

public partial class ButtonServices
{
    private readonly IHaContext _haContext;
    public ButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Press the button entity.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target)
    {
        _haContext.CallService("button", "press", target);
    }
}

public partial class CameraServices
{
    private readonly IHaContext _haContext;
    public CameraServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Disables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void DisableMotionDetection(ServiceTarget target)
    {
        _haContext.CallService("camera", "disable_motion_detection", target);
    }

    ///<summary>Enables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void EnableMotionDetection(ServiceTarget target)
    {
        _haContext.CallService("camera", "enable_motion_detection", target);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayStream(ServiceTarget target, CameraPlayStreamParameters data)
    {
        _haContext.CallService("camera", "play_stream", target, data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public void PlayStream(ServiceTarget target, string mediaPlayer, object? format = null)
    {
        _haContext.CallService("camera", "play_stream", target, new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Record(ServiceTarget target, CameraRecordParameters data)
    {
        _haContext.CallService("camera", "record", target, data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public void Record(ServiceTarget target, string filename, long? duration = null, long? lookback = null)
    {
        _haContext.CallService("camera", "record", target, new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void Snapshot(ServiceTarget target, CameraSnapshotParameters data)
    {
        _haContext.CallService("camera", "snapshot", target, data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public void Snapshot(ServiceTarget target, string filename)
    {
        _haContext.CallService("camera", "snapshot", target, new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Turns off the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("camera", "turn_off", target);
    }

    ///<summary>Turns on the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("camera", "turn_on", target);
    }
}

public partial record CameraPlayStreamParameters
{
    ///<summary>Media players to stream to.</summary>
    [JsonPropertyName("media_player")]
    public string? MediaPlayer { get; init; }

    ///<summary>Stream format supported by the media player.</summary>
    [JsonPropertyName("format")]
    public object? Format { get; init; }
}

public partial record CameraRecordParameters
{
    ///<summary>Template of a filename. Variable available is `entity_id`. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }

    ///<summary>Planned duration of the recording. The actual duration may vary.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }

    ///<summary>Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</summary>
    [JsonPropertyName("lookback")]
    public long? Lookback { get; init; }
}

public partial record CameraSnapshotParameters
{
    ///<summary>Template of a filename. Variable available is `entity_id`. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }
}

public partial class CastServices
{
    private readonly IHaContext _haContext;
    public CastServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Shows a dashboard view on a Chromecast device.</summary>
    public void ShowLovelaceView(CastShowLovelaceViewParameters data)
    {
        _haContext.CallService("cast", "show_lovelace_view", null, data);
    }

    ///<summary>Shows a dashboard view on a Chromecast device.</summary>
    ///<param name="entityId">Media player entity to show the dashboard view on.</param>
    ///<param name="dashboardPath">The URL path of the dashboard to show. eg: lovelace-cast</param>
    ///<param name="viewPath">The path of the dashboard view to show. eg: downstairs</param>
    public void ShowLovelaceView(string entityId, string dashboardPath, string? viewPath = null)
    {
        _haContext.CallService("cast", "show_lovelace_view", null, new CastShowLovelaceViewParameters { EntityId = entityId, DashboardPath = dashboardPath, ViewPath = viewPath });
    }
}

public partial record CastShowLovelaceViewParameters
{
    ///<summary>Media player entity to show the dashboard view on.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>The URL path of the dashboard to show. eg: lovelace-cast</summary>
    [JsonPropertyName("dashboard_path")]
    public string? DashboardPath { get; init; }

    ///<summary>The path of the dashboard view to show. eg: downstairs</summary>
    [JsonPropertyName("view_path")]
    public string? ViewPath { get; init; }
}

public partial class ClimateServices
{
    private readonly IHaContext _haContext;
    public ClimateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAuxHeat(ServiceTarget target, ClimateSetAuxHeatParameters data)
    {
        _haContext.CallService("climate", "set_aux_heat", target, data);
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="auxHeat">New value of auxiliary heater.</param>
    public void SetAuxHeat(ServiceTarget target, bool auxHeat)
    {
        _haContext.CallService("climate", "set_aux_heat", target, new ClimateSetAuxHeatParameters { AuxHeat = auxHeat });
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanMode(ServiceTarget target, ClimateSetFanModeParameters data)
    {
        _haContext.CallService("climate", "set_fan_mode", target, data);
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="fanMode">Fan operation mode. eg: low</param>
    public void SetFanMode(ServiceTarget target, string fanMode)
    {
        _haContext.CallService("climate", "set_fan_mode", target, new ClimateSetFanModeParameters { FanMode = fanMode });
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHumidity(ServiceTarget target, ClimateSetHumidityParameters data)
    {
        _haContext.CallService("climate", "set_humidity", target, data);
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="humidity">Target humidity.</param>
    public void SetHumidity(ServiceTarget target, long humidity)
    {
        _haContext.CallService("climate", "set_humidity", target, new ClimateSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHvacMode(ServiceTarget target, ClimateSetHvacModeParameters data)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, data);
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetHvacMode(ServiceTarget target, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, new ClimateSetHvacModeParameters { HvacMode = hvacMode });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, ClimateSetPresetModeParameters data)
    {
        _haContext.CallService("climate", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="presetMode">Preset mode. eg: away</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("climate", "set_preset_mode", target, new ClimateSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetSwingMode(ServiceTarget target, ClimateSetSwingModeParameters data)
    {
        _haContext.CallService("climate", "set_swing_mode", target, data);
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="swingMode">Swing operation mode. eg: horizontal</param>
    public void SetSwingMode(ServiceTarget target, string swingMode)
    {
        _haContext.CallService("climate", "set_swing_mode", target, new ClimateSetSwingModeParameters { SwingMode = swingMode });
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetTemperature(ServiceTarget target, ClimateSetTemperatureParameters data)
    {
        _haContext.CallService("climate", "set_temperature", target, data);
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="temperature">Target temperature.</param>
    ///<param name="targetTempHigh">High target temperature.</param>
    ///<param name="targetTempLow">Low target temperature.</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetTemperature(ServiceTarget target, double? temperature = null, double? targetTempHigh = null, double? targetTempLow = null, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_temperature", target, new ClimateSetTemperatureParameters { Temperature = temperature, TargetTempHigh = targetTempHigh, TargetTempLow = targetTempLow, HvacMode = hvacMode });
    }

    ///<summary>Turns climate device off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("climate", "turn_off", target);
    }

    ///<summary>Turns climate device on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("climate", "turn_on", target);
    }
}

public partial record ClimateSetAuxHeatParameters
{
    ///<summary>New value of auxiliary heater.</summary>
    [JsonPropertyName("aux_heat")]
    public bool? AuxHeat { get; init; }
}

public partial record ClimateSetFanModeParameters
{
    ///<summary>Fan operation mode. eg: low</summary>
    [JsonPropertyName("fan_mode")]
    public string? FanMode { get; init; }
}

public partial record ClimateSetHumidityParameters
{
    ///<summary>Target humidity.</summary>
    [JsonPropertyName("humidity")]
    public long? Humidity { get; init; }
}

public partial record ClimateSetHvacModeParameters
{
    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial record ClimateSetPresetModeParameters
{
    ///<summary>Preset mode. eg: away</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record ClimateSetSwingModeParameters
{
    ///<summary>Swing operation mode. eg: horizontal</summary>
    [JsonPropertyName("swing_mode")]
    public string? SwingMode { get; init; }
}

public partial record ClimateSetTemperatureParameters
{
    ///<summary>Target temperature.</summary>
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    ///<summary>High target temperature.</summary>
    [JsonPropertyName("target_temp_high")]
    public double? TargetTempHigh { get; init; }

    ///<summary>Low target temperature.</summary>
    [JsonPropertyName("target_temp_low")]
    public double? TargetTempLow { get; init; }

    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial class CloudServices
{
    private readonly IHaContext _haContext;
    public CloudServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Makes the instance UI accessible from outside of the local network by using Home Assistant Cloud.</summary>
    public void RemoteConnect()
    {
        _haContext.CallService("cloud", "remote_connect", null);
    }

    ///<summary>Disconnects the Home Assistant UI from the Home Assistant Cloud. You will no longer be able to access your Home Assistant instance from outside your local network.</summary>
    public void RemoteDisconnect()
    {
        _haContext.CallService("cloud", "remote_disconnect", null);
    }
}

public partial class ConversationServices
{
    private readonly IHaContext _haContext;
    public ConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    public void Process(ConversationProcessParameters data)
    {
        _haContext.CallService("conversation", "process", null, data);
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    ///<param name="text">Transcribed text input. eg: Turn all lights on</param>
    ///<param name="language">Language of text. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</param>
    public void Process(string text, string? language = null, object? agentId = null)
    {
        _haContext.CallService("conversation", "process", null, new ConversationProcessParameters { Text = text, Language = language, AgentId = agentId });
    }

    ///<summary>Reloads the intent configuration.</summary>
    public void Reload(ConversationReloadParameters data)
    {
        _haContext.CallService("conversation", "reload", null, data);
    }

    ///<summary>Reloads the intent configuration.</summary>
    ///<param name="language">Language to clear cached intents for. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to reload. eg: homeassistant</param>
    public void Reload(string? language = null, object? agentId = null)
    {
        _haContext.CallService("conversation", "reload", null, new ConversationReloadParameters { Language = language, AgentId = agentId });
    }
}

public partial record ConversationProcessParameters
{
    ///<summary>Transcribed text input. eg: Turn all lights on</summary>
    [JsonPropertyName("text")]
    public string? Text { get; init; }

    ///<summary>Language of text. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }
}

public partial record ConversationReloadParameters
{
    ///<summary>Language to clear cached intents for. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to reload. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }
}

public partial class CounterServices
{
    private readonly IHaContext _haContext;
    public CounterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrements a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target)
    {
        _haContext.CallService("counter", "decrement", target);
    }

    ///<summary>Increments a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target)
    {
        _haContext.CallService("counter", "increment", target);
    }

    ///<summary>Resets a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Reset(ServiceTarget target)
    {
        _haContext.CallService("counter", "reset", target);
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, CounterSetValueParameters data)
    {
        _haContext.CallService("counter", "set_value", target, data);
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public void SetValue(ServiceTarget target, long value)
    {
        _haContext.CallService("counter", "set_value", target, new CounterSetValueParameters { Value = value });
    }
}

public partial record CounterSetValueParameters
{
    ///<summary>The new counter value the entity should be set to.</summary>
    [JsonPropertyName("value")]
    public long? Value { get; init; }
}

public partial class CoverServices
{
    private readonly IHaContext _haContext;
    public CoverServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCover(ServiceTarget target)
    {
        _haContext.CallService("cover", "close_cover", target);
    }

    ///<summary>Tilts a cover to close.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCoverTilt(ServiceTarget target)
    {
        _haContext.CallService("cover", "close_cover_tilt", target);
    }

    ///<summary>Opens a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCover(ServiceTarget target)
    {
        _haContext.CallService("cover", "open_cover", target);
    }

    ///<summary>Tilts a cover open.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCoverTilt(ServiceTarget target)
    {
        _haContext.CallService("cover", "open_cover_tilt", target);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverPosition(ServiceTarget target, CoverSetCoverPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_position", target, data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="position">Target position.</param>
    public void SetCoverPosition(ServiceTarget target, long position)
    {
        _haContext.CallService("cover", "set_cover_position", target, new CoverSetCoverPositionParameters { Position = position });
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverTiltPosition(ServiceTarget target, CoverSetCoverTiltPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, data);
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="tiltPosition">Target tilt positition.</param>
    public void SetCoverTiltPosition(ServiceTarget target, long tiltPosition)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, new CoverSetCoverTiltPositionParameters { TiltPosition = tiltPosition });
    }

    ///<summary>Stops the cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCover(ServiceTarget target)
    {
        _haContext.CallService("cover", "stop_cover", target);
    }

    ///<summary>Stops a tilting cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCoverTilt(ServiceTarget target)
    {
        _haContext.CallService("cover", "stop_cover_tilt", target);
    }

    ///<summary>Toggles a cover open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("cover", "toggle", target);
    }

    ///<summary>Toggles a cover tilt open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void ToggleCoverTilt(ServiceTarget target)
    {
        _haContext.CallService("cover", "toggle_cover_tilt", target);
    }
}

public partial record CoverSetCoverPositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public long? Position { get; init; }
}

public partial record CoverSetCoverTiltPositionParameters
{
    ///<summary>Target tilt positition.</summary>
    [JsonPropertyName("tilt_position")]
    public long? TiltPosition { get; init; }
}

public partial class DeviceTrackerServices
{
    private readonly IHaContext _haContext;
    public DeviceTrackerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Records a seen tracked device.</summary>
    public void See(DeviceTrackerSeeParameters data)
    {
        _haContext.CallService("device_tracker", "see", null, data);
    }

    ///<summary>Records a seen tracked device.</summary>
    ///<param name="mac">MAC address of the device. eg: FF:FF:FF:FF:FF:FF</param>
    ///<param name="devId">ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</param>
    ///<param name="hostName">Hostname of the device. eg: Dave</param>
    ///<param name="locationName">Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</param>
    ///<param name="gps">GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</param>
    ///<param name="gpsAccuracy">Accuracy of the GPS coordinates.</param>
    ///<param name="battery">Battery level of the device.</param>
    public void See(string? mac = null, string? devId = null, string? hostName = null, string? locationName = null, object? gps = null, long? gpsAccuracy = null, long? battery = null)
    {
        _haContext.CallService("device_tracker", "see", null, new DeviceTrackerSeeParameters { Mac = mac, DevId = devId, HostName = hostName, LocationName = locationName, Gps = gps, GpsAccuracy = gpsAccuracy, Battery = battery });
    }
}

public partial record DeviceTrackerSeeParameters
{
    ///<summary>MAC address of the device. eg: FF:FF:FF:FF:FF:FF</summary>
    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    ///<summary>ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</summary>
    [JsonPropertyName("dev_id")]
    public string? DevId { get; init; }

    ///<summary>Hostname of the device. eg: Dave</summary>
    [JsonPropertyName("host_name")]
    public string? HostName { get; init; }

    ///<summary>Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</summary>
    [JsonPropertyName("location_name")]
    public string? LocationName { get; init; }

    ///<summary>GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</summary>
    [JsonPropertyName("gps")]
    public object? Gps { get; init; }

    ///<summary>Accuracy of the GPS coordinates.</summary>
    [JsonPropertyName("gps_accuracy")]
    public long? GpsAccuracy { get; init; }

    ///<summary>Battery level of the device.</summary>
    [JsonPropertyName("battery")]
    public long? Battery { get; init; }
}

public partial class FanServices
{
    private readonly IHaContext _haContext;
    public FanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void DecreaseSpeed(ServiceTarget target, FanDecreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "decrease_speed", target, data);
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="percentageStep">Decreases the speed by a percentage step.</param>
    public void DecreaseSpeed(ServiceTarget target, long? percentageStep = null)
    {
        _haContext.CallService("fan", "decrease_speed", target, new FanDecreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void IncreaseSpeed(ServiceTarget target, FanIncreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "increase_speed", target, data);
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="percentageStep">Increases the speed by a percentage step.</param>
    public void IncreaseSpeed(ServiceTarget target, long? percentageStep = null)
    {
        _haContext.CallService("fan", "increase_speed", target, new FanIncreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void Oscillate(ServiceTarget target, FanOscillateParameters data)
    {
        _haContext.CallService("fan", "oscillate", target, data);
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="oscillating">Turn on/off oscillation.</param>
    public void Oscillate(ServiceTarget target, bool oscillating)
    {
        _haContext.CallService("fan", "oscillate", target, new FanOscillateParameters { Oscillating = oscillating });
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDirection(ServiceTarget target, FanSetDirectionParameters data)
    {
        _haContext.CallService("fan", "set_direction", target, data);
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="direction">Direction to rotate.</param>
    public void SetDirection(ServiceTarget target, object direction)
    {
        _haContext.CallService("fan", "set_direction", target, new FanSetDirectionParameters { Direction = direction });
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPercentage(ServiceTarget target, FanSetPercentageParameters data)
    {
        _haContext.CallService("fan", "set_percentage", target, data);
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="percentage">Speed of the fan.</param>
    public void SetPercentage(ServiceTarget target, long percentage)
    {
        _haContext.CallService("fan", "set_percentage", target, new FanSetPercentageParameters { Percentage = percentage });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, FanSetPresetModeParameters data)
    {
        _haContext.CallService("fan", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("fan", "set_preset_mode", target, new FanSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Toggles the fan on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("fan", "toggle", target);
    }

    ///<summary>Turns fan off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("fan", "turn_off", target);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, FanTurnOnParameters data)
    {
        _haContext.CallService("fan", "turn_on", target, data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="percentage">Speed of the fan.</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public void TurnOn(ServiceTarget target, long? percentage = null, string? presetMode = null)
    {
        _haContext.CallService("fan", "turn_on", target, new FanTurnOnParameters { Percentage = percentage, PresetMode = presetMode });
    }
}

public partial record FanDecreaseSpeedParameters
{
    ///<summary>Decreases the speed by a percentage step.</summary>
    [JsonPropertyName("percentage_step")]
    public long? PercentageStep { get; init; }
}

public partial record FanIncreaseSpeedParameters
{
    ///<summary>Increases the speed by a percentage step.</summary>
    [JsonPropertyName("percentage_step")]
    public long? PercentageStep { get; init; }
}

public partial record FanOscillateParameters
{
    ///<summary>Turn on/off oscillation.</summary>
    [JsonPropertyName("oscillating")]
    public bool? Oscillating { get; init; }
}

public partial record FanSetDirectionParameters
{
    ///<summary>Direction to rotate.</summary>
    [JsonPropertyName("direction")]
    public object? Direction { get; init; }
}

public partial record FanSetPercentageParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public long? Percentage { get; init; }
}

public partial record FanSetPresetModeParameters
{
    ///<summary>Preset mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record FanTurnOnParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public long? Percentage { get; init; }

    ///<summary>Preset mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial class FfmpegServices
{
    private readonly IHaContext _haContext;
    public FfmpegServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a restart command to a ffmpeg based sensor.</summary>
    public void Restart(FfmpegRestartParameters data)
    {
        _haContext.CallService("ffmpeg", "restart", null, data);
    }

    ///<summary>Sends a restart command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will restart. Platform dependent.</param>
    public void Restart(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "restart", null, new FfmpegRestartParameters { EntityId = entityId });
    }

    ///<summary>Sends a start command to a ffmpeg based sensor.</summary>
    public void Start(FfmpegStartParameters data)
    {
        _haContext.CallService("ffmpeg", "start", null, data);
    }

    ///<summary>Sends a start command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will start. Platform dependent.</param>
    public void Start(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "start", null, new FfmpegStartParameters { EntityId = entityId });
    }

    ///<summary>Sends a stop command to a ffmpeg based sensor.</summary>
    public void Stop(FfmpegStopParameters data)
    {
        _haContext.CallService("ffmpeg", "stop", null, data);
    }

    ///<summary>Sends a stop command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will stop. Platform dependent.</param>
    public void Stop(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "stop", null, new FfmpegStopParameters { EntityId = entityId });
    }
}

public partial record FfmpegRestartParameters
{
    ///<summary>Name of entity that will restart. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStartParameters
{
    ///<summary>Name of entity that will start. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStopParameters
{
    ///<summary>Name of entity that will stop. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial class FritzServices
{
    private readonly IHaContext _haContext;
    public FritzServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Remove FRITZ!Box stale device_tracker entities.</summary>
    public void Cleanup(FritzCleanupParameters data)
    {
        _haContext.CallService("fritz", "cleanup", null, data);
    }

    ///<summary>Remove FRITZ!Box stale device_tracker entities.</summary>
    ///<param name="deviceId">Select the Fritz!Box to check.</param>
    public void Cleanup(string deviceId)
    {
        _haContext.CallService("fritz", "cleanup", null, new FritzCleanupParameters { DeviceId = deviceId });
    }

    ///<summary>Reboots your FRITZ!Box.</summary>
    public void Reboot(FritzRebootParameters data)
    {
        _haContext.CallService("fritz", "reboot", null, data);
    }

    ///<summary>Reboots your FRITZ!Box.</summary>
    ///<param name="deviceId">Select the Fritz!Box to reboot.</param>
    public void Reboot(string deviceId)
    {
        _haContext.CallService("fritz", "reboot", null, new FritzRebootParameters { DeviceId = deviceId });
    }

    ///<summary>Reconnects your FRITZ!Box internet connection.</summary>
    public void Reconnect(FritzReconnectParameters data)
    {
        _haContext.CallService("fritz", "reconnect", null, data);
    }

    ///<summary>Reconnects your FRITZ!Box internet connection.</summary>
    ///<param name="deviceId">Select the Fritz!Box to reconnect.</param>
    public void Reconnect(string deviceId)
    {
        _haContext.CallService("fritz", "reconnect", null, new FritzReconnectParameters { DeviceId = deviceId });
    }

    ///<summary>Sets a new password for the guest Wi-Fi. The password must be between 8 and 63 characters long. If no additional parameter is set, the password will be auto-generated with a length of 12 characters.</summary>
    public void SetGuestWifiPassword(FritzSetGuestWifiPasswordParameters data)
    {
        _haContext.CallService("fritz", "set_guest_wifi_password", null, data);
    }

    ///<summary>Sets a new password for the guest Wi-Fi. The password must be between 8 and 63 characters long. If no additional parameter is set, the password will be auto-generated with a length of 12 characters.</summary>
    ///<param name="deviceId">Select the Fritz!Box to configure.</param>
    ///<param name="password">New password for the guest Wi-Fi.</param>
    ///<param name="length">Length of the new password. The password will be auto-generated, if no password is set.</param>
    public void SetGuestWifiPassword(string deviceId, string? password = null, long? length = null)
    {
        _haContext.CallService("fritz", "set_guest_wifi_password", null, new FritzSetGuestWifiPasswordParameters { DeviceId = deviceId, Password = password, Length = length });
    }
}

public partial record FritzCleanupParameters
{
    ///<summary>Select the Fritz!Box to check.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }
}

public partial record FritzRebootParameters
{
    ///<summary>Select the Fritz!Box to reboot.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }
}

public partial record FritzReconnectParameters
{
    ///<summary>Select the Fritz!Box to reconnect.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }
}

public partial record FritzSetGuestWifiPasswordParameters
{
    ///<summary>Select the Fritz!Box to configure.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>New password for the guest Wi-Fi.</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Length of the new password. The password will be auto-generated, if no password is set.</summary>
    [JsonPropertyName("length")]
    public long? Length { get; init; }
}

public partial class FrontendServices
{
    private readonly IHaContext _haContext;
    public FrontendServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads themes from the YAML-configuration.</summary>
    public void ReloadThemes()
    {
        _haContext.CallService("frontend", "reload_themes", null);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    public void SetTheme(FrontendSetThemeParameters data)
    {
        _haContext.CallService("frontend", "set_theme", null, data);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    ///<param name="name">Name of a theme. eg: default</param>
    ///<param name="mode">Theme mode.</param>
    public void SetTheme(object name, object? mode = null)
    {
        _haContext.CallService("frontend", "set_theme", null, new FrontendSetThemeParameters { Name = name, Mode = mode });
    }
}

public partial record FrontendSetThemeParameters
{
    ///<summary>Name of a theme. eg: default</summary>
    [JsonPropertyName("name")]
    public object? Name { get; init; }

    ///<summary>Theme mode.</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }
}

public partial class GoogleAssistantServices
{
    private readonly IHaContext _haContext;
    public GoogleAssistantServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a request_sync command to Google.</summary>
    public void RequestSync(GoogleAssistantRequestSyncParameters data)
    {
        _haContext.CallService("google_assistant", "request_sync", null, data);
    }

    ///<summary>Sends a request_sync command to Google.</summary>
    ///<param name="agentUserId">Only needed for automations. Specific Home Assistant user id (not username, ID in configuration &gt; users &gt; under username) to sync with Google Assistant. Do not need when you call this service through Home Assistant front end or API. Used in automation script or other place where context.user_id is missing.</param>
    public void RequestSync(string? agentUserId = null)
    {
        _haContext.CallService("google_assistant", "request_sync", null, new GoogleAssistantRequestSyncParameters { AgentUserId = agentUserId });
    }
}

public partial record GoogleAssistantRequestSyncParameters
{
    ///<summary>Only needed for automations. Specific Home Assistant user id (not username, ID in configuration &gt; users &gt; under username) to sync with Google Assistant. Do not need when you call this service through Home Assistant front end or API. Used in automation script or other place where context.user_id is missing.</summary>
    [JsonPropertyName("agent_user_id")]
    public string? AgentUserId { get; init; }
}

public partial class GoogleAssistantSdkServices
{
    private readonly IHaContext _haContext;
    public GoogleAssistantSdkServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a command as a text query to Google Assistant.</summary>
    public void SendTextCommand(GoogleAssistantSdkSendTextCommandParameters data)
    {
        _haContext.CallService("google_assistant_sdk", "send_text_command", null, data);
    }

    ///<summary>Sends a command as a text query to Google Assistant.</summary>
    ///<param name="command">Command(s) to send to Google Assistant. eg: turn off kitchen TV</param>
    ///<param name="mediaPlayer">Name(s) of media player entities to play response on. eg: media_player.living_room_speaker</param>
    public void SendTextCommand(string? command = null, string? mediaPlayer = null)
    {
        _haContext.CallService("google_assistant_sdk", "send_text_command", null, new GoogleAssistantSdkSendTextCommandParameters { Command = command, MediaPlayer = mediaPlayer });
    }
}

public partial record GoogleAssistantSdkSendTextCommandParameters
{
    ///<summary>Command(s) to send to Google Assistant. eg: turn off kitchen TV</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Name(s) of media player entities to play response on. eg: media_player.living_room_speaker</summary>
    [JsonPropertyName("media_player")]
    public string? MediaPlayer { get; init; }
}

public partial class GroupServices
{
    private readonly IHaContext _haContext;
    public GroupServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads group configuration, entities, and notify services from YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("group", "reload", null);
    }

    ///<summary>Removes a group.</summary>
    public void Remove(GroupRemoveParameters data)
    {
        _haContext.CallService("group", "remove", null, data);
    }

    ///<summary>Removes a group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    public void Remove(object objectId)
    {
        _haContext.CallService("group", "remove", null, new GroupRemoveParameters { ObjectId = objectId });
    }

    ///<summary>Creates/Updates a user group.</summary>
    public void Set(GroupSetParameters data)
    {
        _haContext.CallService("group", "set", null, data);
    }

    ///<summary>Creates/Updates a user group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    ///<param name="name">Name of the group. eg: My test group</param>
    ///<param name="icon">Name of the icon for the group. eg: mdi:camera</param>
    ///<param name="entities">List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="addEntities">List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="removeEntities">List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="all">Enable this option if the group should only be used when all entities are in state `on`.</param>
    public void Set(string objectId, string? name = null, object? icon = null, IEnumerable<string>? entities = null, IEnumerable<string>? addEntities = null, IEnumerable<string>? removeEntities = null, bool? all = null)
    {
        _haContext.CallService("group", "set", null, new GroupSetParameters { ObjectId = objectId, Name = name, Icon = icon, Entities = entities, AddEntities = addEntities, RemoveEntities = removeEntities, All = all });
    }
}

public partial record GroupRemoveParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public object? ObjectId { get; init; }
}

public partial record GroupSetParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public string? ObjectId { get; init; }

    ///<summary>Name of the group. eg: My test group</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Name of the icon for the group. eg: mdi:camera</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("entities")]
    public IEnumerable<string>? Entities { get; init; }

    ///<summary>List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("add_entities")]
    public IEnumerable<string>? AddEntities { get; init; }

    ///<summary>List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("remove_entities")]
    public IEnumerable<string>? RemoveEntities { get; init; }

    ///<summary>Enable this option if the group should only be used when all entities are in state `on`.</summary>
    [JsonPropertyName("all")]
    public bool? All { get; init; }
}

public partial class HassioServices
{
    private readonly IHaContext _haContext;
    public HassioServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Restarts an add-on.</summary>
    public void AddonRestart(HassioAddonRestartParameters data)
    {
        _haContext.CallService("hassio", "addon_restart", null, data);
    }

    ///<summary>Restarts an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonRestart(object addon)
    {
        _haContext.CallService("hassio", "addon_restart", null, new HassioAddonRestartParameters { Addon = addon });
    }

    ///<summary>Starts an add-on.</summary>
    public void AddonStart(HassioAddonStartParameters data)
    {
        _haContext.CallService("hassio", "addon_start", null, data);
    }

    ///<summary>Starts an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStart(object addon)
    {
        _haContext.CallService("hassio", "addon_start", null, new HassioAddonStartParameters { Addon = addon });
    }

    ///<summary>Writes data to add-on stdin.</summary>
    public void AddonStdin(HassioAddonStdinParameters data)
    {
        _haContext.CallService("hassio", "addon_stdin", null, data);
    }

    ///<summary>Writes data to add-on stdin.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStdin(object addon)
    {
        _haContext.CallService("hassio", "addon_stdin", null, new HassioAddonStdinParameters { Addon = addon });
    }

    ///<summary>Stops an add-on.</summary>
    public void AddonStop(HassioAddonStopParameters data)
    {
        _haContext.CallService("hassio", "addon_stop", null, data);
    }

    ///<summary>Stops an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStop(object addon)
    {
        _haContext.CallService("hassio", "addon_stop", null, new HassioAddonStopParameters { Addon = addon });
    }

    ///<summary>Updates an add-on. This service should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes/change logs before updating an add-on.</summary>
    public void AddonUpdate(HassioAddonUpdateParameters data)
    {
        _haContext.CallService("hassio", "addon_update", null, data);
    }

    ///<summary>Updates an add-on. This service should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes/change logs before updating an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonUpdate(object addon)
    {
        _haContext.CallService("hassio", "addon_update", null, new HassioAddonUpdateParameters { Addon = addon });
    }

    ///<summary>Creates a full backup.</summary>
    public void BackupFull(HassioBackupFullParameters data)
    {
        _haContext.CallService("hassio", "backup_full", null, data);
    }

    ///<summary>Creates a full backup.</summary>
    ///<param name="name">Optional (default = current date and time). eg: Backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from backup</param>
    public void BackupFull(string? name = null, string? password = null, bool? compressed = null, object? location = null, bool? homeassistantExcludeDatabase = null)
    {
        _haContext.CallService("hassio", "backup_full", null, new HassioBackupFullParameters { Name = name, Password = password, Compressed = compressed, Location = location, HomeassistantExcludeDatabase = homeassistantExcludeDatabase });
    }

    ///<summary>Creates a partial backup.</summary>
    public void BackupPartial(HassioBackupPartialParameters data)
    {
        _haContext.CallService("hassio", "backup_partial", null, data);
    }

    ///<summary>Creates a partial backup.</summary>
    ///<param name="homeassistant">Includes Home Assistant settings in the backup.</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from backup</param>
    ///<param name="addons">List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="folders">List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="name">Optional (default = current date and time). eg: Partial backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    public void BackupPartial(bool? homeassistant = null, bool? homeassistantExcludeDatabase = null, object? addons = null, object? folders = null, string? name = null, string? password = null, bool? compressed = null, object? location = null)
    {
        _haContext.CallService("hassio", "backup_partial", null, new HassioBackupPartialParameters { Homeassistant = homeassistant, HomeassistantExcludeDatabase = homeassistantExcludeDatabase, Addons = addons, Folders = folders, Name = name, Password = password, Compressed = compressed, Location = location });
    }

    ///<summary>Reboots the host system.</summary>
    public void HostReboot()
    {
        _haContext.CallService("hassio", "host_reboot", null);
    }

    ///<summary>Powers off the host system.</summary>
    public void HostShutdown()
    {
        _haContext.CallService("hassio", "host_shutdown", null);
    }

    ///<summary>Restores from full backup.</summary>
    public void RestoreFull(HassioRestoreFullParameters data)
    {
        _haContext.CallService("hassio", "restore_full", null, data);
    }

    ///<summary>Restores from full backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestoreFull(string slug, string? password = null)
    {
        _haContext.CallService("hassio", "restore_full", null, new HassioRestoreFullParameters { Slug = slug, Password = password });
    }

    ///<summary>Restores from a partial backup.</summary>
    public void RestorePartial(HassioRestorePartialParameters data)
    {
        _haContext.CallService("hassio", "restore_partial", null, data);
    }

    ///<summary>Restores from a partial backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="homeassistant">Restores Home Assistant.</param>
    ///<param name="folders">List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="addons">List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestorePartial(string slug, bool? homeassistant = null, object? folders = null, object? addons = null, string? password = null)
    {
        _haContext.CallService("hassio", "restore_partial", null, new HassioRestorePartialParameters { Slug = slug, Homeassistant = homeassistant, Folders = folders, Addons = addons, Password = password });
    }
}

public partial record HassioAddonRestartParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStartParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStdinParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStopParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonUpdateParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioBackupFullParameters
{
    ///<summary>Optional (default = current date and time). eg: Backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }

    ///<summary>Exclude the Home Assistant database file from backup</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }
}

public partial record HassioBackupPartialParameters
{
    ///<summary>Includes Home Assistant settings in the backup.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>Exclude the Home Assistant database file from backup</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }

    ///<summary>List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>Optional (default = current date and time). eg: Partial backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }
}

public partial record HassioRestoreFullParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial record HassioRestorePartialParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Restores Home Assistant.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial class HistoryStatsServices
{
    private readonly IHaContext _haContext;
    public HistoryStatsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads history stats sensors from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("history_stats", "reload", null);
    }
}

public partial class HomeassistantServices
{
    private readonly IHaContext _haContext;
    public HomeassistantServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.</summary>
    public void CheckConfig()
    {
        _haContext.CallService("homeassistant", "check_config", null);
    }

    ///<summary>Reload all YAML configuration that can be reloaded without restarting Home Assistant.</summary>
    public void ReloadAll()
    {
        _haContext.CallService("homeassistant", "reload_all", null);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReloadConfigEntry(ServiceTarget target, HomeassistantReloadConfigEntryParameters data)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, data);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="entryId">The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</param>
    public void ReloadConfigEntry(ServiceTarget target, string? entryId = null)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, new HomeassistantReloadConfigEntryParameters { EntryId = entryId });
    }

    ///<summary>Reloads the core configuration from the YAML-configuration.</summary>
    public void ReloadCoreConfig()
    {
        _haContext.CallService("homeassistant", "reload_core_config", null);
    }

    ///<summary>Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.</summary>
    public void ReloadCustomTemplates()
    {
        _haContext.CallService("homeassistant", "reload_custom_templates", null);
    }

    ///<summary>Restarts Home Assistant.</summary>
    public void Restart()
    {
        _haContext.CallService("homeassistant", "restart", null);
    }

    ///<summary>Saves the persistent states immediately. Maintains the normal periodic saving interval.</summary>
    public void SavePersistentStates()
    {
        _haContext.CallService("homeassistant", "save_persistent_states", null);
    }

    ///<summary>Updates the Home Assistant location.</summary>
    public void SetLocation(HomeassistantSetLocationParameters data)
    {
        _haContext.CallService("homeassistant", "set_location", null, data);
    }

    ///<summary>Updates the Home Assistant location.</summary>
    ///<param name="latitude">Latitude of your location. eg: 32.87336</param>
    ///<param name="longitude">Longitude of your location. eg: 117.22743</param>
    ///<param name="elevation">Elevation of your location. eg: 120</param>
    public void SetLocation(long latitude, long longitude, long? elevation = null)
    {
        _haContext.CallService("homeassistant", "set_location", null, new HomeassistantSetLocationParameters { Latitude = latitude, Longitude = longitude, Elevation = elevation });
    }

    ///<summary>Stops Home Assistant.</summary>
    public void Stop()
    {
        _haContext.CallService("homeassistant", "stop", null);
    }

    ///<summary>Generic service to toggle devices on/off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("homeassistant", "toggle", target);
    }

    ///<summary>Generic service to turn devices off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("homeassistant", "turn_off", target);
    }

    ///<summary>Generic service to turn devices on under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("homeassistant", "turn_on", target);
    }

    ///<summary>Forces one or more entities to update its data.</summary>
    ///<param name="target">The target for this service call</param>
    public void UpdateEntity(ServiceTarget target)
    {
        _haContext.CallService("homeassistant", "update_entity", target);
    }
}

public partial record HomeassistantReloadConfigEntryParameters
{
    ///<summary>The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</summary>
    [JsonPropertyName("entry_id")]
    public string? EntryId { get; init; }
}

public partial record HomeassistantSetLocationParameters
{
    ///<summary>Latitude of your location. eg: 32.87336</summary>
    [JsonPropertyName("latitude")]
    public long? Latitude { get; init; }

    ///<summary>Longitude of your location. eg: 117.22743</summary>
    [JsonPropertyName("longitude")]
    public long? Longitude { get; init; }

    ///<summary>Elevation of your location. eg: 120</summary>
    [JsonPropertyName("elevation")]
    public long? Elevation { get; init; }
}

public partial class HumidifierServices
{
    private readonly IHaContext _haContext;
    public HumidifierServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHumidity(ServiceTarget target, HumidifierSetHumidityParameters data)
    {
        _haContext.CallService("humidifier", "set_humidity", target, data);
    }

    ///<summary>Sets the target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="humidity">Target humidity.</param>
    public void SetHumidity(ServiceTarget target, long humidity)
    {
        _haContext.CallService("humidifier", "set_humidity", target, new HumidifierSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets the humidifier operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetMode(ServiceTarget target, HumidifierSetModeParameters data)
    {
        _haContext.CallService("humidifier", "set_mode", target, data);
    }

    ///<summary>Sets the humidifier operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="mode">Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation. eg: away</param>
    public void SetMode(ServiceTarget target, string mode)
    {
        _haContext.CallService("humidifier", "set_mode", target, new HumidifierSetModeParameters { Mode = mode });
    }

    ///<summary>Toggles the humidifier on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("humidifier", "toggle", target);
    }

    ///<summary>Turns the humidifier off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("humidifier", "turn_off", target);
    }

    ///<summary>Turns the humidifier on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("humidifier", "turn_on", target);
    }
}

public partial record HumidifierSetHumidityParameters
{
    ///<summary>Target humidity.</summary>
    [JsonPropertyName("humidity")]
    public long? Humidity { get; init; }
}

public partial record HumidifierSetModeParameters
{
    ///<summary>Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation. eg: away</summary>
    [JsonPropertyName("mode")]
    public string? Mode { get; init; }
}

public partial class InputBooleanServices
{
    private readonly IHaContext _haContext;
    public InputBooleanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_boolean", "reload", null);
    }

    ///<summary>Toggles the helper on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("input_boolean", "toggle", target);
    }

    ///<summary>Turns off the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("input_boolean", "turn_off", target);
    }

    ///<summary>Turns on the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("input_boolean", "turn_on", target);
    }
}

public partial class InputButtonServices
{
    private readonly IHaContext _haContext;
    public InputButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Mimics the physical button press on the device.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target)
    {
        _haContext.CallService("input_button", "press", target);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_button", "reload", null);
    }
}

public partial class InputDatetimeServices
{
    private readonly IHaContext _haContext;
    public InputDatetimeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_datetime", "reload", null);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDatetime(ServiceTarget target, InputDatetimeSetDatetimeParameters data)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public void SetDatetime(ServiceTarget target, string? date = null, DateTime? time = null, string? datetime = null, long? timestamp = null)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public partial record InputDatetimeSetDatetimeParameters
{
    ///<summary>The target date. eg: &quot;2019-04-20&quot;</summary>
    [JsonPropertyName("date")]
    public string? Date { get; init; }

    ///<summary>The target time. eg: &quot;05:04:20&quot;</summary>
    [JsonPropertyName("time")]
    public DateTime? Time { get; init; }

    ///<summary>The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</summary>
    [JsonPropertyName("datetime")]
    public string? Datetime { get; init; }

    ///<summary>The target date &amp; time, expressed by a UNIX timestamp.</summary>
    [JsonPropertyName("timestamp")]
    public long? Timestamp { get; init; }
}

public partial class InputNumberServices
{
    private readonly IHaContext _haContext;
    public InputNumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrements the current value by 1 step.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target)
    {
        _haContext.CallService("input_number", "decrement", target);
    }

    ///<summary>Increments the value by 1 step.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target)
    {
        _haContext.CallService("input_number", "increment", target);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_number", "reload", null);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputNumberSetValueParameters data)
    {
        _haContext.CallService("input_number", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The target value.</param>
    public void SetValue(ServiceTarget target, double value)
    {
        _haContext.CallService("input_number", "set_value", target, new InputNumberSetValueParameters { Value = value });
    }
}

public partial record InputNumberSetValueParameters
{
    ///<summary>The target value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; init; }
}

public partial class InputSelectServices
{
    private readonly IHaContext _haContext;
    public InputSelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_select", "reload", null);
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target)
    {
        _haContext.CallService("input_select", "select_first", target);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target)
    {
        _haContext.CallService("input_select", "select_last", target);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, InputSelectSelectNextParameters data)
    {
        _haContext.CallService("input_select", "select_next", target, data);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_next", target, new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, InputSelectSelectOptionParameters data)
    {
        _haContext.CallService("input_select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, string option)
    {
        _haContext.CallService("input_select", "select_option", target, new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, InputSelectSelectPreviousParameters data)
    {
        _haContext.CallService("input_select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_previous", target, new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetOptions(ServiceTarget target, InputSelectSetOptionsParameters data)
    {
        _haContext.CallService("input_select", "set_options", target, data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public void SetOptions(ServiceTarget target, object options)
    {
        _haContext.CallService("input_select", "set_options", target, new InputSelectSetOptionsParameters { Options = options });
    }
}

public partial record InputSelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public string? Option { get; init; }
}

public partial record InputSelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the last to the first option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSetOptionsParameters
{
    ///<summary>List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial class InputTextServices
{
    private readonly IHaContext _haContext;
    public InputTextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("input_text", "reload", null);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputTextSetValueParameters data)
    {
        _haContext.CallService("input_text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("input_text", "set_value", target, new InputTextSetValueParameters { Value = value });
    }
}

public partial record InputTextSetValueParameters
{
    ///<summary>The target value. eg: This is an example text</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class LawnMowerServices
{
    private readonly IHaContext _haContext;
    public LawnMowerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Stops the mowing task and returns to the dock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Dock(ServiceTarget target)
    {
        _haContext.CallService("lawn_mower", "dock", target);
    }

    ///<summary>Pauses the mowing task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target)
    {
        _haContext.CallService("lawn_mower", "pause", target);
    }

    ///<summary>Starts the mowing task.</summary>
    ///<param name="target">The target for this service call</param>
    public void StartMowing(ServiceTarget target)
    {
        _haContext.CallService("lawn_mower", "start_mowing", target);
    }
}

public partial class LightServices
{
    private readonly IHaContext _haContext;
    public LightServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, LightToggleParameters data)
    {
        _haContext.CallService("light", "toggle", target, data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public void Toggle(ServiceTarget target, long? transition = null, object? rgbColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        _haContext.CallService("light", "toggle", target, new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, LightTurnOffParameters data)
    {
        _haContext.CallService("light", "turn_off", target, data);
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    public void TurnOff(ServiceTarget target, long? transition = null, object? flash = null)
    {
        _haContext.CallService("light", "turn_off", target, new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, LightTurnOnParameters data)
    {
        _haContext.CallService("light", "turn_on", target, data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.</param>
    ///<param name="rgbwColor">The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white. eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor">The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white. eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStep">Change brightness by an amount.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public void TurnOn(ServiceTarget target, long? transition = null, object? rgbColor = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, long? brightnessStep = null, long? brightnessStepPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        _haContext.CallService("light", "turn_on", target, new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, BrightnessStep = brightnessStep, BrightnessStepPct = brightnessStepPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }
}

public partial record LightToggleParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public object? RgbColor { get; init; }

    ///<summary>A human-readable color name.</summary>
    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary>Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary>Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    ///<summary>Color temperature in mireds.</summary>
    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("kelvin")]
    public object? Kelvin { get; init; }

    ///<summary>Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</summary>
    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public long? BrightnessPct { get; init; }

    ///<summary>Set the light to white mode.</summary>
    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary>Name of a light profile to use. eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    ///<summary>Tell light to flash, can be either value short or long.</summary>
    [JsonPropertyName("flash")]
    public object? Flash { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }
}

public partial record LightTurnOffParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>Tell light to flash, can be either value short or long.</summary>
    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial record LightTurnOnParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.</summary>
    [JsonPropertyName("rgb_color")]
    public object? RgbColor { get; init; }

    ///<summary>The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white. eg: [255, 100, 100, 50]</summary>
    [JsonPropertyName("rgbw_color")]
    public object? RgbwColor { get; init; }

    ///<summary>The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white. eg: [255, 100, 100, 50, 70]</summary>
    [JsonPropertyName("rgbww_color")]
    public object? RgbwwColor { get; init; }

    ///<summary>A human-readable color name.</summary>
    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary>Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary>Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    ///<summary>Color temperature in mireds.</summary>
    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("kelvin")]
    public object? Kelvin { get; init; }

    ///<summary>Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</summary>
    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public long? BrightnessPct { get; init; }

    ///<summary>Change brightness by an amount.</summary>
    [JsonPropertyName("brightness_step")]
    public long? BrightnessStep { get; init; }

    ///<summary>Change brightness by a percentage.</summary>
    [JsonPropertyName("brightness_step_pct")]
    public long? BrightnessStepPct { get; init; }

    ///<summary>Set the light to white mode.</summary>
    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary>Name of a light profile to use. eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    ///<summary>Tell light to flash, can be either value short or long.</summary>
    [JsonPropertyName("flash")]
    public object? Flash { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }
}

public partial class LocaltuyaServices
{
    private readonly IHaContext _haContext;
    public LocaltuyaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reload localtuya and reconnect to all devices.</summary>
    public void Reload()
    {
        _haContext.CallService("localtuya", "reload", null);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    public void SetDp(LocaltuyaSetDpParameters data)
    {
        _haContext.CallService("localtuya", "set_dp", null, data);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    ///<param name="deviceId">Device ID of device to change datapoint value for eg: 11100118278aab4de001</param>
    ///<param name="dp">Datapoint index eg: 1</param>
    ///<param name="value">New value to set eg: False</param>
    public void SetDp(object? deviceId = null, object? dp = null, object? value = null)
    {
        _haContext.CallService("localtuya", "set_dp", null, new LocaltuyaSetDpParameters { DeviceId = deviceId, Dp = dp, Value = value });
    }
}

public partial record LocaltuyaSetDpParameters
{
    ///<summary>Device ID of device to change datapoint value for eg: 11100118278aab4de001</summary>
    [JsonPropertyName("device_id")]
    public object? DeviceId { get; init; }

    ///<summary>Datapoint index eg: 1</summary>
    [JsonPropertyName("dp")]
    public object? Dp { get; init; }

    ///<summary>New value to set eg: False</summary>
    [JsonPropertyName("value")]
    public object? Value { get; init; }
}

public partial class LockServices
{
    private readonly IHaContext _haContext;
    public LockServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Lock(ServiceTarget target, LockLockParameters data)
    {
        _haContext.CallService("lock", "lock", target, data);
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code used to lock the lock. eg: 1234</param>
    public void Lock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "lock", target, new LockLockParameters { Code = code });
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Open(ServiceTarget target, LockOpenParameters data)
    {
        _haContext.CallService("lock", "open", target, data);
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code used to open the lock. eg: 1234</param>
    public void Open(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "open", target, new LockOpenParameters { Code = code });
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unlock(ServiceTarget target, LockUnlockParameters data)
    {
        _haContext.CallService("lock", "unlock", target, data);
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="code">Code used to unlock the lock. eg: 1234</param>
    public void Unlock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "unlock", target, new LockUnlockParameters { Code = code });
    }
}

public partial record LockLockParameters
{
    ///<summary>Code used to lock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockOpenParameters
{
    ///<summary>Code used to open the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockUnlockParameters
{
    ///<summary>Code used to unlock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class LogbookServices
{
    private readonly IHaContext _haContext;
    public LogbookServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Creates a custom entry in the logbook.</summary>
    public void Log(LogbookLogParameters data)
    {
        _haContext.CallService("logbook", "log", null, data);
    }

    ///<summary>Creates a custom entry in the logbook.</summary>
    ///<param name="name">Custom name for an entity, can be referenced using an `entity_id`. eg: Kitchen</param>
    ///<param name="message">Message of the logbook entry. eg: is being used</param>
    ///<param name="entityId">Entity to reference in the logbook entry.</param>
    ///<param name="domain">Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry. eg: light</param>
    public void Log(string name, string message, string? entityId = null, string? domain = null)
    {
        _haContext.CallService("logbook", "log", null, new LogbookLogParameters { Name = name, Message = message, EntityId = entityId, Domain = domain });
    }
}

public partial record LogbookLogParameters
{
    ///<summary>Custom name for an entity, can be referenced using an `entity_id`. eg: Kitchen</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Message of the logbook entry. eg: is being used</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Entity to reference in the logbook entry.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry. eg: light</summary>
    [JsonPropertyName("domain")]
    public string? Domain { get; init; }
}

public partial class LoggerServices
{
    private readonly IHaContext _haContext;
    public LoggerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the default log level for integrations.</summary>
    public void SetDefaultLevel(LoggerSetDefaultLevelParameters data)
    {
        _haContext.CallService("logger", "set_default_level", null, data);
    }

    ///<summary>Sets the default log level for integrations.</summary>
    ///<param name="level">Default severity level for all integrations.</param>
    public void SetDefaultLevel(object? level = null)
    {
        _haContext.CallService("logger", "set_default_level", null, new LoggerSetDefaultLevelParameters { Level = level });
    }

    ///<summary>Sets the log level for one or more integrations.</summary>
    public void SetLevel()
    {
        _haContext.CallService("logger", "set_level", null);
    }
}

public partial record LoggerSetDefaultLevelParameters
{
    ///<summary>Default severity level for all integrations.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }
}

public partial class MediaPlayerServices
{
    private readonly IHaContext _haContext;
    public MediaPlayerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Clears the playlist.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearPlaylist(ServiceTarget target)
    {
        _haContext.CallService("media_player", "clear_playlist", target);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The target for this service call</param>
    public void Join(ServiceTarget target, MediaPlayerJoinParameters data)
    {
        _haContext.CallService("media_player", "join", target, data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public void Join(ServiceTarget target, IEnumerable<string> groupMembers)
    {
        _haContext.CallService("media_player", "join", target, new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaNextTrack(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_next_track", target);
    }

    ///<summary>Pauses.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPause(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_pause", target);
    }

    ///<summary>Starts playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlay(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_play", target);
    }

    ///<summary>Toggles play/pause.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlayPause(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_play_pause", target);
    }

    ///<summary>Selects the previous track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPreviousTrack(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_previous_track", target);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaSeek(ServiceTarget target, MediaPlayerMediaSeekParameters data)
    {
        _haContext.CallService("media_player", "media_seek", target, data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public void MediaSeek(ServiceTarget target, double seekPosition)
    {
        _haContext.CallService("media_player", "media_seek", target, new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaStop(ServiceTarget target)
    {
        _haContext.CallService("media_player", "media_stop", target);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayMedia(ServiceTarget target, MediaPlayerPlayMediaParameters data)
    {
        _haContext.CallService("media_player", "play_media", target, data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public void PlayMedia(ServiceTarget target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        _haContext.CallService("media_player", "play_media", target, new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The target for this service call</param>
    public void RepeatSet(ServiceTarget target, MediaPlayerRepeatSetParameters data)
    {
        _haContext.CallService("media_player", "repeat_set", target, data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="repeat">Repeat mode to set.</param>
    public void RepeatSet(ServiceTarget target, object repeat)
    {
        _haContext.CallService("media_player", "repeat_set", target, new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSoundMode(ServiceTarget target, MediaPlayerSelectSoundModeParameters data)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public void SelectSoundMode(ServiceTarget target, string? soundMode = null)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSource(ServiceTarget target, MediaPlayerSelectSourceParameters data)
    {
        _haContext.CallService("media_player", "select_source", target, data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public void SelectSource(ServiceTarget target, string source)
    {
        _haContext.CallService("media_player", "select_source", target, new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The target for this service call</param>
    public void ShuffleSet(ServiceTarget target, MediaPlayerShuffleSetParameters data)
    {
        _haContext.CallService("media_player", "shuffle_set", target, data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public void ShuffleSet(ServiceTarget target, bool shuffle)
    {
        _haContext.CallService("media_player", "shuffle_set", target, new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("media_player", "toggle", target);
    }

    ///<summary>Turns off the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("media_player", "turn_off", target);
    }

    ///<summary>Turns on the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("media_player", "turn_on", target);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unjoin(ServiceTarget target)
    {
        _haContext.CallService("media_player", "unjoin", target);
    }

    ///<summary>Turns down the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeDown(ServiceTarget target)
    {
        _haContext.CallService("media_player", "volume_down", target);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeMute(ServiceTarget target, MediaPlayerVolumeMuteParameters data)
    {
        _haContext.CallService("media_player", "volume_mute", target, data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public void VolumeMute(ServiceTarget target, bool isVolumeMuted)
    {
        _haContext.CallService("media_player", "volume_mute", target, new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeSet(ServiceTarget target, MediaPlayerVolumeSetParameters data)
    {
        _haContext.CallService("media_player", "volume_set", target, data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public void VolumeSet(ServiceTarget target, double volumeLevel)
    {
        _haContext.CallService("media_player", "volume_set", target, new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeUp(ServiceTarget target)
    {
        _haContext.CallService("media_player", "volume_up", target);
    }
}

public partial record MediaPlayerJoinParameters
{
    ///<summary>The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </summary>
    [JsonPropertyName("group_members")]
    public IEnumerable<string>? GroupMembers { get; init; }
}

public partial record MediaPlayerMediaSeekParameters
{
    ///<summary>Target position in the currently playing media. The format is platform dependent.</summary>
    [JsonPropertyName("seek_position")]
    public double? SeekPosition { get; init; }
}

public partial record MediaPlayerPlayMediaParameters
{
    ///<summary>The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</summary>
    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    ///<summary>The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</summary>
    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    ///<summary>If the content should be played now or be added to the queue.</summary>
    [JsonPropertyName("enqueue")]
    public object? Enqueue { get; init; }

    ///<summary>If the media should be played as an announcement. eg: true</summary>
    [JsonPropertyName("announce")]
    public bool? Announce { get; init; }
}

public partial record MediaPlayerRepeatSetParameters
{
    ///<summary>Repeat mode to set.</summary>
    [JsonPropertyName("repeat")]
    public object? Repeat { get; init; }
}

public partial record MediaPlayerSelectSoundModeParameters
{
    ///<summary>Name of the sound mode to switch to. eg: Music</summary>
    [JsonPropertyName("sound_mode")]
    public string? SoundMode { get; init; }
}

public partial record MediaPlayerSelectSourceParameters
{
    ///<summary>Name of the source to switch to. Platform dependent. eg: video1</summary>
    [JsonPropertyName("source")]
    public string? Source { get; init; }
}

public partial record MediaPlayerShuffleSetParameters
{
    ///<summary>Whether or not shuffle mode is enabled.</summary>
    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }
}

public partial record MediaPlayerVolumeMuteParameters
{
    ///<summary>Defines whether or not it is muted.</summary>
    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }
}

public partial record MediaPlayerVolumeSetParameters
{
    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume.</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }
}

public partial class MqttServices
{
    private readonly IHaContext _haContext;
    public MqttServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    public void Dump(MqttDumpParameters data)
    {
        _haContext.CallService("mqtt", "dump", null, data);
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    ///<param name="topic">Topic to listen to. eg: OpenZWave/#</param>
    ///<param name="duration">How long we should listen for messages in seconds.</param>
    public void Dump(string? topic = null, long? duration = null)
    {
        _haContext.CallService("mqtt", "dump", null, new MqttDumpParameters { Topic = topic, Duration = duration });
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    public void Publish(MqttPublishParameters data)
    {
        _haContext.CallService("mqtt", "publish", null, data);
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    ///<param name="topic">Topic to publish to. eg: /homeassistant/hello</param>
    ///<param name="payload">The payload to publish. eg: This is great</param>
    ///<param name="payloadTemplate">Template to render as a payload value. If a payload is provided, the template is ignored. eg: {{ states(&apos;sensor.temperature&apos;) }}</param>
    ///<param name="qos">Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</param>
    ///<param name="retain">If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</param>
    public void Publish(string topic, string? payload = null, object? payloadTemplate = null, object? qos = null, bool? retain = null)
    {
        _haContext.CallService("mqtt", "publish", null, new MqttPublishParameters { Topic = topic, Payload = payload, PayloadTemplate = payloadTemplate, Qos = qos, Retain = retain });
    }

    ///<summary>Reloads MQTT entities from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("mqtt", "reload", null);
    }
}

public partial record MqttDumpParameters
{
    ///<summary>Topic to listen to. eg: OpenZWave/#</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>How long we should listen for messages in seconds.</summary>
    [JsonPropertyName("duration")]
    public long? Duration { get; init; }
}

public partial record MqttPublishParameters
{
    ///<summary>Topic to publish to. eg: /homeassistant/hello</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>The payload to publish. eg: This is great</summary>
    [JsonPropertyName("payload")]
    public string? Payload { get; init; }

    ///<summary>Template to render as a payload value. If a payload is provided, the template is ignored. eg: {{ states(&apos;sensor.temperature&apos;) }}</summary>
    [JsonPropertyName("payload_template")]
    public object? PayloadTemplate { get; init; }

    ///<summary>Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</summary>
    [JsonPropertyName("qos")]
    public object? Qos { get; init; }

    ///<summary>If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</summary>
    [JsonPropertyName("retain")]
    public bool? Retain { get; init; }
}

public partial class NotifyServices
{
    private readonly IHaContext _haContext;
    public NotifyServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a notification message using the envy service.</summary>
    public void Envy(NotifyEnvyParameters data)
    {
        _haContext.CallService("notify", "envy", null, data);
    }

    ///<summary>Sends a notification message using the envy service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Envy(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "envy", null, new NotifyEnvyParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the google_assistant_sdk service.</summary>
    public void GoogleAssistantSdk(NotifyGoogleAssistantSdkParameters data)
    {
        _haContext.CallService("notify", "google_assistant_sdk", null, data);
    }

    ///<summary>Sends a notification message using the google_assistant_sdk service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void GoogleAssistantSdk(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "google_assistant_sdk", null, new NotifyGoogleAssistantSdkParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_moto_g_8_power_lite integration.</summary>
    public void MobileAppMotoG8PowerLite(NotifyMobileAppMotoG8PowerLiteParameters data)
    {
        _haContext.CallService("notify", "mobile_app_moto_g_8_power_lite", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_moto_g_8_power_lite integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppMotoG8PowerLite(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_moto_g_8_power_lite", null, new NotifyMobileAppMotoG8PowerLiteParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_sm_t530 integration.</summary>
    public void MobileAppSmT530(NotifyMobileAppSmT530Parameters data)
    {
        _haContext.CallService("notify", "mobile_app_sm_t530", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_sm_t530 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppSmT530(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_sm_t530", null, new NotifyMobileAppSmT530Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    public void Notify(NotifyNotifyParameters data)
    {
        _haContext.CallService("notify", "notify", null, data);
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Notify(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "notify", null, new NotifyNotifyParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the pc service.</summary>
    public void Pc(NotifyPcParameters data)
    {
        _haContext.CallService("notify", "pc", null, data);
    }

    ///<summary>Sends a notification message using the pc service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Pc(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "pc", null, new NotifyPcParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification that is visible in the **Notifications** panel.</summary>
    public void PersistentNotification(NotifyPersistentNotificationParameters data)
    {
        _haContext.CallService("notify", "persistent_notification", null, data);
    }

    ///<summary>Sends a notification that is visible in the **Notifications** panel.</summary>
    ///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title">Title of the notification. eg: Your Garage Door Friend</param>
    ///<param name="data">Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.. eg: platform specific</param>
    public void PersistentNotification(string message, string? title = null, object? data = null)
    {
        _haContext.CallService("notify", "persistent_notification", null, new NotifyPersistentNotificationParameters { Message = message, Title = title, Data = data });
    }
}

public partial record NotifyEnvyParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyGoogleAssistantSdkParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppMotoG8PowerLiteParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppSmT530Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyNotifyParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyPcParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyPersistentNotificationParameters
{
    ///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Title of the notification. eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.. eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial class NumberServices
{
    private readonly IHaContext _haContext;
    public NumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, NumberSetValueParameters data)
    {
        _haContext.CallService("number", "set_value", target, data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public void SetValue(ServiceTarget target, string? value = null)
    {
        _haContext.CallService("number", "set_value", target, new NumberSetValueParameters { Value = value });
    }
}

public partial record NumberSetValueParameters
{
    ///<summary>The target value to set. eg: 42</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class PersistentNotificationServices
{
    private readonly IHaContext _haContext;
    public PersistentNotificationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Shows a notification on the **Notifications** panel.</summary>
    public void Create(PersistentNotificationCreateParameters data)
    {
        _haContext.CallService("persistent_notification", "create", null, data);
    }

    ///<summary>Shows a notification on the **Notifications** panel.</summary>
    ///<param name="message">Message body of the notification. eg: Please check your configuration.yaml.</param>
    ///<param name="title">Optional title of the notification. eg: Test notification</param>
    ///<param name="notificationId">ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</param>
    public void Create(string message, string? title = null, string? notificationId = null)
    {
        _haContext.CallService("persistent_notification", "create", null, new PersistentNotificationCreateParameters { Message = message, Title = title, NotificationId = notificationId });
    }

    ///<summary>Removes a notification from the **Notifications** panel.</summary>
    public void Dismiss(PersistentNotificationDismissParameters data)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, data);
    }

    ///<summary>Removes a notification from the **Notifications** panel.</summary>
    ///<param name="notificationId">ID of the notification to be removed. eg: 1234</param>
    public void Dismiss(string notificationId)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, new PersistentNotificationDismissParameters { NotificationId = notificationId });
    }

    ///<summary>Removes all notifications from the **Notifications** panel.</summary>
    public void DismissAll()
    {
        _haContext.CallService("persistent_notification", "dismiss_all", null);
    }
}

public partial record PersistentNotificationCreateParameters
{
    ///<summary>Message body of the notification. eg: Please check your configuration.yaml.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Optional title of the notification. eg: Test notification</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial record PersistentNotificationDismissParameters
{
    ///<summary>ID of the notification to be removed. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial class PersonServices
{
    private readonly IHaContext _haContext;
    public PersonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads persons from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("person", "reload", null);
    }
}

public partial class PowercalcServices
{
    private readonly IHaContext _haContext;
    public PowercalcServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The target for this service call</param>
    public void ActivatePlaybook(ServiceTarget target, PowercalcActivatePlaybookParameters data)
    {
        _haContext.CallService("powercalc", "activate_playbook", target, data);
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public void ActivatePlaybook(ServiceTarget target, string playbookId)
    {
        _haContext.CallService("powercalc", "activate_playbook", target, new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The target for this service call</param>
    public void CalibrateEnergy(ServiceTarget target, PowercalcCalibrateEnergyParameters data)
    {
        _haContext.CallService("powercalc", "calibrate_energy", target, data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The value to set. eg: 100</param>
    public void CalibrateEnergy(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "calibrate_energy", target, new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The target for this service call</param>
    public void CalibrateUtilityMeter(ServiceTarget target, PowercalcCalibrateUtilityMeterParameters data)
    {
        _haContext.CallService("powercalc", "calibrate_utility_meter", target, data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">The value to set. eg: 100</param>
    public void CalibrateUtilityMeter(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "calibrate_utility_meter", target, new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Batch change configuration of all Powercalc config entries</summary>
    public void ChangeGuiConfig(PowercalcChangeGuiConfigParameters data)
    {
        _haContext.CallService("powercalc", "change_gui_config", null, data);
    }

    ///<summary>Batch change configuration of all Powercalc config entries</summary>
    ///<param name="field"></param>
    ///<param name="value"></param>
    public void ChangeGuiConfig(object @field, string value)
    {
        _haContext.CallService("powercalc", "change_gui_config", null, new PowercalcChangeGuiConfigParameters { Field = @field, Value = value });
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The target for this service call</param>
    public void IncreaseDailyEnergy(ServiceTarget target, PowercalcIncreaseDailyEnergyParameters data)
    {
        _haContext.CallService("powercalc", "increase_daily_energy", target, data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public void IncreaseDailyEnergy(ServiceTarget target, string value)
    {
        _haContext.CallService("powercalc", "increase_daily_energy", target, new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    ///<param name="target">The target for this service call</param>
    public void ResetEnergy(ServiceTarget target)
    {
        _haContext.CallService("powercalc", "reset_energy", target);
    }

    ///<summary>Stop currently active playbook.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopPlaybook(ServiceTarget target)
    {
        _haContext.CallService("powercalc", "stop_playbook", target);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The target for this service call</param>
    public void SwitchSubProfile(ServiceTarget target, PowercalcSwitchSubProfileParameters data)
    {
        _haContext.CallService("powercalc", "switch_sub_profile", target, data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="profile">Define one of the possible sub profiles eg: nigh_vision</param>
    public void SwitchSubProfile(ServiceTarget target, string profile)
    {
        _haContext.CallService("powercalc", "switch_sub_profile", target, new PowercalcSwitchSubProfileParameters { Profile = profile });
    }
}

public partial record PowercalcActivatePlaybookParameters
{
    ///<summary>Playbook identifier. eg: program1</summary>
    [JsonPropertyName("playbook_id")]
    public string? PlaybookId { get; init; }
}

public partial record PowercalcCalibrateEnergyParameters
{
    ///<summary>The value to set. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcCalibrateUtilityMeterParameters
{
    ///<summary>The value to set. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcChangeGuiConfigParameters
{
    [JsonPropertyName("field")]
    public object? Field { get; init; }

    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcIncreaseDailyEnergyParameters
{
    ///<summary>Amount to add to the sensor. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record PowercalcSwitchSubProfileParameters
{
    ///<summary>Define one of the possible sub profiles eg: nigh_vision</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }
}

public partial class RecorderServices
{
    private readonly IHaContext _haContext;
    public RecorderServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Stops the recording of events and state changes.</summary>
    public void Disable()
    {
        _haContext.CallService("recorder", "disable", null);
    }

    ///<summary>Starts the recording of events and state changes.</summary>
    public void Enable()
    {
        _haContext.CallService("recorder", "enable", null);
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    public void Purge(RecorderPurgeParameters data)
    {
        _haContext.CallService("recorder", "purge", null, data);
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    ///<param name="keepDays">Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</param>
    ///<param name="repack">Attempt to save disk space by rewriting the entire database file.</param>
    ///<param name="applyFilter">Apply `entity_id` and `event_type` filters in addition to time-based purge.</param>
    public void Purge(long? keepDays = null, bool? repack = null, bool? applyFilter = null)
    {
        _haContext.CallService("recorder", "purge", null, new RecorderPurgeParameters { KeepDays = keepDays, Repack = repack, ApplyFilter = applyFilter });
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    ///<param name="target">The target for this service call</param>
    public void PurgeEntities(ServiceTarget target, RecorderPurgeEntitiesParameters data)
    {
        _haContext.CallService("recorder", "purge_entities", target, data);
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="domains">List of domains for which the data needs to be removed from the recorder database. eg: sun</param>
    ///<param name="entityGlobs">List of glob patterns used to select the entities for which the data is to be removed from the recorder database. eg: domain*.object_id*</param>
    ///<param name="keepDays">Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</param>
    public void PurgeEntities(ServiceTarget target, object? domains = null, object? entityGlobs = null, long? keepDays = null)
    {
        _haContext.CallService("recorder", "purge_entities", target, new RecorderPurgeEntitiesParameters { Domains = domains, EntityGlobs = entityGlobs, KeepDays = keepDays });
    }
}

public partial record RecorderPurgeParameters
{
    ///<summary>Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</summary>
    [JsonPropertyName("keep_days")]
    public long? KeepDays { get; init; }

    ///<summary>Attempt to save disk space by rewriting the entire database file.</summary>
    [JsonPropertyName("repack")]
    public bool? Repack { get; init; }

    ///<summary>Apply `entity_id` and `event_type` filters in addition to time-based purge.</summary>
    [JsonPropertyName("apply_filter")]
    public bool? ApplyFilter { get; init; }
}

public partial record RecorderPurgeEntitiesParameters
{
    ///<summary>List of domains for which the data needs to be removed from the recorder database. eg: sun</summary>
    [JsonPropertyName("domains")]
    public object? Domains { get; init; }

    ///<summary>List of glob patterns used to select the entities for which the data is to be removed from the recorder database. eg: domain*.object_id*</summary>
    [JsonPropertyName("entity_globs")]
    public object? EntityGlobs { get; init; }

    ///<summary>Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</summary>
    [JsonPropertyName("keep_days")]
    public long? KeepDays { get; init; }
}

public partial class RemoteServices
{
    private readonly IHaContext _haContext;
    public RemoteServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The target for this service call</param>
    public void DeleteCommand(ServiceTarget target, RemoteDeleteCommandParameters data)
    {
        _haContext.CallService("remote", "delete_command", target, data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public void DeleteCommand(ServiceTarget target, object command, string? device = null)
    {
        _haContext.CallService("remote", "delete_command", target, new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void LearnCommand(ServiceTarget target, RemoteLearnCommandParameters data)
    {
        _haContext.CallService("remote", "learn_command", target, data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public void LearnCommand(ServiceTarget target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        _haContext.CallService("remote", "learn_command", target, new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, RemoteSendCommandParameters data)
    {
        _haContext.CallService("remote", "send_command", target, data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public void SendCommand(ServiceTarget target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        _haContext.CallService("remote", "send_command", target, new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Toggles a device on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("remote", "toggle", target);
    }

    ///<summary>Turns the device off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("remote", "turn_off", target);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, RemoteTurnOnParameters data)
    {
        _haContext.CallService("remote", "turn_on", target, data);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public void TurnOn(ServiceTarget target, string? activity = null)
    {
        _haContext.CallService("remote", "turn_on", target, new RemoteTurnOnParameters { Activity = activity });
    }
}

public partial record RemoteDeleteCommandParameters
{
    ///<summary>Device from which commands will be deleted. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>The single command or the list of commands to be deleted. eg: Mute</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }
}

public partial record RemoteLearnCommandParameters
{
    ///<summary>Device ID to learn command from. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to learn. eg: Turn on</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The type of command to be learned.</summary>
    [JsonPropertyName("command_type")]
    public object? CommandType { get; init; }

    ///<summary>If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</summary>
    [JsonPropertyName("alternative")]
    public bool? Alternative { get; init; }

    ///<summary>Timeout for the command to be learned.</summary>
    [JsonPropertyName("timeout")]
    public long? Timeout { get; init; }
}

public partial record RemoteSendCommandParameters
{
    ///<summary>Device ID to send command to. eg: 32756745</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to send. eg: Play</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The number of times you want to repeat the commands.</summary>
    [JsonPropertyName("num_repeats")]
    public long? NumRepeats { get; init; }

    ///<summary>The time you want to wait in between repeated commands.</summary>
    [JsonPropertyName("delay_secs")]
    public double? DelaySecs { get; init; }

    ///<summary>The time you want to have it held before the release is send.</summary>
    [JsonPropertyName("hold_secs")]
    public double? HoldSecs { get; init; }
}

public partial record RemoteTurnOnParameters
{
    ///<summary>Activity ID or activity name to be started. eg: BedroomTV</summary>
    [JsonPropertyName("activity")]
    public string? Activity { get; init; }
}

public partial class SceneServices
{
    private readonly IHaContext _haContext;
    public SceneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Activates a scene with configuration.</summary>
    public void Apply(SceneApplyParameters data)
    {
        _haContext.CallService("scene", "apply", null, data);
    }

    ///<summary>Activates a scene with configuration.</summary>
    ///<param name="entities">List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void Apply(object entities, long? transition = null)
    {
        _haContext.CallService("scene", "apply", null, new SceneApplyParameters { Entities = entities, Transition = transition });
    }

    ///<summary>Creates a new scene.</summary>
    public void Create(SceneCreateParameters data)
    {
        _haContext.CallService("scene", "create", null, data);
    }

    ///<summary>Creates a new scene.</summary>
    ///<param name="sceneId">The entity ID of the new scene. eg: all_lights</param>
    ///<param name="entities">List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </param>
    ///<param name="snapshotEntities">List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`. eg: - light.ceiling - light.kitchen </param>
    public void Create(string sceneId, object? entities = null, IEnumerable<string>? snapshotEntities = null)
    {
        _haContext.CallService("scene", "create", null, new SceneCreateParameters { SceneId = sceneId, Entities = entities, SnapshotEntities = snapshotEntities });
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void Delete(ServiceTarget target)
    {
        _haContext.CallService("scene", "delete", target);
    }

    ///<summary>Reloads the scenes from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("scene", "reload", null);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SceneTurnOnParameters data)
    {
        _haContext.CallService("scene", "turn_on", target, data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void TurnOn(ServiceTarget target, long? transition = null)
    {
        _haContext.CallService("scene", "turn_on", target, new SceneTurnOnParameters { Transition = transition });
    }
}

public partial record SceneApplyParameters
{
    ///<summary>List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }
}

public partial record SceneCreateParameters
{
    ///<summary>The entity ID of the new scene. eg: all_lights</summary>
    [JsonPropertyName("scene_id")]
    public string? SceneId { get; init; }

    ///<summary>List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`. eg: - light.ceiling - light.kitchen </summary>
    [JsonPropertyName("snapshot_entities")]
    public IEnumerable<string>? SnapshotEntities { get; init; }
}

public partial record SceneTurnOnParameters
{
    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public long? Transition { get; init; }
}

public partial class ScheduleServices
{
    private readonly IHaContext _haContext;
    public ScheduleServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads schedules from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("schedule", "reload", null);
    }
}

public partial class SchedulerServices
{
    private readonly IHaContext _haContext;
    public SchedulerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Create a new schedule entity</summary>
    public void Add(SchedulerAddParameters data)
    {
        _haContext.CallService("scheduler", "add", null, data);
    }

    ///<summary>Create a new schedule entity</summary>
    ///<param name="weekdays">Days of the week for which the schedule should be repeated eg: [&quot;daily&quot;]</param>
    ///<param name="startDate">Date from which schedule should be executed eg: [&quot;2021-01-01&quot;]</param>
    ///<param name="endDate">Date until which schedule should be executed eg: [&quot;2021-12-31&quot;]</param>
    ///<param name="timeslots">list of timeslots with their actions and optionally conditions (should be kept the same for all timeslots) eg: [{start: &quot;12:00&quot;, stop: &quot;13:00&quot;, actions: [{service: &quot;light.turn_on&quot;, entity_id: &quot;light.my_lamp&quot;, service_data: {brightness: 200}}]}]</param>
    ///<param name="repeatType">Control what happens after the schedule is triggered eg: &quot;repeat&quot;</param>
    ///<param name="name">Friendly name for the schedule eg: My schedule</param>
    public void Add(object timeslots, object repeatType, object? weekdays = null, object? startDate = null, object? endDate = null, string? name = null)
    {
        _haContext.CallService("scheduler", "add", null, new SchedulerAddParameters { Weekdays = weekdays, StartDate = startDate, EndDate = endDate, Timeslots = timeslots, RepeatType = repeatType, Name = name });
    }

    ///<summary>Duplicate a schedule entity</summary>
    public void Copy(SchedulerCopyParameters data)
    {
        _haContext.CallService("scheduler", "copy", null, data);
    }

    ///<summary>Duplicate a schedule entity</summary>
    ///<param name="entityId">Identifier of the scheduler entity. eg: switch.schedule_abcdef</param>
    ///<param name="name">Friendly name for the copied schedule eg: My schedule</param>
    public void Copy(string entityId, string? name = null)
    {
        _haContext.CallService("scheduler", "copy", null, new SchedulerCopyParameters { EntityId = entityId, Name = name });
    }

    ///<summary>Edit a schedule entity</summary>
    public void Edit(SchedulerEditParameters data)
    {
        _haContext.CallService("scheduler", "edit", null, data);
    }

    ///<summary>Edit a schedule entity</summary>
    ///<param name="entityId">Identifier of the scheduler entity. eg: switch.schedule_abcdef</param>
    ///<param name="weekdays">Days of the week for which the schedule should be repeated eg: [&quot;daily&quot;]</param>
    ///<param name="startDate">Date from which schedule should be executed eg: [&quot;2021-01-01&quot;]</param>
    ///<param name="endDate">Date until which schedule should be executed eg: [&quot;2021-12-31&quot;]</param>
    ///<param name="timeslots">list of timeslots with their actions and optionally conditions (should be kept the same for all timeslots) eg: [{start: &quot;12:00&quot;, stop: &quot;13:00&quot;, actions: [{service: &quot;light.turn_on&quot;, entity_id: &quot;light.my_lamp&quot;, service_data: {brightness: 200}}]}]</param>
    ///<param name="repeatType">Control what happens after the schedule is triggered eg: &quot;repeat&quot;</param>
    ///<param name="name">Friendly name for the schedule eg: My schedule</param>
    public void Edit(string entityId, object? weekdays = null, object? startDate = null, object? endDate = null, object? timeslots = null, object? repeatType = null, string? name = null)
    {
        _haContext.CallService("scheduler", "edit", null, new SchedulerEditParameters { EntityId = entityId, Weekdays = weekdays, StartDate = startDate, EndDate = endDate, Timeslots = timeslots, RepeatType = repeatType, Name = name });
    }

    ///<summary>Remove a schedule entity</summary>
    public void Remove(SchedulerRemoveParameters data)
    {
        _haContext.CallService("scheduler", "remove", null, data);
    }

    ///<summary>Remove a schedule entity</summary>
    ///<param name="entityId">Identifier of the scheduler entity. eg: switch.schedule_abcdef</param>
    public void Remove(string entityId)
    {
        _haContext.CallService("scheduler", "remove", null, new SchedulerRemoveParameters { EntityId = entityId });
    }

    ///<summary>Execute the action of a schedule, optionally at a given time.</summary>
    public void RunAction(SchedulerRunActionParameters data)
    {
        _haContext.CallService("scheduler", "run_action", null, data);
    }

    ///<summary>Execute the action of a schedule, optionally at a given time.</summary>
    ///<param name="entityId">Identifier of the scheduler entity. eg: switch.schedule_abcdef</param>
    ///<param name="time">Time for which to evaluate the action (only useful for schedules with multiple timeslot) eg: &quot;12:00&quot;</param>
    public void RunAction(string entityId, DateTime? time = null)
    {
        _haContext.CallService("scheduler", "run_action", null, new SchedulerRunActionParameters { EntityId = entityId, Time = time });
    }
}

public partial record SchedulerAddParameters
{
    ///<summary>Days of the week for which the schedule should be repeated eg: [&quot;daily&quot;]</summary>
    [JsonPropertyName("weekdays")]
    public object? Weekdays { get; init; }

    ///<summary>Date from which schedule should be executed eg: [&quot;2021-01-01&quot;]</summary>
    [JsonPropertyName("start_date")]
    public object? StartDate { get; init; }

    ///<summary>Date until which schedule should be executed eg: [&quot;2021-12-31&quot;]</summary>
    [JsonPropertyName("end_date")]
    public object? EndDate { get; init; }

    ///<summary>list of timeslots with their actions and optionally conditions (should be kept the same for all timeslots) eg: [{start: &quot;12:00&quot;, stop: &quot;13:00&quot;, actions: [{service: &quot;light.turn_on&quot;, entity_id: &quot;light.my_lamp&quot;, service_data: {brightness: 200}}]}]</summary>
    [JsonPropertyName("timeslots")]
    public object? Timeslots { get; init; }

    ///<summary>Control what happens after the schedule is triggered eg: &quot;repeat&quot;</summary>
    [JsonPropertyName("repeat_type")]
    public object? RepeatType { get; init; }

    ///<summary>Friendly name for the schedule eg: My schedule</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record SchedulerCopyParameters
{
    ///<summary>Identifier of the scheduler entity. eg: switch.schedule_abcdef</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Friendly name for the copied schedule eg: My schedule</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record SchedulerEditParameters
{
    ///<summary>Identifier of the scheduler entity. eg: switch.schedule_abcdef</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Days of the week for which the schedule should be repeated eg: [&quot;daily&quot;]</summary>
    [JsonPropertyName("weekdays")]
    public object? Weekdays { get; init; }

    ///<summary>Date from which schedule should be executed eg: [&quot;2021-01-01&quot;]</summary>
    [JsonPropertyName("start_date")]
    public object? StartDate { get; init; }

    ///<summary>Date until which schedule should be executed eg: [&quot;2021-12-31&quot;]</summary>
    [JsonPropertyName("end_date")]
    public object? EndDate { get; init; }

    ///<summary>list of timeslots with their actions and optionally conditions (should be kept the same for all timeslots) eg: [{start: &quot;12:00&quot;, stop: &quot;13:00&quot;, actions: [{service: &quot;light.turn_on&quot;, entity_id: &quot;light.my_lamp&quot;, service_data: {brightness: 200}}]}]</summary>
    [JsonPropertyName("timeslots")]
    public object? Timeslots { get; init; }

    ///<summary>Control what happens after the schedule is triggered eg: &quot;repeat&quot;</summary>
    [JsonPropertyName("repeat_type")]
    public object? RepeatType { get; init; }

    ///<summary>Friendly name for the schedule eg: My schedule</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record SchedulerRemoveParameters
{
    ///<summary>Identifier of the scheduler entity. eg: switch.schedule_abcdef</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record SchedulerRunActionParameters
{
    ///<summary>Identifier of the scheduler entity. eg: switch.schedule_abcdef</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Time for which to evaluate the action (only useful for schedules with multiple timeslot) eg: &quot;12:00&quot;</summary>
    [JsonPropertyName("time")]
    public DateTime? Time { get; init; }
}

public partial class ScriptServices
{
    private readonly IHaContext _haContext;
    public ScriptServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public void _1659477669028()
    {
        _haContext.CallService("script", "1659477669028", null);
    }

    public void Actiontodoatalarm()
    {
        _haContext.CallService("script", "actiontodoatalarm", null);
    }

    public void AvVolumeDown()
    {
        _haContext.CallService("script", "av_volume_down", null);
    }

    public void AvVolumeUp()
    {
        _haContext.CallService("script", "av_volume_up", null);
    }

    public void LaunchYoutube()
    {
        _haContext.CallService("script", "launch_youtube", null);
    }

    public void PccancelShutDown()
    {
        _haContext.CallService("script", "pccancel_shut_down", null);
    }

    public void PcturnOffPc()
    {
        _haContext.CallService("script", "pcturn_off_pc", null);
    }

    public void PlayInterfaceSound()
    {
        _haContext.CallService("script", "play_interface_sound", null);
    }

    public void PowerSavingMode()
    {
        _haContext.CallService("script", "power_saving_mode", null);
    }

    public void ReadOutElectricityPrice()
    {
        _haContext.CallService("script", "read_out_electricity_price", null);
    }

    public void ReadoutLasttimeAwoken()
    {
        _haContext.CallService("script", "readout_lasttime_awoken", null);
    }

    public void ReadoutTime()
    {
        _haContext.CallService("script", "readout_time", null);
    }

    ///<summary>Reloads all the available scripts.</summary>
    public void Reload()
    {
        _haContext.CallService("script", "reload", null);
    }

    public void ResetAllPowermeters()
    {
        _haContext.CallService("script", "reset_all_powermeters", null);
    }

    public void RestartModem()
    {
        _haContext.CallService("script", "restart_modem", null);
    }

    ///<summary>Send a audio notification</summary>
    public void SendAudioNotification(ScriptSendAudioNotificationParameters data)
    {
        _haContext.CallService("script", "send_audio_notification", null, data);
    }

    ///<summary>Send a audio notification</summary>
    ///<param name="title">The title of the notification eg: State change</param>
    ///<param name="message">The message content eg: The light is on!</param>
    public void SendAudioNotification(object? title = null, object? message = null)
    {
        _haContext.CallService("script", "send_audio_notification", null, new ScriptSendAudioNotificationParameters { Title = title, Message = message });
    }

    ///<summary>Send a audio notification</summary>
    public void SendAudioNotificationFile(ScriptSendAudioNotificationFileParameters data)
    {
        _haContext.CallService("script", "send_audio_notification_file", null, data);
    }

    ///<summary>Send a audio notification</summary>
    ///<param name="title">The title of the notification eg: State change</param>
    ///<param name="message">The message content eg: The light is on!</param>
    public void SendAudioNotificationFile(object? title = null, object? message = null)
    {
        _haContext.CallService("script", "send_audio_notification_file", null, new ScriptSendAudioNotificationFileParameters { Title = title, Message = message });
    }

    public void Sendishomephonenotification()
    {
        _haContext.CallService("script", "sendishomephonenotification", null);
    }

    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("script", "toggle", target);
    }

    ///<summary>Stops a running script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("script", "turn_off", target);
    }

    public void TurnOffEverything()
    {
        _haContext.CallService("script", "turn_off_everything", null);
    }

    public void TurnOffProxmoxAndServer()
    {
        _haContext.CallService("script", "turn_off_proxmox_and_server", null);
    }

    public void TurnOffServer()
    {
        _haContext.CallService("script", "turn_off_server", null);
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("script", "turn_on", target);
    }

    public void TurnOnServer()
    {
        _haContext.CallService("script", "turn_on_server", null);
    }

    public void TurnOnServerManual()
    {
        _haContext.CallService("script", "turn_on_server_manual", null);
    }
}

public partial record ScriptSendAudioNotificationParameters
{
    ///<summary>The title of the notification eg: State change</summary>
    [JsonPropertyName("title")]
    public object? Title { get; init; }

    ///<summary>The message content eg: The light is on!</summary>
    [JsonPropertyName("message")]
    public object? Message { get; init; }
}

public partial record ScriptSendAudioNotificationFileParameters
{
    ///<summary>The title of the notification eg: State change</summary>
    [JsonPropertyName("title")]
    public object? Title { get; init; }

    ///<summary>The message content eg: The light is on!</summary>
    [JsonPropertyName("message")]
    public object? Message { get; init; }
}

public partial class SelectServices
{
    private readonly IHaContext _haContext;
    public SelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target)
    {
        _haContext.CallService("select", "select_first", target);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target)
    {
        _haContext.CallService("select", "select_last", target);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, SelectSelectNextParameters data)
    {
        _haContext.CallService("select", "select_next", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_next", target, new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, SelectSelectOptionParameters data)
    {
        _haContext.CallService("select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, string option)
    {
        _haContext.CallService("select", "select_option", target, new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, SelectSelectPreviousParameters data)
    {
        _haContext.CallService("select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_previous", target, new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public partial record SelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record SelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public string? Option { get; init; }
}

public partial record SelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the first to the last.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial class ShellCommandServices
{
    private readonly IHaContext _haContext;
    public ShellCommandServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public void TurnOffQnap()
    {
        _haContext.CallService("shell_command", "turn_off_qnap", null);
    }
}

public partial class SirenServices
{
    private readonly IHaContext _haContext;
    public SirenServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles the siren on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("siren", "toggle", target);
    }

    ///<summary>Turns the siren off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("siren", "turn_off", target);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SirenTurnOnParameters data)
    {
        _haContext.CallService("siren", "turn_on", target, data);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="tone">The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</param>
    ///<param name="duration">Number of seconds the sound is played. Must be supported by the integration. eg: 15</param>
    public void TurnOn(ServiceTarget target, string? tone = null, double? volumeLevel = null, string? duration = null)
    {
        _haContext.CallService("siren", "turn_on", target, new SirenTurnOnParameters { Tone = tone, VolumeLevel = volumeLevel, Duration = duration });
    }
}

public partial record SirenTurnOnParameters
{
    ///<summary>The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</summary>
    [JsonPropertyName("tone")]
    public string? Tone { get; init; }

    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    ///<summary>Number of seconds the sound is played. Must be supported by the integration. eg: 15</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class SwitchServices
{
    private readonly IHaContext _haContext;
    public SwitchServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles a switch on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("switch", "toggle", target);
    }

    ///<summary>Turns a switch off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("switch", "turn_off", target);
    }

    ///<summary>Turns a switch on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("switch", "turn_on", target);
    }
}

public partial class SystemLogServices
{
    private readonly IHaContext _haContext;
    public SystemLogServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Clears all log entries.</summary>
    public void Clear()
    {
        _haContext.CallService("system_log", "clear", null);
    }

    ///<summary>Write log entry.</summary>
    public void Write(SystemLogWriteParameters data)
    {
        _haContext.CallService("system_log", "write", null, data);
    }

    ///<summary>Write log entry.</summary>
    ///<param name="message">Message to log. eg: Something went wrong</param>
    ///<param name="level">Log level.</param>
    ///<param name="logger">Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</param>
    public void Write(string message, object? level = null, string? logger = null)
    {
        _haContext.CallService("system_log", "write", null, new SystemLogWriteParameters { Message = message, Level = level, Logger = logger });
    }
}

public partial record SystemLogWriteParameters
{
    ///<summary>Message to log. eg: Something went wrong</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Log level.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }

    ///<summary>Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</summary>
    [JsonPropertyName("logger")]
    public string? Logger { get; init; }
}

public partial class TemplateServices
{
    private readonly IHaContext _haContext;
    public TemplateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads template entities from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("template", "reload", null);
    }
}

public partial class TextServices
{
    private readonly IHaContext _haContext;
    public TextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, TextSetValueParameters data)
    {
        _haContext.CallService("text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("text", "set_value", target, new TextSetValueParameters { Value = value });
    }
}

public partial record TextSetValueParameters
{
    ///<summary>Enter your text. eg: Hello world!</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class TimerServices
{
    private readonly IHaContext _haContext;
    public TimerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Cancels a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Cancel(ServiceTarget target)
    {
        _haContext.CallService("timer", "cancel", target);
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Change(ServiceTarget target, TimerChangeParameters data)
    {
        _haContext.CallService("timer", "change", target, data);
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="duration">Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</param>
    public void Change(ServiceTarget target, string duration)
    {
        _haContext.CallService("timer", "change", target, new TimerChangeParameters { Duration = duration });
    }

    ///<summary>Finishes a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Finish(ServiceTarget target)
    {
        _haContext.CallService("timer", "finish", target);
    }

    ///<summary>Pauses a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target)
    {
        _haContext.CallService("timer", "pause", target);
    }

    ///<summary>Reloads timers from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("timer", "reload", null);
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target, TimerStartParameters data)
    {
        _haContext.CallService("timer", "start", target, data);
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="duration">Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</param>
    public void Start(ServiceTarget target, string? duration = null)
    {
        _haContext.CallService("timer", "start", target, new TimerStartParameters { Duration = duration });
    }
}

public partial record TimerChangeParameters
{
    ///<summary>Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial record TimerStartParameters
{
    ///<summary>Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class TtsServices
{
    private readonly IHaContext _haContext;
    public TtsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes all cached text-to-speech files and purges the memory.</summary>
    public void ClearCache()
    {
        _haContext.CallService("tts", "clear_cache", null);
    }

    ///<summary>Say something using text-to-speech on a media player with google_translate.</summary>
    public void GoogleTranslateSay(TtsGoogleTranslateSayParameters data)
    {
        _haContext.CallService("tts", "google_translate_say", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with google_translate.</summary>
    ///<param name="entityId"></param>
    ///<param name="message"> eg: My name is hanna</param>
    ///<param name="cache"></param>
    ///<param name="language"> eg: ru</param>
    ///<param name="options"> eg: platform specific</param>
    public void GoogleTranslateSay(string entityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "google_translate_say", null, new TtsGoogleTranslateSayParameters { EntityId = entityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Say something using text-to-speech on a media player with picotts.</summary>
    public void PicottsSay(TtsPicottsSayParameters data)
    {
        _haContext.CallService("tts", "picotts_say", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with picotts.</summary>
    ///<param name="entityId"></param>
    ///<param name="message"> eg: My name is hanna</param>
    ///<param name="cache"></param>
    ///<param name="language"> eg: ru</param>
    ///<param name="options"> eg: platform specific</param>
    public void PicottsSay(string entityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "picotts_say", null, new TtsPicottsSayParameters { EntityId = entityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void Speak(ServiceTarget target, TtsSpeakParameters data)
    {
        _haContext.CallService("tts", "speak", target, data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public void Speak(ServiceTarget target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "speak", target, new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public partial record TtsGoogleTranslateSayParameters
{
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary> eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record TtsPicottsSayParameters
{
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary> eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record TtsSpeakParameters
{
    ///<summary>Media players to play the message.</summary>
    [JsonPropertyName("media_player_entity_id")]
    public string? MediaPlayerEntityId { get; init; }

    ///<summary>The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Stores this message locally so that when the text is requested again, the output can be produced more quickly.</summary>
    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary>Language to use for speech generation. eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>A dictionary containing integration-specific options. eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial class UpdateServices
{
    private readonly IHaContext _haContext;
    public UpdateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearSkipped(ServiceTarget target)
    {
        _haContext.CallService("update", "clear_skipped", target);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The target for this service call</param>
    public void Install(ServiceTarget target, UpdateInstallParameters data)
    {
        _haContext.CallService("update", "install", target, data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public void Install(ServiceTarget target, string? version = null, bool? backup = null)
    {
        _haContext.CallService("update", "install", target, new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    ///<param name="target">The target for this service call</param>
    public void Skip(ServiceTarget target)
    {
        _haContext.CallService("update", "skip", target);
    }
}

public partial record UpdateInstallParameters
{
    ///<summary>The version to install. If omitted, the latest version will be installed. eg: 1.0.0</summary>
    [JsonPropertyName("version")]
    public string? Version { get; init; }

    ///<summary>If supported by the integration, this creates a backup before starting the update .</summary>
    [JsonPropertyName("backup")]
    public bool? Backup { get; init; }
}

public partial class UtilityMeterServices
{
    private readonly IHaContext _haContext;
    public UtilityMeterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The target for this service call</param>
    public void Calibrate(ServiceTarget target, UtilityMeterCalibrateParameters data)
    {
        _haContext.CallService("utility_meter", "calibrate", target, data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="value">Value to which set the meter. eg: 100</param>
    public void Calibrate(ServiceTarget target, string value)
    {
        _haContext.CallService("utility_meter", "calibrate", target, new UtilityMeterCalibrateParameters { Value = value });
    }

    ///<summary>Resets all counters of a utility meter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Reset(ServiceTarget target)
    {
        _haContext.CallService("utility_meter", "reset", target);
    }
}

public partial record UtilityMeterCalibrateParameters
{
    ///<summary>Value to which set the meter. eg: 100</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class VacuumServices
{
    private readonly IHaContext _haContext;
    public VacuumServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    ///<param name="target">The target for this service call</param>
    public void CleanSpot(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "clean_spot", target);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    ///<param name="target">The target for this service call</param>
    public void Locate(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "locate", target);
    }

    ///<summary>Pauses the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "pause", target);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReturnToBase(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "return_to_base", target);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, VacuumSendCommandParameters data)
    {
        _haContext.CallService("vacuum", "send_command", target, data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public void SendCommand(ServiceTarget target, string command, object? @params = null)
    {
        _haContext.CallService("vacuum", "send_command", target, new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanSpeed(ServiceTarget target, VacuumSetFanSpeedParameters data)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public void SetFanSpeed(ServiceTarget target, string fanSpeed)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "start", target);
    }

    ///<summary>Starts, pauses, or resumes the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void StartPause(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "start_pause", target);
    }

    ///<summary>Stops the current cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Stop(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "stop", target);
    }

    ///<summary>Toggles the vacuum cleaner on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "toggle", target);
    }

    ///<summary>Stops the current cleaning task and returns to its dock.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "turn_off", target);
    }

    ///<summary>Starts a new cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("vacuum", "turn_on", target);
    }
}

public partial record VacuumSendCommandParameters
{
    ///<summary>Command to execute. The commands are integration-specific. eg: set_dnd_timer</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</summary>
    [JsonPropertyName("params")]
    public object? Params { get; init; }
}

public partial record VacuumSetFanSpeedParameters
{
    ///<summary>Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</summary>
    [JsonPropertyName("fan_speed")]
    public string? FanSpeed { get; init; }
}

public partial class ValveServices
{
    private readonly IHaContext _haContext;
    public ValveServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseValve(ServiceTarget target)
    {
        _haContext.CallService("valve", "close_valve", target);
    }

    ///<summary>Opens a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenValve(ServiceTarget target)
    {
        _haContext.CallService("valve", "open_valve", target);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValvePosition(ServiceTarget target, ValveSetValvePositionParameters data)
    {
        _haContext.CallService("valve", "set_valve_position", target, data);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="position">Target position.</param>
    public void SetValvePosition(ServiceTarget target, long position)
    {
        _haContext.CallService("valve", "set_valve_position", target, new ValveSetValvePositionParameters { Position = position });
    }

    ///<summary>Stops the valve movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopValve(ServiceTarget target)
    {
        _haContext.CallService("valve", "stop_valve", target);
    }

    ///<summary>Toggles a valve open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target)
    {
        _haContext.CallService("valve", "toggle", target);
    }
}

public partial record ValveSetValvePositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public long? Position { get; init; }
}

public partial class WakeOnLanServices
{
    private readonly IHaContext _haContext;
    public WakeOnLanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a &apos;magic packet&apos; to wake up a device with &apos;Wake-On-LAN&apos; capabilities.</summary>
    public void SendMagicPacket(WakeOnLanSendMagicPacketParameters data)
    {
        _haContext.CallService("wake_on_lan", "send_magic_packet", null, data);
    }

    ///<summary>Sends a &apos;magic packet&apos; to wake up a device with &apos;Wake-On-LAN&apos; capabilities.</summary>
    ///<param name="mac">MAC address of the device to wake up. eg: aa:bb:cc:dd:ee:ff</param>
    ///<param name="broadcastAddress">Broadcast IP where to send the magic packet. eg: 192.168.255.255</param>
    ///<param name="broadcastPort">Port where to send the magic packet.</param>
    public void SendMagicPacket(string mac, string? broadcastAddress = null, long? broadcastPort = null)
    {
        _haContext.CallService("wake_on_lan", "send_magic_packet", null, new WakeOnLanSendMagicPacketParameters { Mac = mac, BroadcastAddress = broadcastAddress, BroadcastPort = broadcastPort });
    }
}

public partial record WakeOnLanSendMagicPacketParameters
{
    ///<summary>MAC address of the device to wake up. eg: aa:bb:cc:dd:ee:ff</summary>
    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    ///<summary>Broadcast IP where to send the magic packet. eg: 192.168.255.255</summary>
    [JsonPropertyName("broadcast_address")]
    public string? BroadcastAddress { get; init; }

    ///<summary>Port where to send the magic packet.</summary>
    [JsonPropertyName("broadcast_port")]
    public long? BroadcastPort { get; init; }
}

public partial class WaterHeaterServices
{
    private readonly IHaContext _haContext;
    public WaterHeaterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Turns away mode on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAwayMode(ServiceTarget target, WaterHeaterSetAwayModeParameters data)
    {
        _haContext.CallService("water_heater", "set_away_mode", target, data);
    }

    ///<summary>Turns away mode on/off.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="awayMode">New value of away mode.</param>
    public void SetAwayMode(ServiceTarget target, bool awayMode)
    {
        _haContext.CallService("water_heater", "set_away_mode", target, new WaterHeaterSetAwayModeParameters { AwayMode = awayMode });
    }

    ///<summary>Sets the operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetOperationMode(ServiceTarget target, WaterHeaterSetOperationModeParameters data)
    {
        _haContext.CallService("water_heater", "set_operation_mode", target, data);
    }

    ///<summary>Sets the operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="operationMode">New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</param>
    public void SetOperationMode(ServiceTarget target, string operationMode)
    {
        _haContext.CallService("water_heater", "set_operation_mode", target, new WaterHeaterSetOperationModeParameters { OperationMode = operationMode });
    }

    ///<summary>Sets the target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetTemperature(ServiceTarget target, WaterHeaterSetTemperatureParameters data)
    {
        _haContext.CallService("water_heater", "set_temperature", target, data);
    }

    ///<summary>Sets the target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="temperature">New target temperature for the water heater.</param>
    ///<param name="operationMode">New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</param>
    public void SetTemperature(ServiceTarget target, double temperature, string? operationMode = null)
    {
        _haContext.CallService("water_heater", "set_temperature", target, new WaterHeaterSetTemperatureParameters { Temperature = temperature, OperationMode = operationMode });
    }

    ///<summary>Turns water heater off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target)
    {
        _haContext.CallService("water_heater", "turn_off", target);
    }

    ///<summary>Turns water heater on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target)
    {
        _haContext.CallService("water_heater", "turn_on", target);
    }
}

public partial record WaterHeaterSetAwayModeParameters
{
    ///<summary>New value of away mode.</summary>
    [JsonPropertyName("away_mode")]
    public bool? AwayMode { get; init; }
}

public partial record WaterHeaterSetOperationModeParameters
{
    ///<summary>New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</summary>
    [JsonPropertyName("operation_mode")]
    public string? OperationMode { get; init; }
}

public partial record WaterHeaterSetTemperatureParameters
{
    ///<summary>New target temperature for the water heater.</summary>
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    ///<summary>New value of the operation mode. For a list of possible modes, refer to the integration documentation. eg: eco</summary>
    [JsonPropertyName("operation_mode")]
    public string? OperationMode { get; init; }
}

public partial class WeatherServices
{
    private readonly IHaContext _haContext;
    public WeatherServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Get weather forecast.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetForecast(ServiceTarget target, WeatherGetForecastParameters data)
    {
        _haContext.CallService("weather", "get_forecast", target, data);
    }

    ///<summary>Get weather forecast.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public void GetForecast(ServiceTarget target, object @type)
    {
        _haContext.CallService("weather", "get_forecast", target, new WeatherGetForecastParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetForecasts(ServiceTarget target, WeatherGetForecastsParameters data)
    {
        _haContext.CallService("weather", "get_forecasts", target, data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public void GetForecasts(ServiceTarget target, object @type)
    {
        _haContext.CallService("weather", "get_forecasts", target, new WeatherGetForecastsParameters { Type = @type });
    }
}

public partial record WeatherGetForecastParameters
{
    ///<summary>Forecast type: daily, hourly or twice daily.</summary>
    [JsonPropertyName("type")]
    public object? Type { get; init; }
}

public partial record WeatherGetForecastsParameters
{
    ///<summary>Forecast type: daily, hourly or twice daily.</summary>
    [JsonPropertyName("type")]
    public object? Type { get; init; }
}

public partial class ZoneServices
{
    private readonly IHaContext _haContext;
    public ZoneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads zones from the YAML-configuration.</summary>
    public void Reload()
    {
        _haContext.CallService("zone", "reload", null);
    }
}

public static class AutomationEntityExtensionMethods
{
    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IAutomationEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IEnumerable<IAutomationEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IAutomationEntityCore target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IAutomationEntityCore target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IAutomationEntityCore target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IAutomationEntityCore target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IAutomationEntityCore target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IEnumerable<IAutomationEntityCore> target)
    {
        target.CallService("turn_on");
    }
}

public static class ButtonEntityExtensionMethods
{
    ///<summary>Press the button entity.</summary>
    public static void Press(this IButtonEntityCore target)
    {
        target.CallService("press");
    }

    ///<summary>Press the button entity.</summary>
    public static void Press(this IEnumerable<IButtonEntityCore> target)
    {
        target.CallService("press");
    }
}

public static class CounterEntityExtensionMethods
{
    ///<summary>Decrements a counter.</summary>
    public static void Decrement(this CounterEntity target)
    {
        target.CallService("decrement");
    }

    ///<summary>Decrements a counter.</summary>
    public static void Decrement(this IEnumerable<CounterEntity> target)
    {
        target.CallService("decrement");
    }

    ///<summary>Increments a counter.</summary>
    public static void Increment(this CounterEntity target)
    {
        target.CallService("increment");
    }

    ///<summary>Increments a counter.</summary>
    public static void Increment(this IEnumerable<CounterEntity> target)
    {
        target.CallService("increment");
    }

    ///<summary>Resets a counter.</summary>
    public static void Reset(this CounterEntity target)
    {
        target.CallService("reset");
    }

    ///<summary>Resets a counter.</summary>
    public static void Reset(this IEnumerable<CounterEntity> target)
    {
        target.CallService("reset");
    }

    ///<summary>Sets the counter value.</summary>
    public static void SetValue(this CounterEntity target, CounterSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the counter value.</summary>
    public static void SetValue(this IEnumerable<CounterEntity> target, CounterSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="target">The CounterEntity to call this service for</param>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public static void SetValue(this CounterEntity target, long value)
    {
        target.CallService("set_value", new CounterSetValueParameters { Value = value });
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="target">The IEnumerable&lt;CounterEntity&gt; to call this service for</param>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public static void SetValue(this IEnumerable<CounterEntity> target, long value)
    {
        target.CallService("set_value", new CounterSetValueParameters { Value = value });
    }
}

public static class InputBooleanEntityExtensionMethods
{
    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IInputBooleanEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IEnumerable<IInputBooleanEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IInputBooleanEntityCore target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IEnumerable<IInputBooleanEntityCore> target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IInputBooleanEntityCore target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IEnumerable<IInputBooleanEntityCore> target)
    {
        target.CallService("turn_on");
    }
}

public static class InputDatetimeEntityExtensionMethods
{
    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IInputDatetimeEntityCore target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IInputDatetimeEntityCore to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IInputDatetimeEntityCore target, string? date = null, DateTime? time = null, string? datetime = null, long? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IEnumerable&lt;IInputDatetimeEntityCore&gt; to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, string? date = null, DateTime? time = null, string? datetime = null, long? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public static class InputNumberEntityExtensionMethods
{
    ///<summary>Decrements the current value by 1 step.</summary>
    public static void Decrement(this IInputNumberEntityCore target)
    {
        target.CallService("decrement");
    }

    ///<summary>Decrements the current value by 1 step.</summary>
    public static void Decrement(this IEnumerable<IInputNumberEntityCore> target)
    {
        target.CallService("decrement");
    }

    ///<summary>Increments the value by 1 step.</summary>
    public static void Increment(this IInputNumberEntityCore target)
    {
        target.CallService("increment");
    }

    ///<summary>Increments the value by 1 step.</summary>
    public static void Increment(this IEnumerable<IInputNumberEntityCore> target)
    {
        target.CallService("increment");
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputNumberEntityCore target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputNumberEntityCore to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IInputNumberEntityCore target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputNumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }
}

public static class InputSelectEntityExtensionMethods
{
    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IInputSelectEntityCore target)
    {
        target.CallService("select_first");
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<IInputSelectEntityCore> target)
    {
        target.CallService("select_first");
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IInputSelectEntityCore target)
    {
        target.CallService("select_last");
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<IInputSelectEntityCore> target)
    {
        target.CallService("select_last");
    }

    ///<summary>Select the next option.</summary>
    public static void SelectNext(this IInputSelectEntityCore target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Select the next option.</summary>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IInputSelectEntityCore target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IInputSelectEntityCore target, string option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, string option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IInputSelectEntityCore target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectPrevious(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IInputSelectEntityCore target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IInputSelectEntityCore target, object options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, object options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }
}

public static class InputTextEntityExtensionMethods
{
    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputTextEntityCore target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputTextEntityCore to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IInputTextEntityCore target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputTextEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }
}

public static class LightEntityExtensionMethods
{
    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    public static void Toggle(this ILightEntityCore target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public static void Toggle(this ILightEntityCore target, long? transition = null, object? rgbColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, long? transition = null, object? rgbColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }

    ///<summary>Turn off one or more lights.</summary>
    public static void TurnOff(this ILightEntityCore target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turn off one or more lights.</summary>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    public static void TurnOff(this ILightEntityCore target, long? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, long? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    public static void TurnOn(this ILightEntityCore target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.</param>
    ///<param name="rgbwColor">The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white. eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor">The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white. eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStep">Change brightness by an amount.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public static void TurnOn(this ILightEntityCore target, long? transition = null, object? rgbColor = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, long? brightnessStep = null, long? brightnessStepPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, BrightnessStep = brightnessStep, BrightnessStepPct = brightnessStepPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.</param>
    ///<param name="rgbwColor">The color in RGBW format. A list of four integers between 0 and 255 representing the values of red, green, blue, and white. eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor">The color in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white. eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName">A human-readable color name.</param>
    ///<param name="hsColor">Color in hue/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="xyColor">Color in XY-format. A list of two decimal numbers between 0 and 1. eg: [0.52, 0.43]</param>
    ///<param name="colorTemp">Color temperature in mireds.</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness, and 255 is the maximum brightness.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStep">Change brightness by an amount.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="white">Set the light to white mode.</param>
    ///<param name="profile">Name of a light profile to use. eg: relax</param>
    ///<param name="flash">Tell light to flash, can be either value short or long.</param>
    ///<param name="effect">Light effect.</param>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, long? transition = null, object? rgbColor = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, object? kelvin = null, long? brightness = null, long? brightnessPct = null, long? brightnessStep = null, long? brightnessStepPct = null, object? white = null, string? profile = null, object? flash = null, string? effect = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Kelvin = kelvin, Brightness = brightness, BrightnessPct = brightnessPct, BrightnessStep = brightnessStep, BrightnessStepPct = brightnessStepPct, White = white, Profile = profile, Flash = flash, Effect = effect });
    }
}

public static class LockEntityExtensionMethods
{
    ///<summary>Locks a lock.</summary>
    public static void Lock(this ILockEntityCore target, LockLockParameters data)
    {
        target.CallService("lock", data);
    }

    ///<summary>Locks a lock.</summary>
    public static void Lock(this IEnumerable<ILockEntityCore> target, LockLockParameters data)
    {
        target.CallService("lock", data);
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The ILockEntityCore to call this service for</param>
    ///<param name="code">Code used to lock the lock. eg: 1234</param>
    public static void Lock(this ILockEntityCore target, string? code = null)
    {
        target.CallService("lock", new LockLockParameters { Code = code });
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The IEnumerable&lt;ILockEntityCore&gt; to call this service for</param>
    ///<param name="code">Code used to lock the lock. eg: 1234</param>
    public static void Lock(this IEnumerable<ILockEntityCore> target, string? code = null)
    {
        target.CallService("lock", new LockLockParameters { Code = code });
    }

    ///<summary>Opens a lock.</summary>
    public static void Open(this ILockEntityCore target, LockOpenParameters data)
    {
        target.CallService("open", data);
    }

    ///<summary>Opens a lock.</summary>
    public static void Open(this IEnumerable<ILockEntityCore> target, LockOpenParameters data)
    {
        target.CallService("open", data);
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The ILockEntityCore to call this service for</param>
    ///<param name="code">Code used to open the lock. eg: 1234</param>
    public static void Open(this ILockEntityCore target, string? code = null)
    {
        target.CallService("open", new LockOpenParameters { Code = code });
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The IEnumerable&lt;ILockEntityCore&gt; to call this service for</param>
    ///<param name="code">Code used to open the lock. eg: 1234</param>
    public static void Open(this IEnumerable<ILockEntityCore> target, string? code = null)
    {
        target.CallService("open", new LockOpenParameters { Code = code });
    }

    ///<summary>Unlocks a lock.</summary>
    public static void Unlock(this ILockEntityCore target, LockUnlockParameters data)
    {
        target.CallService("unlock", data);
    }

    ///<summary>Unlocks a lock.</summary>
    public static void Unlock(this IEnumerable<ILockEntityCore> target, LockUnlockParameters data)
    {
        target.CallService("unlock", data);
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The ILockEntityCore to call this service for</param>
    ///<param name="code">Code used to unlock the lock. eg: 1234</param>
    public static void Unlock(this ILockEntityCore target, string? code = null)
    {
        target.CallService("unlock", new LockUnlockParameters { Code = code });
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The IEnumerable&lt;ILockEntityCore&gt; to call this service for</param>
    ///<param name="code">Code used to unlock the lock. eg: 1234</param>
    public static void Unlock(this IEnumerable<ILockEntityCore> target, string? code = null)
    {
        target.CallService("unlock", new LockUnlockParameters { Code = code });
    }
}

public static class MediaPlayerEntityExtensionMethods
{
    ///<summary>Clears the playlist.</summary>
    public static void ClearPlaylist(this IMediaPlayerEntityCore target)
    {
        target.CallService("clear_playlist");
    }

    ///<summary>Clears the playlist.</summary>
    public static void ClearPlaylist(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("clear_playlist");
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IMediaPlayerEntityCore target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IMediaPlayerEntityCore target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_next_track");
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_next_track");
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_pause");
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_pause");
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_play");
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_play");
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_play_pause");
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_play_pause");
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_previous_track");
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_previous_track");
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IMediaPlayerEntityCore target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IMediaPlayerEntityCore target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IMediaPlayerEntityCore target)
    {
        target.CallService("media_stop");
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("media_stop");
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IMediaPlayerEntityCore target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IMediaPlayerEntityCore target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    public static void RepeatSet(this IMediaPlayerEntityCore target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="repeat">Repeat mode to set.</param>
    public static void RepeatSet(this IMediaPlayerEntityCore target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="repeat">Repeat mode to set.</param>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IMediaPlayerEntityCore target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IMediaPlayerEntityCore target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IMediaPlayerEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IMediaPlayerEntityCore target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IMediaPlayerEntityCore target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IMediaPlayerEntityCore target)
    {
        target.CallService("unjoin");
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("unjoin");
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IMediaPlayerEntityCore target)
    {
        target.CallService("volume_down");
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("volume_down");
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IMediaPlayerEntityCore target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IMediaPlayerEntityCore target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IMediaPlayerEntityCore target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IMediaPlayerEntityCore target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IMediaPlayerEntityCore target)
    {
        target.CallService("volume_up");
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IEnumerable<IMediaPlayerEntityCore> target)
    {
        target.CallService("volume_up");
    }
}

public static class NumberEntityExtensionMethods
{
    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this INumberEntityCore target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The INumberEntityCore to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this INumberEntityCore target, string? value = null)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The IEnumerable&lt;INumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, string? value = null)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }
}

public static class PowercalcEntityExtensionMethods
{
    ///<summary>Start execution of a playbook.</summary>
    public static void ActivatePlaybook(this ISensorEntityCore target, PowercalcActivatePlaybookParameters data)
    {
        target.CallService("activate_playbook", data);
    }

    ///<summary>Start execution of a playbook.</summary>
    public static void ActivatePlaybook(this IEnumerable<ISensorEntityCore> target, PowercalcActivatePlaybookParameters data)
    {
        target.CallService("activate_playbook", data);
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public static void ActivatePlaybook(this ISensorEntityCore target, string playbookId)
    {
        target.CallService("activate_playbook", new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Start execution of a playbook.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="playbookId">Playbook identifier. eg: program1</param>
    public static void ActivatePlaybook(this IEnumerable<ISensorEntityCore> target, string playbookId)
    {
        target.CallService("activate_playbook", new PowercalcActivatePlaybookParameters { PlaybookId = playbookId });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    public static void CalibrateEnergy(this ISensorEntityCore target, PowercalcCalibrateEnergyParameters data)
    {
        target.CallService("calibrate_energy", data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    public static void CalibrateEnergy(this IEnumerable<ISensorEntityCore> target, PowercalcCalibrateEnergyParameters data)
    {
        target.CallService("calibrate_energy", data);
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateEnergy(this ISensorEntityCore target, string value)
    {
        target.CallService("calibrate_energy", new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Sets the energy sensor to a given kWh value.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateEnergy(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("calibrate_energy", new PowercalcCalibrateEnergyParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void CalibrateUtilityMeter(this ISensorEntityCore target, PowercalcCalibrateUtilityMeterParameters data)
    {
        target.CallService("calibrate_utility_meter", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void CalibrateUtilityMeter(this IEnumerable<ISensorEntityCore> target, PowercalcCalibrateUtilityMeterParameters data)
    {
        target.CallService("calibrate_utility_meter", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateUtilityMeter(this ISensorEntityCore target, string value)
    {
        target.CallService("calibrate_utility_meter", new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">The value to set. eg: 100</param>
    public static void CalibrateUtilityMeter(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("calibrate_utility_meter", new PowercalcCalibrateUtilityMeterParameters { Value = value });
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    public static void IncreaseDailyEnergy(this ISensorEntityCore target, PowercalcIncreaseDailyEnergyParameters data)
    {
        target.CallService("increase_daily_energy", data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    public static void IncreaseDailyEnergy(this IEnumerable<ISensorEntityCore> target, PowercalcIncreaseDailyEnergyParameters data)
    {
        target.CallService("increase_daily_energy", data);
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public static void IncreaseDailyEnergy(this ISensorEntityCore target, string value)
    {
        target.CallService("increase_daily_energy", new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Increases the sensor with a given amount.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">Amount to add to the sensor. eg: 100</param>
    public static void IncreaseDailyEnergy(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("increase_daily_energy", new PowercalcIncreaseDailyEnergyParameters { Value = value });
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    public static void ResetEnergy(this ISensorEntityCore target)
    {
        target.CallService("reset_energy");
    }

    ///<summary>Reset an energy sensor to zero kWh.</summary>
    public static void ResetEnergy(this IEnumerable<ISensorEntityCore> target)
    {
        target.CallService("reset_energy");
    }

    ///<summary>Stop currently active playbook.</summary>
    public static void StopPlaybook(this ISensorEntityCore target)
    {
        target.CallService("stop_playbook");
    }

    ///<summary>Stop currently active playbook.</summary>
    public static void StopPlaybook(this IEnumerable<ISensorEntityCore> target)
    {
        target.CallService("stop_playbook");
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    public static void SwitchSubProfile(this ISensorEntityCore target, PowercalcSwitchSubProfileParameters data)
    {
        target.CallService("switch_sub_profile", data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    public static void SwitchSubProfile(this IEnumerable<ISensorEntityCore> target, PowercalcSwitchSubProfileParameters data)
    {
        target.CallService("switch_sub_profile", data);
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="profile">Define one of the possible sub profiles eg: nigh_vision</param>
    public static void SwitchSubProfile(this ISensorEntityCore target, string profile)
    {
        target.CallService("switch_sub_profile", new PowercalcSwitchSubProfileParameters { Profile = profile });
    }

    ///<summary>Some profiles in the library has different sub profiles. This service allows you to switch to another one.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="profile">Define one of the possible sub profiles eg: nigh_vision</param>
    public static void SwitchSubProfile(this IEnumerable<ISensorEntityCore> target, string profile)
    {
        target.CallService("switch_sub_profile", new PowercalcSwitchSubProfileParameters { Profile = profile });
    }
}

public static class RemoteEntityExtensionMethods
{
    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IRemoteEntityCore target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IRemoteEntityCore target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IRemoteEntityCore target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IRemoteEntityCore target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IRemoteEntityCore target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IRemoteEntityCore target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null, long? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Toggles a device on/off.</summary>
    public static void Toggle(this IRemoteEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggles a device on/off.</summary>
    public static void Toggle(this IEnumerable<IRemoteEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Turns the device off.</summary>
    public static void TurnOff(this IRemoteEntityCore target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns the device off.</summary>
    public static void TurnOff(this IEnumerable<IRemoteEntityCore> target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Sends the power on command.</summary>
    public static void TurnOn(this IRemoteEntityCore target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the power on command.</summary>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IRemoteEntityCore target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }
}

public static class SceneEntityExtensionMethods
{
    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this ISceneEntityCore target)
    {
        target.CallService("delete");
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this IEnumerable<ISceneEntityCore> target)
    {
        target.CallService("delete");
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this ISceneEntityCore target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The ISceneEntityCore to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this ISceneEntityCore target, long? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The IEnumerable&lt;ISceneEntityCore&gt; to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, long? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }
}

public static class ScriptEntityExtensionMethods
{
    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    public static void Toggle(this IScriptEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    public static void Toggle(this IEnumerable<IScriptEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Stops a running script.</summary>
    public static void TurnOff(this IScriptEntityCore target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Stops a running script.</summary>
    public static void TurnOff(this IEnumerable<IScriptEntityCore> target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    public static void TurnOn(this IScriptEntityCore target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    public static void TurnOn(this IEnumerable<IScriptEntityCore> target)
    {
        target.CallService("turn_on");
    }
}

public static class SelectEntityExtensionMethods
{
    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this ISelectEntityCore target)
    {
        target.CallService("select_first");
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<ISelectEntityCore> target)
    {
        target.CallService("select_first");
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this ISelectEntityCore target)
    {
        target.CallService("select_last");
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<ISelectEntityCore> target)
    {
        target.CallService("select_last");
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this ISelectEntityCore target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this ISelectEntityCore target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this ISelectEntityCore target, string option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, string option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this ISelectEntityCore target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public static class SwitchEntityExtensionMethods
{
    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this ISwitchEntityCore target)
    {
        target.CallService("toggle");
    }

    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this IEnumerable<ISwitchEntityCore> target)
    {
        target.CallService("toggle");
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this ISwitchEntityCore target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this IEnumerable<ISwitchEntityCore> target)
    {
        target.CallService("turn_off");
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this ISwitchEntityCore target)
    {
        target.CallService("turn_on");
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this IEnumerable<ISwitchEntityCore> target)
    {
        target.CallService("turn_on");
    }
}

public static class TtsEntityExtensionMethods
{
    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this TtsEntity target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this IEnumerable<TtsEntity> target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The TtsEntity to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this TtsEntity target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The IEnumerable&lt;TtsEntity&gt; to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this IEnumerable<TtsEntity> target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public static class UpdateEntityExtensionMethods
{
    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IUpdateEntityCore target)
    {
        target.CallService("clear_skipped");
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IEnumerable<IUpdateEntityCore> target)
    {
        target.CallService("clear_skipped");
    }

    ///<summary>Installs an update for this device or service.</summary>
    public static void Install(this IUpdateEntityCore target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The IUpdateEntityCore to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public static void Install(this IUpdateEntityCore target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The IEnumerable&lt;IUpdateEntityCore&gt; to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IUpdateEntityCore target)
    {
        target.CallService("skip");
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IEnumerable<IUpdateEntityCore> target)
    {
        target.CallService("skip");
    }
}

public static class UtilityMeterEntityExtensionMethods
{
    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void Calibrate(this ISensorEntityCore target, UtilityMeterCalibrateParameters data)
    {
        target.CallService("calibrate", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    public static void Calibrate(this IEnumerable<ISensorEntityCore> target, UtilityMeterCalibrateParameters data)
    {
        target.CallService("calibrate", data);
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="value">Value to which set the meter. eg: 100</param>
    public static void Calibrate(this ISensorEntityCore target, string value)
    {
        target.CallService("calibrate", new UtilityMeterCalibrateParameters { Value = value });
    }

    ///<summary>Calibrates a utility meter sensor.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="value">Value to which set the meter. eg: 100</param>
    public static void Calibrate(this IEnumerable<ISensorEntityCore> target, string value)
    {
        target.CallService("calibrate", new UtilityMeterCalibrateParameters { Value = value });
    }

    ///<summary>Resets all counters of a utility meter.</summary>
    public static void Reset(this ISelectEntityCore target)
    {
        target.CallService("reset");
    }

    ///<summary>Resets all counters of a utility meter.</summary>
    public static void Reset(this IEnumerable<ISelectEntityCore> target)
    {
        target.CallService("reset");
    }
}

public static class WeatherEntityExtensionMethods
{
    ///<summary>Get weather forecast.</summary>
    public static void GetForecast(this IWeatherEntityCore target, WeatherGetForecastParameters data)
    {
        target.CallService("get_forecast", data);
    }

    ///<summary>Get weather forecast.</summary>
    public static void GetForecast(this IEnumerable<IWeatherEntityCore> target, WeatherGetForecastParameters data)
    {
        target.CallService("get_forecast", data);
    }

    ///<summary>Get weather forecast.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecast(this IWeatherEntityCore target, object @type)
    {
        target.CallService("get_forecast", new WeatherGetForecastParameters { Type = @type });
    }

    ///<summary>Get weather forecast.</summary>
    ///<param name="target">The IEnumerable&lt;IWeatherEntityCore&gt; to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecast(this IEnumerable<IWeatherEntityCore> target, object @type)
    {
        target.CallService("get_forecast", new WeatherGetForecastParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    public static void GetForecasts(this IWeatherEntityCore target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Get weather forecasts.</summary>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecasts(this IWeatherEntityCore target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The IEnumerable&lt;IWeatherEntityCore&gt; to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }
}